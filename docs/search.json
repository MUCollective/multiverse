[{"path":"http://mucollective.github.io/multiverse/articles/branch.html","id":"branches-in-a-multiverse-analysis","dir":"Articles","previous_headings":"","what":"Branches in a multiverse analysis","title":"A discussion on branches in the multiverse","text":"multiverse analysis, researchers identify sets defensible analysis choices (e.g., different ways excluding outliers, different data transformations), implement , report outcomes analyses resulting possible choice combinations. Thus, multiverse analysis consists different paths branches analysis problem. example branch might arise analysis, let’s say variable, xx, can assume value 1 60. want discretise variable two ordinal categories — high (x >= 30) low (x < 30). However, another researcher might argue discretising variable three ordinal categories — high (x >= 40), medium (20 <= x < 40), low (x < 20). important aspect package make declaring branches analysis natural convenient. branch identified parameter, can take two options. Thus, different options different branches within multiverse. , show user can specify two alternative analysis paths using multiverse library. , first create multiverse object, M: Let us define variable x: can use branch() function specify two alternatives follows: Now, can inspect multiverse object see options created. , see multiverse object contains two alternative analysis paths, one different option discretisation.","code":"M = multiverse() x = rnorm(100, 30, 10) y <- branch(   discretisation,   \"two_levels\" ~ ifelse(x < 30, \"low\", \"high\"),   \"three_levels\" ~ ifelse(x < 20, \"low\", ifelse(x > 40, \"high\", \"medium\")) ) ```{multiverse default-m-0, inside = M} y = branch(discretisation,        \"two_levels\" ~ ifelse(x < 30, \"low\", \"high\"),       \"three_levels\" ~ ifelse(x < 20, \"low\", ifelse(x > 40, \"high\", \"medium\"))     ) ``` expand(M) ## # A tibble: 2 × 6 ##   .universe discretisation .parameter_assignment .code        .results .errors   ##       <int> <chr>          <list>                <list>       <list>   <list>    ## 1         1 two_levels     <named list [1]>      <named list> <env>    <lgl [1]> ## 2         2 three_levels   <named list [1]>      <named list> <env>    <lgl [1]>"},{"path":"http://mucollective.github.io/multiverse/articles/branch.html","id":"the-syntax-for-declaring-a-branch","dir":"Articles","previous_headings":"Branches in a multiverse analysis","what":"The syntax for declaring a branch()","title":"A discussion on branches in the multiverse","text":"branch() function accepts three arguments—first argument defines parameter (discretisation) used unique identifier decision point. subsequent arguments, refer options, define different choices researcher can make decision point analysis; follow syntax <option_name> ~ <option_definition>. <option_name> part intended support meaningful naming branches help user keep track choices. (multiverse specification , “two_levels”, “three_levels” used option names). However, names can omitted; omitted, entire syntax performing operation treated name particular option. Note vignette, make use multiverse code chunks, custom engine designed work multiverse package, implement multiverse analyses. Please refer vignette (vignette(\"multiverse--rmd\")) details. Users instead make use function suited script-style implementation. Please refer README refer vignette(\"example-durante\") details.","code":""},{"path":"http://mucollective.github.io/multiverse/articles/branch.html","id":"diving-deeper-the-multiverse-compiler","dir":"Articles","previous_headings":"","what":"Diving deeper: the multiverse compiler","title":"A discussion on branches in the multiverse","text":"section, go little detail branch() function used multiverse create two distinct end--end analysis paths user-specified syntax. can skip next section specific implementation details multiverse library interest . Multiverse captures user’s declared code unevaluated expression, internal representation abstract syntax tree used R meta-programming purposes. need dedicated multiverse code chunk inside() function, boilerplate allows us prevent code executed R directly. multiverse compiler transforms unevaluated expressions multiple unique R expressions, one every possible analysis path multiverse. done two steps. First, multiverse enumerates possible valid parameter assignments. parameter assignment consists single assignment option parameter. Valid parameter assignments satisfy procedural dependencies (e.g., %% clauses). parameter assignment corresponds single possible analysis path multiverse, words single universe. Second, multiverse takes universe uses parameter assignment recursively rewrite unevaluated multiverse code expression code specifically universe. replacing branch() subexpression subexpression corresponding parameter assignment branch. use tree structure store output multiverse compiler, level tree corresponding single unit multiverse. analyst using multiverse code chunks, unit single code chunk; user using inside(), unit one call inside(). user declares first unit one parameters, enumerate combinations options form children singular root node, prune paths incompatible declared procedural dependencies. subsequent level, enumerate newly declared combinations options, added existing node previous level children, followed pruning inconsistent analysis paths. Thus, declare multiverse mparametersm parameters, 1 parameter per unit average, noptionsn options per parameter average, multiverse mnmn distinct analyses tree approximately m(n+1)−mm−1\\frac{m^(n+1) - m}{m-1} nodes. node tree contains: (1) parameter assignment—dictionary mapping parameter onto assigned option analysis paths passing node; (2) unevaluated R expression current unit created using parameter assignment node; (3) unique R environment, child environment parent node’s environment. R, environments mutable dictionaries encapsulate variable state power scoping language (see https://adv-r.hadley.nz/environments.html); code R executed inside environment determines variables defined code values assigned variables. Moreover, every environment parent environment, variable bindings parent environment accessible via child environments. execute node environment. share parent environments nodes level tree, two nodes children parent node automatically results parent node’s computation available execution environment, avoiding redundant computation. Consequently, reduce execution time naive approach executing analysis paths separately (O(nmn)O(nm^n)) executing just code node tree: O(m(n+1)−mm−1)O(\\frac{m^(n+1) - m}{m - 1})","code":""},{"path":"http://mucollective.github.io/multiverse/articles/branch.html","id":"going-back-to-branches","dir":"Articles","previous_headings":"","what":"Going back to branches","title":"A discussion on branches in the multiverse","text":"branch may defined : Data substitution parameters offer switch different raw datasets, either collected simulated. Data processing parameters offer process raw data different ways analyzed. Modeling parameters offer different ways analyzing processed data Presentation parameters offer different ways presenting analysis outcomes rest document describe different ways declaring branch, using different syntactical styles popular R users, including base R syntax tidyverse syntax.","code":""},{"path":"http://mucollective.github.io/multiverse/articles/branch.html","id":"example-1-a-branch-within-functions-in-a-pipe","dir":"Articles","previous_headings":"","what":"Example 1: A branch within functions in a “pipe”: %>%","title":"A discussion on branches in the multiverse","text":"Let’s say data indicates amount time spent user four different conditions indexed 1, 2, 3 4 (modality column following dataset). first load data convert column factor integer. create multiverse object analysis data variable duration approximately normally distributed, however, common data long right-tail. using regression model, can choose either log-transform data, assume normally distribution analyse . can perform analysis multiverse declaring two branches — one variable log-transformed . expand shows two rows data transform branch correspond two different reasonable alternatives transforming time spent data. look code column, list expressions, see variable duration defined two separate ways, one row multiverse table. words, alternate analysis path, one get executed duration variable transformed analysis path.","code":"data(\"userlogs\") data.userlogs.raw = userlogs %>%   mutate( modality = factor(modality) ) %>%   arrange( modality ) M = multiverse() df <- data.userlogs.raw %>%   select(modality, duration) %>%   mutate(duration = branch(     data_transform,     \"none\" ~ duration,     \"log\" ~ log(duration)   )) ```{multiverse default-m-1, inside = M} df <- data.userlogs.raw %>%     select(modality, duration) %>%     mutate( duration = branch( data_transform,          \"none\" ~ duration,         \"log\" ~ log(duration)     )) ``` expand(M) ## # A tibble: 2 × 6 ##   .universe data_transform .parameter_assignment .code        .results .errors   ##       <int> <chr>          <list>                <list>       <list>   <list>    ## 1         1 none           <named list [1]>      <named list> <env>    <lgl [1]> ## 2         2 log            <named list [1]>      <named list> <env>    <lgl [1]> expand(M)$.code ## [[1]] ## [[1]]$`h-1` ## { ##     df <- data.userlogs.raw %>% select(modality, duration) %>%  ##         mutate(duration = duration) ## } ##  ##  ## [[2]] ## [[2]]$`h-1` ## { ##     df <- data.userlogs.raw %>% select(modality, duration) %>%  ##         mutate(duration = log(duration)) ## }"},{"path":"http://mucollective.github.io/multiverse/articles/branch.html","id":"example-2-another-branch-within-a-function","dir":"Articles","previous_headings":"","what":"Example 2: Another branch within a function","title":"A discussion on branches in the multiverse","text":"Recall hurricane example README. example, researchers faced decision hurricanes exclude outliers. decide exclude two hurricanes caused deaths. However, may possible ways removing outliers based extreme number deaths: exclusion Remove one extreme hurricane Remove two extreme hurricanes decision node multiverse analysis can thus declared : can inspect multiverse object see declared analysis paths:","code":"M = multiverse() # here we just create the variable `df` in the multiverse data(\"hurricane\")  hurricane_data <- hurricane %>%   # rename some variables   rename(     year = Year,     name = Name,     dam = NDAM,     death = alldeaths,     female = Gender_MF,     masfem = MasFem,     category = Category,     pressure = Minpressure_Updated_2014,     wind = HighestWindSpeed   )  # here, we perform a `filter` operation in the multiverse df.filtered <- hurricane_data %>%   filter(branch(     death_outliers,     \"no_exclusion\" ~ TRUE,     \"most_extreme\" ~ name != \"Katrina\",     \"two_most_extreme\" ~ !(name %in% c(\"Katrina\", \"Audrey\"))   )) ```{multiverse default-m-2, inside = M} # here we just create the variable `df` in the multiverse df = data(\"hurricane\")  hurricane_data = hurricane %>%     # rename some variables     rename(         year = Year,         name = Name,         dam = NDAM,         death = alldeaths,         female = Gender_MF,         masfem = MasFem,         category = Category,         pressure = Minpressure_Updated_2014,         wind = HighestWindSpeed     )  # here, we perform a `filter` operation in the multiverse df.filtered = hurricane %>%   filter(branch(death_outliers,       \"no_exclusion\" ~ TRUE,       \"most_extreme\" ~ name != \"Katrina\",       \"two_most_extreme\" ~ !(name %in% c(\"Katrina\", \"Audrey\")) )) ``` expand(M) ## # A tibble: 3 × 6 ##   .universe death_outliers   .parameter_assignment .code        .results .errors ##       <int> <chr>            <list>                <list>       <list>   <list>  ## 1         1 no_exclusion     <named list [1]>      <named list> <env>    <lgl>   ## 2         2 most_extreme     <named list [1]>      <named list> <env>    <lgl>   ## 3         3 two_most_extreme <named list [1]>      <named list> <env>    <lgl>"},{"path":"http://mucollective.github.io/multiverse/articles/branch.html","id":"example-3-beware-of-the-flexibility","dir":"Articles","previous_headings":"","what":"Example 3: Beware of the flexibility","title":"A discussion on branches in the multiverse","text":"multiverse provides lot flexibility can use branch() replace sub-expressions R multiple alternative subexpressions. instance, previous example re-written : However, chain additional pipes filter(), within branch() statement. words, attempting something like result error: , due presence pipe (%>%) within branch statement, able process option expressions. Workarounds problem include declaring additional pipes outside branch (invariant), declaring reusing parameter (vary based options).","code":"# here, we perform a `filter` operation in the multiverse df.filtered <- hurricane_data %>%   branch(     death_outliers,     \"no_exclusion\" ~ filter(TRUE),     \"most_extreme\" ~ filter(name != \"Katrina\"),     \"two_most_extreme\" ~ filter(!(name %in% c(\"Katrina\", \"Audrey\")))   ) ```{multiverse default-m-3, inside = M} # here, we perform a `filter` operation in the multiverse df.filtered = hurricane_data %>%   branch(death_outliers,       \"no_exclusion\" ~ filter(TRUE),       \"most_extreme\" ~ filter(name != \"Katrina\"),       \"two_most_extreme\" ~ filter(!(name %in% c(\"Katrina\", \"Audrey\")))   ) ``` ```{multiverse default-m-4, inside = M} # do not do this df.filtered = hurricane_data %>%   branch(death_outliers,       \"no_exclusion\" ~ filter(TRUE) %>% mutate(deaths = log(deaths + 1)),       \"most_extreme\" ~ filter(name != \"Katrina\") %>% mutate(deaths = log(deaths + 1)),       \"two_most_extreme\" ~ filter(!(name %in% c(\"Katrina\", \"Audrey\"))) %>% mutate(deaths = log(deaths + 1))   ) ```"},{"path":"http://mucollective.github.io/multiverse/articles/branch.html","id":"example-4-variable-assignment-inside-a-branch-statement","dir":"Articles","previous_headings":"","what":"Example 4: Variable assignment inside a branch statement","title":"A discussion on branches in the multiverse","text":"may scenarios want assign value variable branch statement. simplest example : , something result error able parse expression option. solution enclose declaration within curly braces: { } shown :","code":"M = multiverse() ```{multiverse default-m-5, inside = M} # do not do this branch(variable_declaration,   \"first_option\" ~ x = 1,   \"second_option\" ~ x = 2 ) ``` # do not do this branch(   variable_declaration,   \"first_option\" ~ {     x <- 1   },   \"second_option\" ~ {     x <- 2   } ) ```{multiverse default-m-6, inside = M} # do not do this branch(variable_declaration,   \"first_option\" ~ { x = 1 },   \"second_option\" ~ { x = 2 } ) ```"},{"path":"http://mucollective.github.io/multiverse/articles/branch.html","id":"example-5-a-branch-as-a-function","dir":"Articles","previous_headings":"","what":"Example 5: A branch as a function","title":"A discussion on branches in the multiverse","text":"Say familiar R’s tidyverse packages ’s style writing code. alternate way declaring branch transforming duration variable analysis use two separate functions transformation depending universe one . execute multiverse inspect results: can see, creates, universe within multiverse, vector named duration either un-transformed log-transformed. However, suffers slightly unintuitive harder read write code. actually happening entire branch(...) gets replaced either log() identity() within given universe. readable pattern might : Next, execute inspect results. , alternate calculation also leads result.","code":"M = multiverse() duration <- branch(   data_trans,   \"log-transformed\" ~ log,   \"un-transformed\" ~ identity )(data.userlogs.raw$duration) ```{multiverse default-m-7, inside = M} duration <- branch(data_trans,         \"log-transformed\" ~ log,         \"un-transformed\" ~ identity     )(data.userlogs.raw$duration) ``` execute_multiverse(M)  expand(M) %>%   mutate(transformed_duration = map(.results, \"duration\")) ## # A tibble: 2 × 7 ##   .universe data_trans      .parameter_assignment .code        .results .errors ##       <int> <chr>           <list>                <list>       <list>   <list>  ## 1         1 log-transformed <named list [1]>      <named list> <env>    <lgl>   ## 2         2 un-transformed  <named list [1]>      <named list> <env>    <lgl>   ## # ℹ 1 more variable: transformed_duration <list> M = multiverse() duration_transform <- branch(   data_trans,   \"log-transformed\" ~ log,   \"un-transformed\" ~ identity )  duration <- duration_transform(data.userlogs.raw$duration) ```{multiverse default-m-8, inside = M} duration_transform = branch(data_trans,     \"log-transformed\" ~ log,     \"un-transformed\" ~ identity   )  duration = duration_transform(data.userlogs.raw$duration) ``` execute_multiverse(M)  expand(M) %>%   mutate( transformed_duration = map(.results, \"duration\" ) ) %>%    unnest(c(transformed_duration)) %>%   head() ## # A tibble: 6 × 7 ##   .universe data_trans      .parameter_assignment .code        .results .errors ##       <int> <chr>           <list>                <list>       <list>   <list>  ## 1         1 log-transformed <named list [1]>      <named list> <env>    <lgl>   ## 2         1 log-transformed <named list [1]>      <named list> <env>    <lgl>   ## 3         1 log-transformed <named list [1]>      <named list> <env>    <lgl>   ## 4         1 log-transformed <named list [1]>      <named list> <env>    <lgl>   ## 5         1 log-transformed <named list [1]>      <named list> <env>    <lgl>   ## 6         1 log-transformed <named list [1]>      <named list> <env>    <lgl>   ## # ℹ 1 more variable: transformed_duration <dbl>"},{"path":"http://mucollective.github.io/multiverse/articles/branch.html","id":"example-6-defining-parameters-separately","dir":"Articles","previous_headings":"","what":"Example 6: Defining parameters separately","title":"A discussion on branches in the multiverse","text":"example, show alternative parameters can declared. , explore whether different ways data transformation calculating confidence intervals impact results. consider two ways calculating confidence intervals: t-test Bootstrapped CIs. Instead defining parameters locally code, want code differ, can also just define upfront assigning variable use variable code. example, next example, declare two different branches data transformation, data modeling data presentation respectively. also define necessary functions along way. write analysis use variables indicate branches analysis within multiverse. see results using branches, plot part multiverse. see different transformations (transformations right column log-transform left column). row shows different data presentation branches presenting different confidence levels.","code":"library(boot) library(broom) samplemean <- function(x, d) {return(mean(x[d]))}  M = multiverse()  t_test_ci <- function(x, y) {     broom::tidy(t.test(x, conf.level = y)) }  bootstrapped_ci <- function(x, y) {     boot(data = x, statistic = samplemean, R = 5000) %>%         broom::tidy( conf.int = TRUE, conf.method = \"bca\", conf.level =  y) %>%         rename(estimate = statistic) } transform_fun <- branch(   data_trans,   \"log-transformed\" ~ log,   \"un-transformed\" ~ identity )  fit <- branch(   bootstrap,   \"t-dist\" ~ t_test_ci,   \"bca\" ~ bootstrapped_ci )  ci <- 0.95  df <- data.userlogs.raw %>%   mutate(duration = transform_fun(duration)) %>%   mutate(modality.f = factor(modality)) %>%   group_by(subject, modality.f, modalityname) %>%   summarise(duration = mean(duration), .groups = \"drop\") %>%   group_by(modality.f) %>%   rename(value = duration) %>%   summarise(data = list(value), .groups = \"keep\")  df <- df %>%   mutate(fit = map(data, ~ fit(.x, ci))) %>%   select(-data) %>%   unnest(cols = c(fit)) ```{multiverse default-m-9, inside = M} transform_fun <- branch(data_trans,     \"log-transformed\" ~ log,     \"un-transformed\" ~ identity   )  fit <- branch(bootstrap,       \"t-dist\" ~ t_test_ci,       \"bca\" ~ bootstrapped_ci     )  ci <- 0.95  df <- data.userlogs.raw  %>%   mutate( duration = transform_fun(duration) ) %>%    mutate( modality.f = factor(modality) ) %>%   group_by(subject, modality.f, modalityname) %>%    summarise( duration = mean(duration), .groups = \"drop\" ) %>%   group_by(modality.f) %>%   rename( value = duration ) %>%   summarise( data = list(value), .groups = \"keep\" )  df <- df %>%   mutate( fit = map(data, ~ fit(.x, ci) ) ) %>%   select(-data) %>%   unnest( cols = c(fit) ) ``` execute_multiverse(M) expand(M) %>%   mutate(df = map(.results, \"df\" ) ) %>%   unnest( cols = c(df) )  %>%   mutate( modality.f = recode( modality.f,                   \"1\" = \"physical-touch\",                  \"2\" = \"no-touch\",                  \"3\" = \"virtual-prop\",                  \"4\" = \"virtual-mouse\"   ) ) %>%   mutate(      estimate = ifelse(data_trans == \"log\", exp(estimate), estimate),     conf.low = ifelse(data_trans == \"log\", exp(conf.low), conf.low),     conf.high = ifelse(data_trans == \"log\", exp(conf.high), conf.high)   ) %>%   arrange(desc(data_trans), desc(bootstrap)) %>%   filter( bootstrap == \"bca\" ) %>%   ggplot() +    geom_point( aes(x = estimate, y = modality.f)) +   geom_errorbarh( aes(xmin = conf.low, xmax = conf.high, y = modality.f), height = 0) +   facet_grid(. ~ data_trans, scales = \"free\") +   theme_minimal()"},{"path":"http://mucollective.github.io/multiverse/articles/branch.html","id":"example-7-parameters-can-be-re-used-and-alternate-ways-of-declaring-the-same-branch","dir":"Articles","previous_headings":"","what":"Example 7: Parameters can be re-used (and alternate ways of declaring the same branch)","title":"A discussion on branches in the multiverse","text":"Consider modeling step vignette(\"example-hurricane\"). , one decisions face choice regression model use (gaussian poisson). described document, requires two different local changes code: definition dependent variable model formula family argument modeling function However, two separate decisions, rather consequence analysis parameter: choice model. Often, single analysis parameter require analyst change code one location. represent semantics, multiverse allows us re-use analysis parameter multiple branch() statements, long branch() uses exact set analysis options. branch previously defined parameter, option names must , code option can different. Thus, represent consequences choice model single analysis parameter: model. insert two branch() statements using parameter, one set variable transformation one set family. may implemented : However, can also write : verbose way specifying decision requires user repeat code may potentially introduce errors, might easier read.","code":"M.1 = multiverse() ```{multiverse label = variable_definitions, inside = M.1} fit <- glm(branch(model,         \"linear\" ~ log(death+1),         \"poisson\" ~ death     ) ~ femininity * damage + femininity * zpressure,     family = branch(model,          \"linear\" ~ gaussian,          \"poisson\" ~ poisson     ), data = df.filtered) ``` M.2 = multiverse() ```{multiverse label = variable_definitions, inside = M.2} fit <- branch(model         \"linear\" ~ glm(log(death+1) ~ femininity * damage + femininity * zpressure, family = gaussian(), data = df),         \"poisson\" ~ glm(death ~ femininity * damage + femininity * zpressure, family = poisson(), data = df)     ) ```"},{"path":"http://mucollective.github.io/multiverse/articles/branch.html","id":"example-8-declaring-continuous-variables-in-branch","dir":"Articles","previous_headings":"","what":"Example 8: Declaring continuous variables in branch","title":"A discussion on branches in the multiverse","text":"far looked examples declare parameters within branch takes discrete values. cases, makes sense declare separately number values discrete variable high, sufficiently easy concise declare manner. However, apply continuous variables declaring possible values painstakingly difficult. Hence provide alternate way declaring branches parameter takes continuous sequence values. plot estimates multiverse see obtain correct results:  Note: vignette used script-oriented inside() function implementing multiverse. However, can implement exact multiverse RMarkdown using multiverse-code-block interactive programming. implement using multiverse-code-block, can simply place code passed inside function (second argument) inside code block type multiverse, provide appropriate labels multiverse object, execute . See (multiverse--rmd) (branch) details examples.","code":"M = multiverse() set.seed(branch(seed, .options = 1:25))  x1 <- rnorm(25) x2 <- rnorm(25) y <- x1 + x2 + runif(25)  m <- lm(y ~ x1 + x2)  intervals <- broom::tidy(m, conf.int = TRUE) ```{multiverse default-m-10, inside = M} set.seed(branch(seed, .options = 1:25))  x1 <- rnorm(25) x2 <- rnorm(25) y <- x1 + x2 + runif(25)  m <- lm(y ~ x1+ x2)  intervals <- broom::tidy(m, conf.int = TRUE) ``` execute_multiverse(M) expand(M) %>%   mutate(df = map(.results, \"intervals\" ) ) %>%   unnest( cols = c(df) ) %>%   unnest(seed) %>%  # won't be necessary once issue #34 is fixed   ggplot(aes(x = .universe, y = estimate, ymin = conf.low, ymax = conf.high), alpha = 0.5) +   geom_pointrange() +   facet_grid( . ~ term )  +   scale_x_continuous( breaks = seq(0, 25, by = 5) ) +   labs(x = \"Universe (i.e. the seed parameter)\", y = \"Model Parameter Values\", title = \"Estimates with 95% confidence intervals\") +   theme_minimal()"},{"path":"http://mucollective.github.io/multiverse/articles/branch.html","id":"example-9-nested-branch-statements-and-asymmetric-trees","dir":"Articles","previous_headings":"","what":"Example 9: Nested branch statements and asymmetric trees","title":"A discussion on branches in the multiverse","text":"Consider following hypothetical dataset analyst wants predict variable score based measures pretest1, pretest2, reaction_time, HR (heart rate) fatigue. come following regression models—normal binomial, normal model include decision include include interaction term two variables. one way defining multiverse use conditional operator (see vignette(\"conditions\"), can also defined using nested branch statements: resultant multiverse consist three distinct analysis paths: However, currently process multiverse code, nested branch statements result asymmetric trees one , get correct output. fix issue, resort providing user warning whenever potentially asymmetric trees detected: solution, essentially workaround remove duplicates, upon verification post-processing stage (can safely ignore warning).","code":"M = multiverse()  # a random simulated dataset N = 100  df = tibble(   score = round(rlnorm(N, 3)),   pretest1 = round(runif(N) * 100),   pretest2 = round(runif(N) * 100),   reaction_time = rnorm(N, 5, 1),   HR = round(rnorm(N, 90, 10)),   fatigue = sample(seq(1:7), size = N, replace = TRUE) ) fit <- branch(   model,   \"normal\" ~ glm(log(score) ~ pretest1 + pretest2 + fatigue +     branch(       interaction,       \"yes\" ~ reaction_time * HR,       \"no\" ~ reaction_time + HR     ) +     fatigue, data = df, family = \"gaussian\"),   \"gamma\" ~ glm(score ~ pretest1 + pretest2 + reaction_time + HR +     fatigue, data = df, family = \"gamma\") ) ```{multiverse default-m-11, inside = M} fit = branch(model,           \"normal\" ~ glm(log(score) ~ pretest1 + pretest2 +                          branch(interaction,                                 \"yes\" ~ reaction_time:HR,                                \"no\" ~ reaction_time:HR) +                          fatigue, data = df, family = \"gaussian\"),          \"binomial\" ~ glm(score ~ pretest1 + pretest2 +                            fatigue, data = df, family = \"binomial\")       ) ``` root        /        \\     normal   binomial     /   \\   yes    no (interactions) expand(M) ## Warning: Universes {3 and 4} appear to be duplicates. This may be because the ## tree you created is asymmetric (did you use nested branch calls?). Please ## verify and prune universes before proceeding with your analysis. See ## vignette('branch') for more details. ## # A tibble: 4 × 7 ##   .universe model  interaction .parameter_assignment .code            .results ##       <int> <chr>  <chr>       <list>                <list>           <list>   ## 1         1 normal yes         <named list [2]>      <named list [1]> <env>    ## 2         2 normal no          <named list [2]>      <named list [1]> <env>    ## 3         3 gamma  yes         <named list [2]>      <named list [1]> <env>    ## 4         4 gamma  no          <named list [2]>      <named list [1]> <env>    ## # ℹ 1 more variable: .errors <list> expand(M) |>    filter(.universe != 4) ## # A tibble: 3 × 7 ##   .universe model  interaction .parameter_assignment .code            .results ##       <int> <chr>  <chr>       <list>                <list>           <list>   ## 1         1 normal yes         <named list [2]>      <named list [1]> <env>    ## 2         2 normal no          <named list [2]>      <named list [1]> <env>    ## 3         3 gamma  yes         <named list [2]>      <named list [1]> <env>    ## # ℹ 1 more variable: .errors <list>"},{"path":"http://mucollective.github.io/multiverse/articles/conditions.html","id":"the-data","dir":"Articles","previous_headings":"","what":"The data","title":"Declaring conditions in the multiverse","text":"using data vignette: complete implementation multiverse analysis (see vignette(\"example-durante\")).","code":"data(\"durante\")  df_durante <- durante %>%   mutate(     Abortion = abs(7 - Abortion) + 1,     StemCell = abs(7 - StemCell) + 1,     Marijuana = abs(7 - Marijuana) + 1,     RichTax = abs(7 - RichTax) + 1,     StLiving = abs(7 - StLiving) + 1,     Profit = abs(7 - Profit) + 1,     FiscConsComp = FreeMarket + PrivSocialSec + RichTax + StLiving + Profit,     SocConsComp = Marriage + RestrictAbortion + Abortion + StemCell + Marijuana   )"},{"path":"http://mucollective.github.io/multiverse/articles/conditions.html","id":"specifying-conditions-in-the-multiverse-analysis","dir":"Articles","previous_headings":"","what":"Specifying conditions in the multiverse analysis","title":"Declaring conditions in the multiverse","text":"multiverse analysis, may occur value one variable might depend value another variable defined previously. example, example, excluding participants based cycle length. can done two ways: can use values variable,ComputedCycleLength ReportedCycleLength. using ComputedCycleLength exclude participants, means calculate variable NextMenstrualOnset (date onset next menstrual cycle) using ReportedCycleLength value. Similarly, using ReportedCycleLength exclude participants inconsistent calculate NextMenstrualOnset using ComputedCycleLength. able express conditions multiverse. can two ways: 1. %%: declaring branch, can use operator specify conditional |BA | B %% B. conditional |BA | B also referred connective ⟹BA \\implies B. meaning “true, B also true” abbreviation ¬|B\\neg | B 2. branch_assert: function allows user specify condition form logical operation","code":""},{"path":"http://mucollective.github.io/multiverse/articles/conditions.html","id":"the-when-operator","dir":"Articles","previous_headings":"Specifying conditions in the multiverse analysis","what":"The %when% operator","title":"Declaring conditions in the multiverse","text":"two ways can specify %% operator. first specify end branch. work even omit branch option name. specify head branch, right option name: Note: example using inside syntax enter code multiverse, instead multiverse code blocks highlight syntax conditional declaration multiverse code blocks shows code universe, hides actual code declared user. can write complete analysis specifying condition %% operator : multiverse code chunks conditionals can declared pretty much way: Note: vignette used script-oriented inside() function implementing multiverse. However, can implement exact multiverse RMarkdown using multiverse-code-block interactive programming. implement using multiverse-code-block, can simply place code passed inside function (second argument) inside code block type multiverse, provide appropriate labels multiverse object, execute . See (multiverse--rmd) (branch) details examples. condition implies, parameter menstrual_calcaultion (calculating variable NextMenstrualCalculation) take value “mc_option1” filter cycle_length using “cl_option3”. Similarly, menstrual_calcaultion take value “mc_option2” filter cycle_length using “cl_option2”. multiverse table , can see two parameter combinations absent (universes indexed 3 5.","code":"df <- df %>%     mutate(NextMenstrualOnset = branch(menstrual_calculation,         \"mc_option1\" ~ (StartDateofLastPeriod + ComputedCycleLength) %when% (cycle_length != \"cl_option3\"),         \"mc_option2\" ~ (StartDateofLastPeriod + ReportedCycleLength) %when% (cycle_length != \"cl_option2\"),         \"mc_option3\" ~ StartDateNext)     ) df %>%     mutate(NextMenstrualOnset = branch(menstrual_calculation,         \"mc_option1\" %when% (cycle_length != \"cl_option3\") ~ StartDateofLastPeriod + ComputedCycleLength,         \"mc_option2\" %when% (cycle_length != \"cl_option2\") ~ (StartDateofLastPeriod + ReportedCycleLength),         \"mc_option3\" ~ StartDateNext)     ) M = multiverse()  inside(M, {   df.1 <- df_durante  %>%       mutate( ComputedCycleLength = StartDateofLastPeriod - StartDateofPeriodBeforeLast )  %>%       dplyr::filter( branch(cycle_length,           \"cl_option1\" ~ TRUE,           \"cl_option2\" ~ ComputedCycleLength > 25 & ComputedCycleLength < 35,           \"cl_option3\" ~ ReportedCycleLength > 25 & ReportedCycleLength < 35       )) %>%       mutate(NextMenstrualOnset = branch(menstrual_calculation,           \"mc_option1\" %when% (cycle_length != \"cl_option3\") ~ StartDateofLastPeriod + ComputedCycleLength,           \"mc_option2\" %when% (cycle_length != \"cl_option2\") ~ StartDateofLastPeriod + ReportedCycleLength,           \"mc_option3\" ~ StartDateNext)       ) }) df <- df_durante %>%   mutate(ComputedCycleLength = StartDateofLastPeriod - StartDateofPeriodBeforeLast) %>%   dplyr::filter(branch(     cycle_length,     \"cl_option1\" ~ TRUE,     \"cl_option2\" ~ ComputedCycleLength > 25 & ComputedCycleLength < 35,     \"cl_option3\" ~ ReportedCycleLength > 25 & ReportedCycleLength < 35   )) %>%   mutate(NextMenstrualOnset = branch(     menstrual_calculation,     \"mc_option1\" %when% (cycle_length != \"cl_option3\") ~ StartDateofLastPeriod + ComputedCycleLength,     \"mc_option2\" %when% (cycle_length != \"cl_option2\") ~ StartDateofLastPeriod + ReportedCycleLength,     \"mc_option3\" ~ StartDateNext   )) ```{multiverse default-m-1, inside = M} df <- df_durante  %>%       mutate( ComputedCycleLength = StartDateofLastPeriod - StartDateofPeriodBeforeLast )  %>%       dplyr::filter( branch(cycle_length,           \"cl_option1\" ~ TRUE,           \"cl_option2\" ~ ComputedCycleLength > 25 & ComputedCycleLength < 35,           \"cl_option3\" ~ ReportedCycleLength > 25 & ReportedCycleLength < 35       )) %>%       mutate(NextMenstrualOnset = branch(menstrual_calculation,           \"mc_option1\" %when% (cycle_length != \"cl_option3\") ~ StartDateofLastPeriod + ComputedCycleLength,           \"mc_option2\" %when% (cycle_length != \"cl_option2\") ~ StartDateofLastPeriod + ReportedCycleLength,           \"mc_option3\" ~ StartDateNext)       ) ``` expand(M) ## # A tibble: 7 × 7 ##   .universe cycle_length menstrual_calculation .parameter_assignment ##       <int> <chr>        <chr>                 <list>                ## 1         1 cl_option1   mc_option1            <named list [2]>      ## 2         2 cl_option1   mc_option2            <named list [2]>      ## 3         3 cl_option1   mc_option3            <named list [2]>      ## 4         4 cl_option2   mc_option1            <named list [2]>      ## 5         5 cl_option2   mc_option3            <named list [2]>      ## 6         6 cl_option3   mc_option2            <named list [2]>      ## 7         7 cl_option3   mc_option3            <named list [2]>      ## # ℹ 3 more variables: .code <list>, .results <list>, .errors <list>"},{"path":"http://mucollective.github.io/multiverse/articles/conditions.html","id":"the-branch_assert-function","dir":"Articles","previous_headings":"Specifying conditions in the multiverse analysis","what":"The branch_assert() function","title":"Declaring conditions in the multiverse","text":"can performed branch_assert() function. benefit using within branch assert function, user can specify logical operation. eg: logical operations can specified : branch_assert((menstrual_calculation != \"mc_option1\" | cycle_length != \"cl_option3\")) operations result, first may easily interpretable. specify conditionals using branch_assert() function example : Using branch_assert(), can perform exact analysis: can see, results multiverse, universes indexed 3 5 compatible.","code":"df %>%     branch_assert( (menstrual_calculation != \"mc_option1\" | (cycle_length != \"cl_option3\")) ) %>%     branch_assert( (menstrual_calculation != \"mc_option2\" | (cycle_length != \"cl_option2\")) ) M = multiverse()  inside(M, {     df.2 <- df_durante  %>%         mutate( ComputedCycleLength = StartDateofLastPeriod - StartDateofPeriodBeforeLast )  %>%         filter( branch(cycle_length,             \"cl_option1\" ~ TRUE,             \"cl_option2\" ~ ComputedCycleLength > 25 & ComputedCycleLength < 35,             \"cl_option3\" ~ ReportedCycleLength > 25 & ReportedCycleLength < 35         )) %>%         mutate(NextMenstrualOnset = branch(menstrual_calculation,             \"mc_option1\" ~ StartDateofLastPeriod + ComputedCycleLength,             \"mc_option2\" ~ StartDateofLastPeriod + ReportedCycleLength,             \"mc_option3\" ~ StartDateNext)         ) %>%         branch_assert( (menstrual_calculation != \"mc_option1\" | (cycle_length != \"cl_option3\")) ) %>%         branch_assert( (menstrual_calculation != \"mc_option2\" | (cycle_length != \"cl_option2\")) ) }) expand(M) ## # A tibble: 7 × 7 ##   .universe cycle_length menstrual_calculation .parameter_assignment ##       <int> <chr>        <chr>                 <list>                ## 1         1 cl_option1   mc_option1            <named list [2]>      ## 2         2 cl_option1   mc_option2            <named list [2]>      ## 3         3 cl_option1   mc_option3            <named list [2]>      ## 4         4 cl_option2   mc_option1            <named list [2]>      ## 5         5 cl_option2   mc_option3            <named list [2]>      ## 6         6 cl_option3   mc_option2            <named list [2]>      ## 7         7 cl_option3   mc_option3            <named list [2]>      ## # ℹ 3 more variables: .code <list>, .results <list>, .errors <list>"},{"path":"http://mucollective.github.io/multiverse/articles/conditions.html","id":"implementing-conditions-in-a-complete-analysis","dir":"Articles","previous_headings":"","what":"Implementing conditions in a complete analysis","title":"Declaring conditions in the multiverse","text":"Specifying conditions allows us exclude inconsistent combinations analyses. Let’s update example home page including conditions: excluding inconsistent choice combinations, 270−2×(5×1×3×1×2)=210270 − 2 \\times (5 \\times 1 \\times 3 \\times 1 \\times 2) = 210 choice combinations remain: Now, ’ve created complete multiverse presented example #2 Steegen et al.’s paper.","code":"M = multiverse() df <- df_durante %>%   mutate(ComputedCycleLength = StartDateofLastPeriod - StartDateofPeriodBeforeLast) %>%   dplyr::filter(branch(     cycle_length,     \"cl_option1\" ~ TRUE,     \"cl_option2\" ~ ComputedCycleLength > 25 & ComputedCycleLength < 35,     \"cl_option3\" ~ ReportedCycleLength > 25 & ReportedCycleLength < 35   )) %>%   dplyr::filter(branch(     certainty,     \"cer_option1\" ~ TRUE,     \"cer_option2\" ~ Sure1 > 6 | Sure2 > 6   )) %>%   mutate(NextMenstrualOnset = branch(     menstrual_calculation,     \"mc_option1\" %when% (cycle_length != \"cl_option3\") ~ StartDateofLastPeriod + ComputedCycleLength,     \"mc_option2\" %when% (cycle_length != \"cl_option2\") ~ StartDateofLastPeriod + ReportedCycleLength,     \"mc_option3\" ~ StartDateNext   )) %>%   mutate(     CycleDay = 28 - (NextMenstrualOnset - DateTesting),     CycleDay = ifelse(CycleDay > 1 & CycleDay < 28, CycleDay, ifelse(CycleDay < 1, 1, 28))   ) %>%   mutate(Fertility = branch(     fertile,     \"fer_option1\" ~ factor(ifelse(CycleDay >= 7 & CycleDay <= 14, \"high\", ifelse(CycleDay >= 17 & CycleDay <= 25, \"low\", NA))),     \"fer_option2\" ~ factor(ifelse(CycleDay >= 6 & CycleDay <= 14, \"high\", ifelse(CycleDay >= 17 & CycleDay <= 27, \"low\", NA))),     \"fer_option3\" ~ factor(ifelse(CycleDay >= 9 & CycleDay <= 17, \"high\", ifelse(CycleDay >= 18 & CycleDay <= 25, \"low\", NA))),     \"fer_option4\" ~ factor(ifelse(CycleDay >= 8 & CycleDay <= 14, \"high\", \"low\")),     \"fer_option45\" ~ factor(ifelse(CycleDay >= 8 & CycleDay <= 17, \"high\", \"low\"))   )) %>%   mutate(RelationshipStatus = branch(     relationship_status,     \"rs_option1\" ~ factor(ifelse(Relationship == 1 | Relationship == 2, \"Single\", \"Relationship\")),     \"rs_option2\" ~ factor(ifelse(Relationship == 1, \"Single\", \"Relationship\")),     \"rs_option3\" ~ factor(ifelse(Relationship == 1, \"Single\", ifelse(Relationship == 3 | Relationship == 4, \"Relationship\", NA)))   )) ```{multiverse default-m-2, inside = M, echo = FALSE} df <- df_durante  %>%   mutate( ComputedCycleLength = StartDateofLastPeriod - StartDateofPeriodBeforeLast )  %>%   dplyr::filter( branch(cycle_length,           \"cl_option1\" ~ TRUE,           \"cl_option2\" ~ ComputedCycleLength > 25 & ComputedCycleLength < 35,           \"cl_option3\" ~ ReportedCycleLength > 25 & ReportedCycleLength < 35   )) %>%   dplyr::filter( branch(certainty,           \"cer_option1\" ~ TRUE,           \"cer_option2\" ~ Sure1 > 6 | Sure2 > 6   )) %>%   mutate(NextMenstrualOnset = branch(menstrual_calculation,           \"mc_option1\" %when% (cycle_length != \"cl_option3\") ~ StartDateofLastPeriod + ComputedCycleLength,           \"mc_option2\" %when% (cycle_length != \"cl_option2\") ~ StartDateofLastPeriod + ReportedCycleLength,           \"mc_option3\" ~ StartDateNext)   )  %>%   mutate(     CycleDay = 28 - (NextMenstrualOnset - DateTesting),     CycleDay = ifelse(CycleDay > 1 & CycleDay < 28, CycleDay, ifelse(CycleDay < 1, 1, 28))   ) %>%   mutate( Fertility = branch( fertile,           \"fer_option1\" ~ factor( ifelse(CycleDay >= 7 & CycleDay <= 14, \"high\", ifelse(CycleDay >= 17 & CycleDay <= 25, \"low\", NA)) ),           \"fer_option2\" ~ factor( ifelse(CycleDay >= 6 & CycleDay <= 14, \"high\", ifelse(CycleDay >= 17 & CycleDay <= 27, \"low\", NA)) ),           \"fer_option3\" ~ factor( ifelse(CycleDay >= 9 & CycleDay <= 17, \"high\", ifelse(CycleDay >= 18 & CycleDay <= 25, \"low\", NA)) ),           \"fer_option4\" ~ factor( ifelse(CycleDay >= 8 & CycleDay <= 14, \"high\", \"low\") ),           \"fer_option45\" ~ factor( ifelse(CycleDay >= 8 & CycleDay <= 17, \"high\", \"low\") )   )) %>%   mutate(RelationshipStatus = branch(relationship_status,           \"rs_option1\" ~ factor(ifelse(Relationship==1 | Relationship==2, 'Single', 'Relationship')),           \"rs_option2\" ~ factor(ifelse(Relationship==1, 'Single', 'Relationship')),           \"rs_option3\" ~ factor(ifelse(Relationship==1, 'Single', ifelse(Relationship==3 | Relationship==4, 'Relationship', NA))) )   ) ``` expand(M) %>% nrow() ## [1] 210"},{"path":"http://mucollective.github.io/multiverse/articles/example-dance.html","id":"multiverse-case-study-3","dir":"Articles","previous_headings":"","what":"Multiverse case study #3","title":"Example multiverse implementation: Recreating Adding inferential treatments to plots using Resampling and Animations using multiverse","text":"document, recreate mini-paper Adding Inferential Information plots using Resampling Animations using multiverse package.","code":""},{"path":"http://mucollective.github.io/multiverse/articles/example-dance.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Example multiverse implementation: Recreating Adding inferential treatments to plots using Resampling and Animations using multiverse","text":"mini-paper presents method adding inferential information arbitrary statistical plots based resampling animation. large number (non-parametric) bootstrap datasets created subjected analyses plotting procedures original dataset. “bootstrap plots” animated reveal statistical noise hidden original plot, order help readers appreciate uncertainty quantities, trends patterns conveyed plot. data used example real study taken information visualization literature.","code":""},{"path":"http://mucollective.github.io/multiverse/articles/example-dance.html","id":"the-data","dir":"Articles","previous_headings":"","what":"The data","title":"Example multiverse implementation: Recreating Adding inferential treatments to plots using Resampling and Animations using multiverse","text":"data presented collected Harrison et al. . goal study rank nine existing visualizations ability effectively convey correlations. focus experiment 2, main experiment data analysis code available. experiment, nine visualizations evaluated 1,600+ crowdsourcing workers ability convey correlation. staircase method used derive just-noticeable difference (JND) values, capture discrimination capacity: lower value, better participant can discriminate correlations. experiment involved four independent variables: visualization type (9 levels), base correlation value (6 levels), whether correlation positive negative (2 levels), whether value approached (2 levels). participant carried 4 tasks, specific combination conditions. First, quickly show original data, plots created using dataset, looks like:","code":"data(\"vis_correlation\") df <- vis_correlation %>%    group_by( vis, rbase, approach, sign ) %>%   select(-c(condition, visandsign, participant)) %>%   summarise( jnd = list(jnd) ) %>%   mutate(      median = map_dbl(jnd, ~median(.x)),     mads = map_dbl(jnd, ~mad(.x, constant = 1)),     jnd_limit = 3 * mads   ) %>%    ungroup() ## `summarise()` has grouped output by 'vis', 'rbase', 'approach'. You can ## override using the `.groups` argument. df.error_bar <- df %>%   unnest( cols = c(jnd) ) %>%   filter( abs(jnd - median) <= jnd_limit ) %>%   group_by( vis, rbase, approach, sign ) %>%   summarise( jnd = list(jnd) ) %>%   mutate(     sd = map_dbl(jnd, ~sd(.x)/sqrt(length(.x))),     mean = map_dbl(jnd, ~mean(.x))   ) ## `summarise()` has grouped output by 'vis', 'rbase', 'approach'. You can ## override using the `.groups` argument."},{"path":"http://mucollective.github.io/multiverse/articles/example-dance.html","id":"just-noticeable-differences-jnds","dir":"Articles","previous_headings":"The data","what":"Just Noticeable Differences (JNDs)","title":"Example multiverse implementation: Recreating Adding inferential treatments to plots using Resampling and Animations using multiverse","text":"following figure shows mean JND 216 conditions, displayed dot. show JND function correlation r (light points) (dark points) approaches.","code":"df.error_bar %>%   ggplot() +   geom_errorbar(aes(x = rbase, ymin = (mean - sd), ymax = mean + sd, color = approach), width = 0.025) +   geom_point( aes(x = rbase, y = mean, color = approach )) +   geom_hline( yintercept = 0.45, linetype = \"dashed\", alpha = 0.25) +   geom_abline( slope = -1, intercept = 1, linetype = \"dashed\", alpha = 0.25) +   facet_wrap(vis ~ sign, ncol = 4) +   theme_minimal()"},{"path":"http://mucollective.github.io/multiverse/articles/example-dance.html","id":"regression-results","dir":"Articles","previous_headings":"The data","what":"Regression results","title":"Example multiverse implementation: Recreating Adding inferential treatments to plots using Resampling and Animations using multiverse","text":"next figure show regression lines conditions, well results previous similar experiment. perform following steps: filter outlier conditions (donut, stacked area, stacked line stacked bar chart conditions positive correlation; radar line chart conditions negative correlation) next calculate rbase adjustment coefficient (see original paper details ) fit linear model using jnd outcome variable, (computed) rbase metric predictor Finally plot figure results consistent paper’s main findings: using scatterplots depict correlation results better performance overall. However, performance difference occurs depicting positively correlated data. fact, parallel coordinates depicting negatively correlated data appear perform well scatterplots","code":"filter_outliers <- function(x, median, limit) {   return( x[abs(x - median) <= limit] ) }  df.corr <- df %>%   # the following visualizations were excluded from the analysis   filter(      !((vis == \"donut\" | vis == \"stackedarea\" | vis == \"stackedline\" | vis == \"stackedbar\") & (sign == 1)) &        !((vis == \"radar\" | vis == \"line\") & (sign == -1))    ) %>%   mutate( jnd = pmap(list(jnd, median, jnd_limit), filter_outliers) ) %>%   mutate(      mean_jnd = map_dbl(jnd, mean),     n = map_dbl(jnd, length)   ) rbase_adj_coef <- df.corr %>%   group_by( vis, sign, rbase ) %>%   summarise( jnd = list(jnd), mean_jnd = list(mean_jnd), n = list(n), approach = list(approach) ) %>%   mutate( rbase_adj_coef = map2_dbl(mean_jnd, n, ~ sum(.x * .y) / sum(.y)) ) %>%   mutate( rbase_adj_coef = map2_dbl(mean_jnd, n, ~ sum(.x * .y) / sum(.y)) ) %>%   unnest(cols = c(jnd, mean_jnd, approach) ) %>%   magrittr::extract2(\"rbase_adj_coef\") ## `summarise()` has grouped output by 'vis', 'sign'. You can override using the ## `.groups` argument. df.corr_fitted <- df.corr %>%   tibble::add_column( rbase_adj_coef = rbase_adj_coef ) %>%   mutate(      multiplier = ifelse(approach == \"above\", 1, -1),     rbase = rbase + 0.5 * multiplier * rbase_adj_coef   ) %>%   group_by( vis, sign ) %>%   summarise( mean_jnd = list(mean_jnd), rbase = list(rbase), .groups = \"drop_last\" ) %>%   mutate(      fit = map2(rbase, mean_jnd, ~as.list(coef(lm(.y ~ .x)))),     sign = factor(ifelse(sign == 1, \"positive\", \"negative\"), levels = c(\"positive\", \"negative\"))   ) %>%   unnest_wider( col = c(fit) ) %>%   rename( intercept = `(Intercept)`, coef = .x ) %>%   mutate(     x = 0,      xend = 1,     y = intercept + coef * x,     yend = intercept + coef * xend   ) df.corr_fitted %>%   ggplot() +   geom_segment( aes( x=x, y=y, xend=xend, yend=yend, color = vis, linetype = sign) ) +   coord_cartesian( xlim = c(0, 1), ylim = c(0, 0.6) ) +   scale_y_continuous( breaks = seq(0, 1, by = 0.1)) +   scale_x_continuous( breaks = seq(0, 1, by = 0.2)) +   theme_minimal()"},{"path":"http://mucollective.github.io/multiverse/articles/example-dance.html","id":"implementation-in-multiverse","dir":"Articles","previous_headings":"","what":"Implementation in multiverse","title":"Example multiverse implementation: Recreating Adding inferential treatments to plots using Resampling and Animations using multiverse","text":"multiverse implementation case might involve resampling generate alternative dataset using common non-parametric bootstrapping approach, shown Dragicevic Adding Inferential Information plots using Resampling Animations. technique enables providing “inferential information arbitrary statistical plots based resampling” many cases “bootstrap distribution provides good approximation sampling distribution”.","code":""},{"path":"http://mucollective.github.io/multiverse/articles/example-dance.html","id":"note","dir":"Articles","previous_headings":"Implementation in multiverse","what":"Note","title":"Example multiverse implementation: Recreating Adding inferential treatments to plots using Resampling and Animations using multiverse","text":"vignette, make use function suited script-style implementation. Keeping consistency interactive programming interface RStudio, also offer user multiverse code chunks, custom engine designed work multiverse package, implement multiverse analyses. multiverse code chunks can used instead r code block write code inside multiverse object. See refer vignette (vignette(\"multiverse--rmd\")) details using multiverse RMarkdown. multiverse implementation begins first generating alternate datasets using bootstrapping, within multiverse object: subsequent steps similar single dataset analysis. execute entire multiverse analysis: results stored unique analysis defined multiverse multiverse object, can visualise results. Animation can used show outcomes multiple simulated replications hypothetical experiment. term statistical dance used refer plots. Dragicevic writes: term originates Geoff Cumming’s “dance p-values”, simple simulation meant show widely p-values vary across replications [5]. simulation consisted repeatedly drawing sample two normal distributions computing p-value difference means. dance 95% confidence intervals also shown. idea later applied Bayes factors [6] range statistics [4]. Statistical dances particular case hypothetical outcome plots (HOPs) [7], “visualize set draws distribution, draw shown new plot either small multiples animated form”. following plots shows mean JND 216 conditions point estimate corresponding error bars communicating inferential uncertainty. inferential information already conveyed way error bars, dance somewhat redundant. However, showing dance still educational value, researchers tend grossly overestimate reliability replicability inferential statistics p-values [5] confidence intervals [4]. One might notice error bars jumping wildly regular dance 95% confidence intervals [5, 4]. error bars standard errors, approximately twice short 95% CIs. Although original article clearly stated Figure caption, dance might make less likely reader miss important information.   following figure shows regression lines conditions. lower line better performance. differences large extremely consistent across bootstrap datasets: example, inferiority line-positive two conditions first plot, inferiority parallel-coordinates-positive last plot. differences less clear actually hold vast majority bootstrap datasets: example, overall superiority radar-positive second plot stackedbar-negative third plot. contrast, many comparisons inconclusive. informal inferences agree formal null hypothesis significance tests reported original paper. Although formal tests inspire confidence many readers, interpreting together effect size figures requires constant back forth figures p-values provided text table. often quite tedious can easily cause impatient readers give content superficial examination results. possible, common practice, display 95% confidence interval around regression line plotting confidence limit curve side line. visual representations can greatly facilitate inference can also easily produce cluttered plots. Although may possible add 95% confidence intervals following figure, likely rendered illegible.  figure consistent Harrison et al.’s main findings: ”using scatterplots depict correlation results better performance overall. However, performance difference occurs depicting positively correlated data. fact, parallel coordinates depicting negatively correlated data appear perform well scatterplots”. statistical dance gives credence conclusions, time providing faithful illustration uncertainty behind estimates. reader free linger figure go beyond authors’ summary findings examining comparisons drawing conclusions. necessary information effect sizes inferential statistics seamlessly combined single animated figure, take pages pages text fully describe .","code":"n = 20  M = multiverse()  inside(M, {   set.seed(branch(seed, .options = 1:n))      data.i = vis_correlation %>%     group_by(rbase, sign, vis, approach) %>%     summarise( jnd = list(jnd), .groups = \"drop_last\" ) %>%     mutate(        sample_size = map_dbl(jnd, length ),       bootstrap_samples = map2(jnd, sample_size, ~ sample( .x, size = .y, replace = TRUE))      ) %>%     select(-jnd) %>%     unnest( cols = c(bootstrap_samples)) %>%     rename( jnd = bootstrap_samples ) }) inside(M, {   df.i <- data.i %>%      group_by( vis, rbase, approach, sign ) %>%     summarise( jnd = list(jnd), .groups = \"drop_last\" ) %>%     mutate(        median = map_dbl(jnd, ~median(.x)),       mads = map_dbl(jnd, ~mad(.x, constant = 1)),       jnd_limit = 3 * mads     ) %>%      ungroup()      df.error_bar.i <- df.i %>%     unnest( cols = c(jnd) ) %>%     filter( abs(jnd - median) <= jnd_limit ) %>%     group_by( vis, rbase, approach, sign ) %>%     summarise( jnd = list(jnd), .groups = \"drop_last\" ) %>%     mutate(       sd = map_dbl(jnd, ~sd(.x)/sqrt(length(.x))),       mean = map_dbl(jnd, ~mean(.x))     )      df.corr.i <- df.i %>%       # the following visualizations were excluded from the analysis       filter(          !((vis == \"donut\" | vis == \"stackedarea\" | vis == \"stackedline\" | vis == \"stackedbar\") & (sign == 1)) &           !((vis == \"radar\" | vis == \"line\") & (sign == -1))        ) %>%       mutate( jnd = pmap(list(jnd, median, jnd_limit), filter_outliers) ) %>%       mutate(          mean_jnd = map_dbl(jnd, mean),         n = map_dbl(jnd, length)       )      rbase_adj_coef.i <- df.corr.i %>%       group_by( vis, sign, rbase ) %>%       summarise(          jnd = list(jnd), mean_jnd = list(mean_jnd), n = list(n), approach = list(approach),          .groups = \"drop_last\"        ) %>%       mutate( rbase_adj_coef = map2_dbl(mean_jnd, n, ~ sum(.x * .y) / sum(.y)) ) %>%       mutate( rbase_adj_coef = map2_dbl(mean_jnd, n, ~ sum(.x * .y) / sum(.y)) ) %>%       unnest(cols = c(jnd, mean_jnd, approach) ) %>%       magrittr::extract2(\"rbase_adj_coef\")      df.corr_fitted.i <- df.corr.i %>%       tibble::add_column( rbase_adj_coef = rbase_adj_coef ) %>%       mutate(            multiplier = ifelse(approach == \"above\", 1, -1),           rbase = rbase + 0.5 * multiplier * rbase_adj_coef       ) %>%       group_by( vis, sign ) %>%       summarise( mean_jnd = list(mean_jnd), rbase = list(rbase), .groups = \"drop_last\" ) %>%       mutate(            fit = map2(rbase, mean_jnd, ~as.list(coef(lm(.y ~ .x)))),           sign = factor(ifelse(sign == 1, \"positive\", \"negative\"), levels = c(\"positive\", \"negative\"))       ) %>%       unnest_wider( col = c(fit) ) %>%       rename( intercept = `(Intercept)`, coef = .x ) %>%       mutate(           x = 0,            xend = 1,           y = intercept + coef * x,           yend = intercept + coef * xend       ) }) execute_multiverse(M) p.above <- expand(M) %>%   mutate(data = map(.results, \"df.error_bar.i\")) %>%   unnest( cols = c(data) ) %>%   filter( sign == 1 ) %>%   ggplot() +   geom_errorbar(aes(x = rbase, ymin = (mean - sd), ymax = mean + sd, color = approach), width = 0.025) +   geom_point( aes(x = rbase, y = mean, color = approach )) +   geom_hline( yintercept = 0.45, linetype = \"dashed\", alpha = 0.25) +   geom_abline( slope = -1, intercept = 1, linetype = \"dashed\", alpha = 0.25) +   facet_wrap( ~ vis, nrow = 2) +   theme_minimal() +   transition_manual(.universe)  animate(p.above, nframes = n, fps = 3, width = 9, height = 4, res = 300, units = \"in\") p.below <- expand(M) %>%   mutate(data = map(.results, \"df.error_bar.i\")) %>%   unnest( cols = c(data) ) %>%   filter( sign == -1 ) %>%   ggplot() +   geom_errorbar(aes(x = rbase, ymin = (mean - sd), ymax = mean + sd, color = approach), width = 0.025) +   geom_point( aes(x = rbase, y = mean, color = approach )) +   geom_hline( yintercept = 0.45, linetype = \"dashed\", alpha = 0.25) +   geom_abline( slope = -1, intercept = 1, linetype = \"dashed\", alpha = 0.25) +   facet_wrap( ~ vis, nrow = 2) +   theme_minimal() +   transition_manual(.universe)  animate(p.below, nframes = n, fps = 3, width = 9, height = 4, res = 300, units = \"in\") p.fitted_lines <- expand(M) %>%   mutate(data = map(.results, \"df.corr_fitted.i\")) %>%   unnest( cols = c(data) ) %>%   ggplot() +   geom_segment( aes( x=x, y=y, xend=xend, yend=yend, color = vis, linetype = sign) ) +   coord_cartesian( xlim = c(0, 1), ylim = c(0, 0.6) ) +   scale_y_continuous( breaks = seq(0, 1, by = 0.1)) +   scale_x_continuous( breaks = seq(0, 1, by = 0.2)) +   theme_minimal() +   transition_manual(.universe)  animate(p.fitted_lines, nframes = n, fps = 3, width = 9, height = 6, res = 300, units = \"in\")"},{"path":"http://mucollective.github.io/multiverse/articles/example-durante.html","id":"multiverse-case-study-1","dir":"Articles","previous_headings":"","what":"Multiverse case study #1","title":"Example multiverse implementation: Effect of fertility on religiosity and political attitudes","text":"document, outline initial approach conducting multiverse analysis R. show package can used perform multiverse analysis outlined Steegen et al. Increasing Transparency Multiverse Analysis.","code":""},{"path":"http://mucollective.github.io/multiverse/articles/example-durante.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Example multiverse implementation: Effect of fertility on religiosity and political attitudes","text":"Data analysis can involve several decisions involving two options. statistical analysis, decisions taken researcher based reasonable justification. However, several decisions, can one reasonable options choose . multiverse analysis form analysis makes decisions explicit conducts complete analysis combinations options (decision). , illustrate example single analysis dataset. extend multiverse analysis.","code":"library(dplyr) library(tidyr) library(ggplot2) library(purrr) library(broom) library(gganimate) library(cowplot) library(multiverse)"},{"path":"http://mucollective.github.io/multiverse/articles/example-durante.html","id":"the-data","dir":"Articles","previous_headings":"","what":"The data","title":"Example multiverse implementation: Effect of fertility on religiosity and political attitudes","text":"first step read raw data file store tibble. following tidy data format . data stored two text files, can use readr read files R. example, use data collected Durante et al. fluctuating female vote: Politics, religion, ovulatory cycle, investigated effect fertility religiosity political attitudes. focus second study (store data.raw.study2). data look like : original paper looked relationship fertility, relationship status, religiosity. many reasonable ways defined three variables dataset, good candidate multiverse analysis.","code":"data(\"durante\")  data.raw.study2 <- durante %>%   mutate(     Abortion = abs(7 - Abortion) + 1,     StemCell = abs(7 - StemCell) + 1,     Marijuana = abs(7 - Marijuana) + 1,     RichTax = abs(7 - RichTax) + 1,     StLiving = abs(7 - StLiving) + 1,     Profit = abs(7 - Profit) + 1,     FiscConsComp = FreeMarket + PrivSocialSec + RichTax + StLiving + Profit,     SocConsComp = Marriage + RestrictAbortion + Abortion + StemCell + Marijuana   ) data.raw.study2 %>%   head(10) ## # A tibble: 10 × 26 ##    WorkerID  Rel1  Rel2  Rel3 Abortion Marriage StemCell RestrictAbortion ##       <dbl> <dbl> <dbl> <dbl>    <dbl>    <dbl>    <dbl>            <dbl> ##  1        1     8     8     7        6        7        1                7 ##  2        2     8     7     7        1        2        3                1 ##  3        3     6     6     2        5        1        2                4 ##  4        4     7     8     6        1        5        2                2 ##  5        5     7     7     9        1        1        4                1 ##  6        6     9     9     9        7        7        2                7 ##  7        7     5     8     5        3        4        3                5 ##  8        8     1     1     1        1        1        2                1 ##  9        9     7     7     7        5        1        2                1 ## 10       10     6     6     6        3        5        3                1 ## # ℹ 18 more variables: Marijuana <dbl>, FreeMarket <dbl>, RichTax <dbl>, ## #   StLiving <dbl>, Profit <dbl>, PrivSocialSec <dbl>, Sure1 <dbl>, ## #   Sure2 <dbl>, Relationship <dbl>, ReportedCycleLength <dbl>, Vote <dbl>, ## #   Donate <dbl>, DateTesting <date>, StartDateofLastPeriod <date>, ## #   StartDateofPeriodBeforeLast <date>, StartDateNext <date>, ## #   FiscConsComp <dbl>, SocConsComp <dbl>"},{"path":"http://mucollective.github.io/multiverse/articles/example-durante.html","id":"a-single-data-set-analysis-one-possible-analysis-among-many","dir":"Articles","previous_headings":"","what":"A single data set analysis: one possible analysis among many","title":"Example multiverse implementation: Effect of fertility on religiosity and political attitudes","text":"data collected needs processed can modeled. Preparing data set analysis can involve several steps decisions regarding encode different raw values. following one example data processing can performed study. transformed data one universe looks like :  However, also exists valid processing options: instead calculating NextMenstrualOnset = StartDateofLastPeriod + ComputedCycleLength, can also calculated StartDateofLastPeriod + ReportedCycleLength. alternate processing options can exist several decisions researcher makes data processing, analysis presentation stages. can thus result multiverse analysis, one described representing single universe. , describe package allows conduct multiverse analysis ease.","code":"one_universe = data.raw.study2 %>%   mutate( ComputedCycleLength = StartDateofLastPeriod - StartDateofPeriodBeforeLast ) %>%   mutate( NextMenstrualOnset = StartDateofLastPeriod + ComputedCycleLength ) %>%   mutate(     CycleDay = 28 - (NextMenstrualOnset - DateTesting),     CycleDay = ifelse(WorkerID == 15, 11, ifelse(WorkerID == 16, 18, CycleDay)),     CycleDay = ifelse(CycleDay > 1 & CycleDay < 28, CycleDay, ifelse(CycleDay < 1, 1, 28))   ) %>%   mutate(     Relationship = factor(ifelse(Relationship==1 | Relationship==2, \"Single\", \"Relationship\"))   ) %>%   filter( ComputedCycleLength > 25 & ComputedCycleLength < 35) %>%   filter( Sure1 > 6 | Sure2 > 6 ) %>%   mutate( Fertility = factor( ifelse(CycleDay >= 7 & CycleDay <= 14, \"high\", ifelse(CycleDay >= 17 & CycleDay <= 25, \"low\", \"medium\")) ) ) one_universe %>%   select( NextMenstrualOnset, Relationship, Sure1, Sure2, Fertility, everything() ) %>%   head(10) ## # A tibble: 10 × 30 ##    NextMenstrualOnset Relationship Sure1 Sure2 Fertility WorkerID  Rel1  Rel2 ##    <date>             <fct>        <dbl> <dbl> <fct>        <dbl> <dbl> <dbl> ##  1 2012-06-17         Relationship     9     9 medium           1     8     8 ##  2 2012-05-28         Relationship     9     7 low              2     8     7 ##  3 2012-05-31         Relationship     8     7 low              3     6     6 ##  4 2012-05-23         Single           8     8 medium           6     9     9 ##  5 2012-05-31         Relationship     9     9 low              7     5     8 ##  6 2012-06-15         Single           8     8 medium          11     2     5 ##  7 2012-06-08         Relationship     9     8 high            12     7     7 ##  8 2012-06-14         Relationship     9     8 medium          13     9     9 ##  9 2012-06-10         Relationship     9     9 high            17     6     4 ## 10 2012-06-18         Single           9     9 medium          18     9     9 ## # ℹ 22 more variables: Rel3 <dbl>, Abortion <dbl>, Marriage <dbl>, ## #   StemCell <dbl>, RestrictAbortion <dbl>, Marijuana <dbl>, FreeMarket <dbl>, ## #   RichTax <dbl>, StLiving <dbl>, Profit <dbl>, PrivSocialSec <dbl>, ## #   ReportedCycleLength <dbl>, Vote <dbl>, Donate <dbl>, DateTesting <date>, ## #   StartDateofLastPeriod <date>, StartDateofPeriodBeforeLast <date>, ## #   StartDateNext <date>, FiscConsComp <dbl>, SocConsComp <dbl>, ## #   ComputedCycleLength <drtn>, CycleDay <dbl> one_universe %>%   ggplot(aes(x = Relationship, y = Rel1 + Rel2 + Rel3, color = Fertility)) +   stat_summary(position = position_dodge(width = .1), fun.data = \"mean_se\") +   theme_minimal()"},{"path":"http://mucollective.github.io/multiverse/articles/example-durante.html","id":"multiverse-implementation","dir":"Articles","previous_headings":"","what":"Multiverse implementation","title":"Example multiverse implementation: Effect of fertility on religiosity and political attitudes","text":"multiverse provides flexible functions can used perform multiverse analysis. first step define new multiverse. use multiverse object create set universes, representing different way analysing data. next step define possible analyses inside multiverse. multiverse package includes functions aim make easy write multiverse analyses close way single universe analysis possible (seen single analysis shown ). Consider first lines transformation code single analysis : NextMenstrualOnset calculated least two reasonable ways: NextMenstrualOnset = StartDateofLastPeriod + ReportedCycleLength NextMenstrualOnset = StartDateNext create multiverse includes three possible processing options, can use branch() function. branch() function defines parameter (menstrual_calculation) different options parameter can take (, \"mc_option1\", \"mc_option2\", \"mc_option3\"). option corresponds different chunk code executed different universe. branch() function indicates , multiverse, NextMenstrualOnset can take either three options (, \"mc_option1\", \"mc_option2\", \"mc_option3\"). Thus, need declare data processing step inside multiverse. using inside() function. inside() function takes two arguments: 1. multiverse object, M; 2. code analysis (including branches). Note passing multiple expressions, enclosed within {}.","code":"M <- multiverse() df <- data.raw.study2 %>%   mutate(ComputedCycleLength = StartDateofLastPeriod - StartDateofPeriodBeforeLast) %>%   mutate(NextMenstrualOnset = StartDateofLastPeriod + ComputedCycleLength) NextMenstrualOnset = branch(menstrual_calculation,    \"mc_option1\" ~ StartDateofLastPeriod + ComputedCycleLength,   \"mc_option2\" ~ StartDateofLastPeriod + ReportedCycleLength,   \"mc_option3\" ~ StartDateNext ) # here we just create the variable `df` in the multiverse inside(M, df <- data.raw.study2)  # here, we perform two `mutate` operations in the multiverse. # although they could have been chained, this illustrates  # how multiple variables can be declared together using the `{}` inside(M, {   df <- df %>%     mutate( ComputedCycleLength = StartDateofLastPeriod - StartDateofPeriodBeforeLast )      df <- df %>%     mutate( NextMenstrualOnset = branch(menstrual_calculation,        \"mc_option1\" ~ StartDateofLastPeriod + ComputedCycleLength,       \"mc_option2\" ~ StartDateofLastPeriod + ReportedCycleLength,       \"mc_option3\" ~ StartDateNext)     ) })"},{"path":"http://mucollective.github.io/multiverse/articles/example-durante.html","id":"note","dir":"Articles","previous_headings":"Multiverse implementation","what":"Note","title":"Example multiverse implementation: Effect of fertility on religiosity and political attitudes","text":"vignette, make use function suited script-style implementation. Keeping consistency interactive programming interface RStudio, also offer user multiverse code chunks, custom engine designed work multiverse package, implement multiverse analyses. multiverse code chunks can used instead r code block write code inside multiverse object. See refer vignette (vignette(\"multiverse--rmd\")) details using multiverse RMarkdown.","code":""},{"path":"http://mucollective.github.io/multiverse/articles/example-durante.html","id":"the-multiverse-with-declared-code-and-branches","dir":"Articles","previous_headings":"Multiverse implementation","what":"The multiverse, with declared code and branches","title":"Example multiverse implementation: Effect of fertility on religiosity and political attitudes","text":"add code multiverse, automatically parses code identify parameters corresponding options defined parameter. code added, multiverse object following attributes: parameters, list parameters conditions, list conditions (’ll define later) expand, tibble consisting possible combination values multiverse code, code user passes multiverse conduct multiverse analysis. However, execute code stored unevaluated. user can interactively edit rewrite code, can execute current analysis entire multiverse using dedicated functions.","code":"parameters(M) ## $menstrual_calculation ## $menstrual_calculation[[1]] ## [1] \"mc_option1\" ##  ## $menstrual_calculation[[2]] ## [1] \"mc_option2\" ##  ## $menstrual_calculation[[3]] ## [1] \"mc_option3\" expand(M) ## # A tibble: 3 × 6 ##   .universe menstrual_calculation .parameter_assignment .code        .results ##       <int> <chr>                 <list>                <list>       <list>   ## 1         1 mc_option1            <named list [1]>      <named list> <env>    ## 2         2 mc_option2            <named list [1]>      <named list> <env>    ## 3         3 mc_option3            <named list [1]>      <named list> <env>    ## # ℹ 1 more variable: .errors <list> code(M) ## [[1]] ## df <- data.raw.study2 ##  ## [[2]] ## df <- df %>% mutate(ComputedCycleLength = StartDateofLastPeriod - StartDateofPeriodBeforeLast) ##  ## [[3]] ## df <- df %>% mutate(NextMenstrualOnset = branch( ##   menstrual_calculation, ##   \"mc_option1\" ~ StartDateofLastPeriod + ComputedCycleLength, ##   \"mc_option2\" ~ StartDateofLastPeriod + ReportedCycleLength, ##   \"mc_option3\" ~ StartDateNext ## ))"},{"path":"http://mucollective.github.io/multiverse/articles/example-durante.html","id":"running-a-single-analysis-from-the-multiverse","dir":"Articles","previous_headings":"Multiverse implementation","what":"Running a single analysis from the multiverse","title":"Example multiverse implementation: Effect of fertility on religiosity and political attitudes","text":"point, defined three possible processing options (three universes) multiverse. Although don’t execute universes multiverses defined, run default analysis (.e. first row multiverse table). can extract objects default analysis using $ operator.","code":"M$df ## # A tibble: 502 × 28 ##    WorkerID  Rel1  Rel2  Rel3 Abortion Marriage StemCell RestrictAbortion ##       <dbl> <dbl> <dbl> <dbl>    <dbl>    <dbl>    <dbl>            <dbl> ##  1        1     8     8     7        6        7        1                7 ##  2        2     8     7     7        1        2        3                1 ##  3        3     6     6     2        5        1        2                4 ##  4        4     7     8     6        1        5        2                2 ##  5        5     7     7     9        1        1        4                1 ##  6        6     9     9     9        7        7        2                7 ##  7        7     5     8     5        3        4        3                5 ##  8        8     1     1     1        1        1        2                1 ##  9        9     7     7     7        5        1        2                1 ## 10       10     6     6     6        3        5        3                1 ## # ℹ 492 more rows ## # ℹ 20 more variables: Marijuana <dbl>, FreeMarket <dbl>, RichTax <dbl>, ## #   StLiving <dbl>, Profit <dbl>, PrivSocialSec <dbl>, Sure1 <dbl>, ## #   Sure2 <dbl>, Relationship <dbl>, ReportedCycleLength <dbl>, Vote <dbl>, ## #   Donate <dbl>, DateTesting <date>, StartDateofLastPeriod <date>, ## #   StartDateofPeriodBeforeLast <date>, StartDateNext <date>, ## #   FiscConsComp <dbl>, SocConsComp <dbl>, ComputedCycleLength <drtn>, …"},{"path":"http://mucollective.github.io/multiverse/articles/example-durante.html","id":"a-multiverse-with-all-possible-combinations-specified","dir":"Articles","previous_headings":"Multiverse implementation","what":"A multiverse with all possible combinations specified","title":"Example multiverse implementation: Effect of fertility on religiosity and political attitudes","text":"Besides calculating onset next menstruation cycle, variables multiple valid reasonable processing options. include defining Relationship Fertility, exclusion criteria based values cycle length certainty responses. next code chunk illustrates can added multiverse object defined . Since multiverse object already created one parameter already defined, inside function add previous code. expand contain possible combinations parameter options identified. multiverse identified 5 options calculating fertility, 3 options calculating menstrual calculation relationship status , 3 wyas excluding participants based cycle length 2 ways excluding participants based self-reported certainty responses. results $ 5 = 270$ possible combinations. can inspect default analysis default single universe analysis multiverse:","code":"inside(M, {   df <- df %>%       mutate(RelationshipStatus = branch( relationship_status,          \"rs_option1\" ~ factor(ifelse(Relationship==1 | Relationship==2, 'Single', 'Relationship')),         \"rs_option2\" ~ factor(ifelse(Relationship==1, 'Single', 'Relationship')),         \"rs_option3\" ~ factor(ifelse(Relationship==1, 'Single', ifelse(Relationship==3 | Relationship==4, 'Relationship', NA))) )       ) %>%       mutate(         CycleDay = 28 - (NextMenstrualOnset - DateTesting),         CycleDay = ifelse(WorkerID == 15, 11, ifelse(WorkerID == 16, 18, CycleDay)),         CycleDay = ifelse(CycleDay > 1 & CycleDay < 28, CycleDay, ifelse(CycleDay < 1, 1, 28))       ) %>%       filter( branch(cycle_length,          \"cl_option1\" ~ TRUE,         \"cl_option2\" ~ ComputedCycleLength > 25 & ComputedCycleLength < 35,         \"cl_option3\" ~ ReportedCycleLength > 25 & ReportedCycleLength < 35       )) %>%       filter( branch(certainty,         \"cer_option1\" ~ TRUE,         \"cer_option2\" ~ Sure1 > 6 | Sure2 > 6       )) %>%       mutate( Fertility = branch( fertile,         \"fer_option1\" ~ factor( ifelse(CycleDay >= 7 & CycleDay <= 14, \"high\", ifelse(CycleDay >= 17 & CycleDay <= 25, \"low\", \"medium\")) ),         \"fer_option2\" ~ factor( ifelse(CycleDay >= 6 & CycleDay <= 14, \"high\", ifelse(CycleDay >= 17 & CycleDay <= 27, \"low\", \"medium\")) ),         \"fer_option3\" ~ factor( ifelse(CycleDay >= 9 & CycleDay <= 17, \"high\", ifelse(CycleDay >= 18 & CycleDay <= 25, \"low\", \"medium\")) ),         \"fer_option4\" ~ factor( ifelse(CycleDay >= 8 & CycleDay <= 14, \"high\", \"low\") ),         \"fer_option5\" ~ factor( ifelse(CycleDay >= 8 & CycleDay <= 17, \"high\", \"low\") )       )) }) code(M) ## [[1]] ## df <- data.raw.study2 ##  ## [[2]] ## df <- df %>% mutate(ComputedCycleLength = StartDateofLastPeriod - StartDateofPeriodBeforeLast) ##  ## [[3]] ## df <- df %>% mutate(NextMenstrualOnset = branch( ##   menstrual_calculation, ##   \"mc_option1\" ~ StartDateofLastPeriod + ComputedCycleLength, ##   \"mc_option2\" ~ StartDateofLastPeriod + ReportedCycleLength, ##   \"mc_option3\" ~ StartDateNext ## )) ##  ## [[4]] ## df <- df %>% ##   mutate(RelationshipStatus = branch( ##     relationship_status, ##     \"rs_option1\" ~ factor(ifelse(Relationship == 1 | Relationship == 2, \"Single\", \"Relationship\")), ##     \"rs_option2\" ~ factor(ifelse(Relationship == 1, \"Single\", \"Relationship\")), ##     \"rs_option3\" ~ factor(ifelse(Relationship == 1, ##       \"Single\", ##       ifelse(Relationship == 3 | Relationship == 4, \"Relationship\", NA) ##     )) ##   )) %>% ##   mutate( ##     CycleDay = 28 - (NextMenstrualOnset - DateTesting), ##     CycleDay = ifelse(WorkerID == 15, 11, ifelse(WorkerID == 16, 18, CycleDay)), ##     CycleDay = ifelse(CycleDay > 1 & CycleDay < 28, CycleDay, ifelse(CycleDay < 1, 1, 28)) ##   ) %>% ##   filter(branch( ##     cycle_length, ##     \"cl_option1\" ~ TRUE, ##     \"cl_option2\" ~ ComputedCycleLength > 25 & ComputedCycleLength < 35, ##     \"cl_option3\" ~ ReportedCycleLength > 25 & ReportedCycleLength < 35 ##   )) %>% ##   filter(branch( ##     certainty, ##     \"cer_option1\" ~ TRUE, ##     \"cer_option2\" ~ Sure1 > 6 | Sure2 > 6 ##   )) %>% ##   mutate(Fertility = branch( ##     fertile, ##     \"fer_option1\" ~ factor(ifelse(CycleDay >= 7 & CycleDay <= 14, ##       \"high\", ##       ifelse(CycleDay >= 17 & CycleDay <= 25, \"low\", \"medium\") ##     )), ##     \"fer_option2\" ~ factor(ifelse(CycleDay >= 6 & CycleDay <= 14, ##       \"high\", ##       ifelse(CycleDay >= 17 & CycleDay <= 27, \"low\", \"medium\") ##     )), ##     \"fer_option3\" ~ factor(ifelse(CycleDay >= 9 & CycleDay <= 17, ##       \"high\", ##       ifelse(CycleDay >= 18 & CycleDay <= 25, \"low\", \"medium\") ##     )), ##     \"fer_option4\" ~ factor(ifelse(CycleDay >= 8 & CycleDay <= 14, \"high\", \"low\")), ##     \"fer_option5\" ~ factor(ifelse(CycleDay >= 8 & CycleDay <= 17, \"high\", \"low\")) ##   )) expand(M) %>%   head() ## # A tibble: 6 × 10 ##   .universe menstrual_calculation relationship_status cycle_length certainty   ##       <int> <chr>                 <chr>               <chr>        <chr>       ## 1         1 mc_option1            rs_option1          cl_option1   cer_option1 ## 2         2 mc_option1            rs_option1          cl_option1   cer_option1 ## 3         3 mc_option1            rs_option1          cl_option1   cer_option1 ## 4         4 mc_option1            rs_option1          cl_option1   cer_option1 ## 5         5 mc_option1            rs_option1          cl_option1   cer_option1 ## 6         6 mc_option1            rs_option1          cl_option1   cer_option2 ## # ℹ 5 more variables: fertile <chr>, .parameter_assignment <list>, ## #   .code <list>, .results <list>, .errors <list> expand(M) %>% nrow() ## [1] 270 M$df %>%   head() ## # A tibble: 6 × 31 ##   WorkerID  Rel1  Rel2  Rel3 Abortion Marriage StemCell RestrictAbortion ##      <dbl> <dbl> <dbl> <dbl>    <dbl>    <dbl>    <dbl>            <dbl> ## 1        1     8     8     7        6        7        1                7 ## 2        2     8     7     7        1        2        3                1 ## 3        3     6     6     2        5        1        2                4 ## 4        4     7     8     6        1        5        2                2 ## 5        5     7     7     9        1        1        4                1 ## 6        6     9     9     9        7        7        2                7 ## # ℹ 23 more variables: Marijuana <dbl>, FreeMarket <dbl>, RichTax <dbl>, ## #   StLiving <dbl>, Profit <dbl>, PrivSocialSec <dbl>, Sure1 <dbl>, ## #   Sure2 <dbl>, Relationship <dbl>, ReportedCycleLength <dbl>, Vote <dbl>, ## #   Donate <dbl>, DateTesting <date>, StartDateofLastPeriod <date>, ## #   StartDateofPeriodBeforeLast <date>, StartDateNext <date>, ## #   FiscConsComp <dbl>, SocConsComp <dbl>, ComputedCycleLength <drtn>, ## #   NextMenstrualOnset <date>, RelationshipStatus <fct>, CycleDay <dbl>, …"},{"path":"http://mucollective.github.io/multiverse/articles/example-durante.html","id":"specifying-conditions-in-the-multiverse-analysis","dir":"Articles","previous_headings":"Multiverse implementation","what":"Specifying conditions in the multiverse analysis","title":"Example multiverse implementation: Effect of fertility on religiosity and political attitudes","text":"multiverse analysis, may occur value one variable might depend value another variable defined previously. example, example, depending filter participants based cycle length, can corresponding value calculating participants’ NextMenstrualOnset. words, using ComputedCycleLength exclude participants, means calculate variable NextMenstrualOnset (date onset next menstrual cycle) using ReportedCycleLength value. Similarly, using ReportedCycleLength exclude participants inconsistent calculate NextMenstrualOnset using ComputedCycleLength. can express conditionals multiverse (See vignette(“Conditions”) details). , use %% operator:","code":"df <- data.raw.study2  %>%     mutate( ComputedCycleLength = StartDateofLastPeriod - StartDateofPeriodBeforeLast ) %>%     mutate(NextMenstrualOnset = branch(menstrual_calculation,             \"mc_option1\" ~ (StartDateofLastPeriod + ComputedCycleLength) %when% (cycle_length != \"cl_option3\"),             \"mc_option2\" ~ (StartDateofLastPeriod + ReportedCycleLength) %when% (cycle_length != \"cl_option2\"),             \"mc_option3\" ~ StartDateNext)     )"},{"path":"http://mucollective.github.io/multiverse/articles/example-durante.html","id":"putting-it-all-together","dir":"Articles","previous_headings":"Multiverse implementation","what":"Putting it all together","title":"Example multiverse implementation: Effect of fertility on religiosity and political attitudes","text":"Specifying conditions allows us exclude inconsistent combinations analyses. Let’s update example including conditions: excluding inconsistent choice combinations, 270−2×(5×1×3×1×2)=210270 − 2 \\times (5 \\times 1 \\times 3 \\times 1 \\times 2) = 210 choice combinations remain: Now, ’ve created complete multiverse presented example #2 Steegen et al.’s paper.","code":"M = multiverse()  inside(M, {   df <- data.raw.study2 %>%     mutate( ComputedCycleLength = StartDateofLastPeriod - StartDateofPeriodBeforeLast )  %>%     filter( branch(cycle_length,         \"cl_option1\" ~ TRUE,         \"cl_option2\" ~ ComputedCycleLength > 25 & ComputedCycleLength < 35,         \"cl_option3\" ~ ReportedCycleLength > 25 & ReportedCycleLength < 35     )) %>%     filter( branch(certainty,         \"cer_option1\" ~ TRUE,         \"cer_option2\" ~ Sure1 > 6 | Sure2 > 6     )) %>%     mutate(NextMenstrualOnset = branch(menstrual_calculation,         \"mc_option1\" %when% (cycle_length != \"cl_option3\") ~ StartDateofLastPeriod + ComputedCycleLength,         \"mc_option2\" %when% (cycle_length != \"cl_option2\") ~ StartDateofLastPeriod + ReportedCycleLength,         \"mc_option3\" ~ StartDateNext)     )  %>%     mutate(       CycleDay = 28 - (NextMenstrualOnset - DateTesting),       CycleDay = ifelse(WorkerID == 15, 11, ifelse(WorkerID == 16, 18, CycleDay)),       CycleDay = ifelse(CycleDay > 1 & CycleDay < 28, CycleDay, ifelse(CycleDay < 1, 1, 28))     ) %>%     mutate( Fertility = branch( fertile,         \"fer_option1\" ~ factor( ifelse(CycleDay >= 7 & CycleDay <= 14, \"high\", ifelse(CycleDay >= 17 & CycleDay <= 25, \"low\", NA)) ),         \"fer_option2\" ~ factor( ifelse(CycleDay >= 6 & CycleDay <= 14, \"high\", ifelse(CycleDay >= 17 & CycleDay <= 27, \"low\", NA)) ),         \"fer_option3\" ~ factor( ifelse(CycleDay >= 9 & CycleDay <= 17, \"high\", ifelse(CycleDay >= 18 & CycleDay <= 25, \"low\", NA)) ),         \"fer_option4\" ~ factor( ifelse(CycleDay >= 8 & CycleDay <= 14, \"high\", \"low\") ),         \"fer_option5\" ~ factor( ifelse(CycleDay >= 8 & CycleDay <= 17, \"high\", \"low\") )     )) %>%     mutate(RelationshipStatus = branch(relationship_status,         \"rs_option1\" ~ factor(ifelse(Relationship==1 | Relationship==2, 'Single', 'Relationship')),         \"rs_option2\" ~ factor(ifelse(Relationship==1, 'Single', 'Relationship')),         \"rs_option3\" ~ factor(ifelse(Relationship==1, 'Single', ifelse(Relationship==3 | Relationship==4, 'Relationship', NA))) )     ) }) expand(M) %>% nrow() ## [1] 210"},{"path":"http://mucollective.github.io/multiverse/articles/example-durante.html","id":"modeling","dir":"Articles","previous_headings":"","what":"Modeling","title":"Example multiverse implementation: Effect of fertility on religiosity and political attitudes","text":"Steegen et al. create 6 models. first model uses data example #1. five models use data example #2, ’ve using far.","code":""},{"path":"http://mucollective.github.io/multiverse/articles/example-durante.html","id":"model-2-effect-of-fertility-and-relationship-status-on-religiosity","dir":"Articles","previous_headings":"Modeling","what":"Model #2: Effect of Fertility and Relationship status on Religiosity","title":"Example multiverse implementation: Effect of fertility on religiosity and political attitudes","text":"authors compute composite score Religiosity calculating average three Religiosity items. authors perform ANOVA study effect Fertility, Relationship interaction term, composite Religiosity score. fit linear model using call: lm( RelComp ~ Fertility * RelationshipStatus, data = df ) inside multiverse save result variable called fit_RelComp. extract results analysis, first create tidy data-frame results model, using broom::tidy. Recall declaring variable multiverse executes default universe, hence need call execute_multiverse() execute analysis multiverse. Now performed analysis universe multiverse, need plot data. plot data, need extract relevant result data-frame universe single data-frame. following code , extracting variable estimates model stored, summary_RelComp creating single tidy data-frame can accessed easily. take data frame plot results confidence interval point estimate using ggplot2. can see, similar plot point estimate confidence intervals regular analysis. use gganimate animate results universe quickly get overview robustness results. Note: discuss extracting results multiverse visualising detail vignette(visualising-multiverse)","code":"inside(M, {   df <- df %>%   mutate( RelComp = round((Rel1 + Rel2 + Rel3)/3, 2)) }) inside(M, {   fit_RelComp <- lm( RelComp ~ Fertility * RelationshipStatus, data = df ) }) inside(M, {   summary_RelComp <- fit_RelComp %>%      broom::tidy( conf.int = TRUE ) })  execute_multiverse(M) expand(M) %>%   extract_variables(summary_RelComp) %>%   unnest( cols = c(summary_RelComp) ) %>%   head( 10 ) ## # A tibble: 10 × 17 ##    .universe cycle_length certainty   menstrual_calculation fertile     ##        <int> <chr>        <chr>       <chr>                 <chr>       ##  1         1 cl_option1   cer_option1 mc_option1            fer_option1 ##  2         1 cl_option1   cer_option1 mc_option1            fer_option1 ##  3         1 cl_option1   cer_option1 mc_option1            fer_option1 ##  4         1 cl_option1   cer_option1 mc_option1            fer_option1 ##  5         2 cl_option1   cer_option1 mc_option1            fer_option1 ##  6         2 cl_option1   cer_option1 mc_option1            fer_option1 ##  7         2 cl_option1   cer_option1 mc_option1            fer_option1 ##  8         2 cl_option1   cer_option1 mc_option1            fer_option1 ##  9         3 cl_option1   cer_option1 mc_option1            fer_option1 ## 10         3 cl_option1   cer_option1 mc_option1            fer_option1 ## # ℹ 12 more variables: relationship_status <chr>, .parameter_assignment <list>, ## #   .code <list>, .results <list>, .errors <list>, term <chr>, estimate <dbl>, ## #   std.error <dbl>, statistic <dbl>, p.value <dbl>, conf.low <dbl>, ## #   conf.high <dbl> p <- expand(M) %>%   extract_variables(summary_RelComp) %>%   unnest( cols = c(summary_RelComp) ) %>%   mutate( term = recode( term,                   \"RelationshipStatusSingle\" = \"Single\",                  \"Fertilitylow:RelationshipStatusSingle\" = \"Single:Fertility_low\"   ) ) %>%   filter( term != \"(Intercept)\" ) %>%   ggplot() +    geom_vline( xintercept = 0,  colour = '#979797' ) +   geom_point( aes(x = estimate, y = term)) +   geom_errorbarh( aes(xmin = conf.low, xmax = conf.high, y = term), height = 0) +   theme_minimal() +   transition_manual( .universe )  animate(p, nframes = 210, fps = 4, res = 150)"},{"path":"http://mucollective.github.io/multiverse/articles/example-frequentist.html","id":"multiverse-case-study-2","dir":"Articles","previous_headings":"","what":"Multiverse case study #2","title":"Example multiverse implementation: Re-evaluating the efficiency of physical visualizations","text":"vignette, recreate multiverse analysis, Re-evaluating efficiency Physical Visualisations, performed Dragicevic et al. Increasing transparency research papers explorable multiverse analyses using package.","code":""},{"path":"http://mucollective.github.io/multiverse/articles/example-frequentist.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Example multiverse implementation: Re-evaluating the efficiency of physical visualizations","text":"original study investigated effects moving 3D data visualizations physical world found can improve users’ efficiency information retrieval tasks. original study consisted two experiments. Dragicevic et al. re-analyze second experiment, whose goal better understand physical visualizations appear superior.","code":""},{"path":"http://mucollective.github.io/multiverse/articles/example-frequentist.html","id":"the-data","dir":"Articles","previous_headings":"","what":"The data","title":"Example multiverse implementation: Re-evaluating the efficiency of physical visualizations","text":"experiment involved “enhanced” version -screen 3D chart “impoverished” version physical 3D chart. enhanced -screen chart rotated using 3D-tracked tangible prop instead mouse. impoverished physical chart consisted physical object participants instructed use fingers marking. 4 conditions: physical touch: physical 3D bar charts touch explicitly encouraged instructions. physical touch: charts except subjects told use fingers mark points interest (labels bars). virtual prop: -screen 3D bar charts tangible prop controlling 3D rotation. virtual mouse: charts , 3D rotation mouse-controlled. manipulations meant answer three questions: important direct touch physical condition? important rotation direct manipulation? important visual realism? Visual realism referred higher perceptual richness physical objects compared -screen objects, especially concerning depth cues. load data study contained data(userlogs) multiverse package.","code":"data(\"userlogs\") data.userlogs.raw = userlogs  head(data.userlogs.raw) ##   subject group formerSubject conditionrank modality  modalityname repetition ## 1       4     4            no             1        4 virtual-mouse          1 ## 2       4     4            no             1        4 virtual-mouse          1 ## 3       4     4            no             1        4 virtual-mouse          1 ## 4       4     4            no             1        4 virtual-mouse          1 ## 5       4     4            no             1        4 virtual-mouse          2 ## 6       4     4            no             1        4 virtual-mouse          2 ##   question trial  datasetname readingTime error duration perceivedDifficulty ## 1        1     1         army          26     0  44.5686                   2 ## 2        2     2         army          10     0 120.6228                   4 ## 3        3     3         army           2     0  99.4174                   3 ## 4        4     4         army          19     0  53.7313                   3 ## 5        1     5 externaldebt          12     1  62.6189                   3 ## 6        2     6 externaldebt          20     0  59.1863                   2 ##   perceivedTime ## 1            42 ## 2            81 ## 3            95 ## 4            66 ## 5            59 ## 6            48"},{"path":"http://mucollective.github.io/multiverse/articles/example-frequentist.html","id":"analysis-1-mean-and-confidence-intervals-for-each-condition","dir":"Articles","previous_headings":"","what":"Analysis #1: Mean and Confidence Intervals for each condition","title":"Example multiverse implementation: Re-evaluating the efficiency of physical visualizations","text":"vignette, primarily concerned variables: duration modality, focus analysis task completion times. first (default) analysis one-sided t-test estimate means 95% confidence intervals log-transformed task completion time (duration). Since, task completion times strictly positive, may long tail, decision makes sense. However, may reasonable use untransformed data well. hand, also reasonable use bootstrap test instead t-test. results four possible analysis combinations, two data transformation (log untransformed), model (t-test BCa bootstrap).","code":""},{"path":"http://mucollective.github.io/multiverse/articles/example-frequentist.html","id":"average-task-completion-time-arithmetic-mean-for-each-condition-","dir":"Articles","previous_headings":"Analysis #1: Mean and Confidence Intervals for each condition","what":"Average task completion time (arithmetic mean) for each condition.","title":"Example multiverse implementation: Re-evaluating the efficiency of physical visualizations","text":"need helper functions take arguments return output.functions help us calculate mean point estimate upper lower bounds 95% confidence interval using bootstrap method t-test method. Next initialise multiverse object within analysis take place. Now define parameters want consider multiverse: confidence interval method (ci_method) data transformation method (data_transform). also define parameter confidence level, choice 95% confidence level arbitrary can choose instead present results alternate confidence levels. vary : 50%, 89%, 95%, 99.9%. Thus multiverse consists : 2 ×\\times 2 ×\\times 7 different analysis combinations.","code":"bootstrappedCI <- function(observations, conf.level, seed = 0) {   samplemean <- function(x, d) {return(mean(x[d]))}   pointEstimate <- samplemean(observations)   if (!(is.na(seed) | is.null(seed))){     set.seed(seed) # make deterministic   }   bootstrap_samples <- boot::boot(data = observations, statistic = samplemean, R = 5000)   bootci <- boot::boot.ci(bootstrap_samples, type = \"bca\", conf = conf.level)   c(pointEstimate,  bootci$bca[4], bootci$bca[5]) }  tCI <- function(observations, conf.level) {   pointEstimate <- mean(observations)   sampleSD <- sd(observations)   sampleN <- length(observations)   sampleError <- qt(1-(1-conf.level)/2, df = sampleN-1) * sampleSD/sqrt(sampleN)   c(pointEstimate, pointEstimate - sampleError, pointEstimate + sampleError) } M = multiverse()"},{"path":"http://mucollective.github.io/multiverse/articles/example-frequentist.html","id":"note","dir":"Articles","previous_headings":"Analysis #1: Mean and Confidence Intervals for each condition > Average task completion time (arithmetic mean) for each condition.","what":"Note","title":"Example multiverse implementation: Re-evaluating the efficiency of physical visualizations","text":"vignette, make use multiverse code chunks, custom engine designed work multiverse package, implement multiverse analyses. Please refer vignette (vignette(\"multiverse--rmd\")) details. Users instead make use function suited script-style implementation. Please refer vignettes (vignette(\"example-durante\")) details. now look multiverse table see created possible combinations: actually perform steps within multiverse get results different possible combinations analysis options. First, perform data transformation operation within multiverse. result data appropriately transformed (log identity) corresponding multiverse. Next, calculate mean point estimates 95% confidence intervals condition experiment. also need format data results neatly stored data.frame. strongly recommend sorting results wish extract multiverse data.frame make much easier analysing visualising results. Since multiverse executes default analysis, run following command run analysis defined multiverse.","code":"ci_method <- branch(   ci_method,   \"t based\" ~ \"tCI\",   \"bootstrap\" ~ \"bootstrappedCI\" )  data_transform <- branch(   data_transform,   \"log-transformed\" ~ log,   \"untransformed\" ~ identity )  conf_level <- branch(   conf_level,   \"50%\" ~ 0.5,   \"67\" ~ 0.67,   \"95%\" ~ 0.95,   \"99%\" ~ 0.99 ) ```{multiverse default-m-1, inside = M} ci_method <- branch(ci_method,     \"t based\"   ~ \"tCI\",     \"bootstrap\" ~ \"bootstrappedCI\" )  data_transform <- branch(data_transform,     \"log-transformed\" ~ log,     \"untransformed\" ~ identity )  conf_level <-  branch(conf_level,     \"50%\" ~ 0.5,     \"89\" ~ 0.89,     \"95%\" ~ 0.95,     \"99%\" ~ 0.99 ) ``` expand(M) ## # A tibble: 16 × 8 ##    .universe ci_method data_transform  conf_level .parameter_assignment ##        <int> <chr>     <chr>           <chr>      <list>                ##  1         1 t based   log-transformed 50%        <named list [3]>      ##  2         2 t based   log-transformed 67         <named list [3]>      ##  3         3 t based   log-transformed 95%        <named list [3]>      ##  4         4 t based   log-transformed 99%        <named list [3]>      ##  5         5 t based   untransformed   50%        <named list [3]>      ##  6         6 t based   untransformed   67         <named list [3]>      ##  7         7 t based   untransformed   95%        <named list [3]>      ##  8         8 t based   untransformed   99%        <named list [3]>      ##  9         9 bootstrap log-transformed 50%        <named list [3]>      ## 10        10 bootstrap log-transformed 67         <named list [3]>      ## 11        11 bootstrap log-transformed 95%        <named list [3]>      ## 12        12 bootstrap log-transformed 99%        <named list [3]>      ## 13        13 bootstrap untransformed   50%        <named list [3]>      ## 14        14 bootstrap untransformed   67         <named list [3]>      ## 15        15 bootstrap untransformed   95%        <named list [3]>      ## 16        16 bootstrap untransformed   99%        <named list [3]>      ## # ℹ 3 more variables: .code <list>, .results <list>, .errors <list> duration <- do.call(data_transform, list(data.userlogs.raw$duration)) ```{multiverse default-m-2, inside = M} duration <- do.call(data_transform, list(data.userlogs.raw$duration)) ``` modality <- data.userlogs.raw$modalityname  ci.physical_notouch <- do.call(ci_method, list(duration[modality == \"physical-notouch\"], conf_level)) ci.physical_notouch <- setNames(as.list(c(\"physical_notouch\", ci.physical_notouch)), c(\"modality\", \"estimate\", \"conf.low\", \"conf.high\"))  ci.physical_touch <- do.call(ci_method, list(duration[modality == \"physical-touch\"], conf_level)) ci.physical_touch <- setNames(as.list(c(\"physical_touch\", ci.physical_touch)), c(\"modality\", \"estimate\", \"conf.low\", \"conf.high\"))  ci.virtual_prop <- do.call(ci_method, list(duration[modality == \"virtual-prop\"], conf_level)) ci.virtual_prop <- setNames(as.list(c(\"virtual_prop\", ci.virtual_prop)), c(\"modality\", \"estimate\", \"conf.low\", \"conf.high\"))  ci.virtual_mouse <- do.call(ci_method, list(duration[modality == \"virtual-mouse\"], conf_level)) ci.virtual_mouse <- setNames(as.list(c(\"virtual_mouse\", ci.virtual_mouse)), c(\"modality\", \"estimate\", \"conf.low\", \"conf.high\"))  df <- rbind.data.frame(ci.physical_notouch, ci.physical_touch, ci.virtual_prop, ci.virtual_mouse, make.row.names = FALSE, stringsAsFactors = FALSE) df <- transform(df, estimate = as.numeric(estimate), conf.low = as.numeric(conf.low), conf.high = as.numeric(conf.high)) ```{multiverse default-m-3, inside = M} modality <- data.userlogs.raw$modalityname  ci.physical_notouch <- do.call(ci_method, list(duration[modality == 'physical-notouch'], conf_level)) ci.physical_notouch <- setNames(as.list(c(\"physical_notouch\", ci.physical_notouch)), c(\"modality\", \"estimate\", \"conf.low\", \"conf.high\"))  ci.physical_touch <- do.call(ci_method, list(duration[modality == 'physical-touch'], conf_level)) ci.physical_touch <- setNames(as.list(c(\"physical_touch\", ci.physical_touch)), c(\"modality\", \"estimate\", \"conf.low\", \"conf.high\"))  ci.virtual_prop <- do.call(ci_method, list(duration[modality == 'virtual-prop'], conf_level)) ci.virtual_prop <- setNames(as.list(c(\"virtual_prop\", ci.virtual_prop)), c(\"modality\", \"estimate\", \"conf.low\", \"conf.high\"))  ci.virtual_mouse <- do.call(ci_method, list(duration[modality == 'virtual-mouse'], conf_level)) ci.virtual_mouse <- setNames(as.list(c(\"virtual_mouse\", ci.virtual_mouse)), c(\"modality\", \"estimate\", \"conf.low\", \"conf.high\"))  df <- rbind.data.frame(ci.physical_notouch, ci.physical_touch, ci.virtual_prop, ci.virtual_mouse, make.row.names = FALSE, stringsAsFactors = FALSE) df <- transform(df, estimate = as.numeric(estimate), conf.low = as.numeric(conf.low), conf.high = as.numeric(conf.high)) ``` execute_multiverse(M)"},{"path":[]},{"path":"http://mucollective.github.io/multiverse/articles/example-frequentist.html","id":"extracting-the-results-from-the-multiverse-object","dir":"Articles","previous_headings":"Results #1","what":"Extracting the results from the multiverse object","title":"Example multiverse implementation: Re-evaluating the efficiency of physical visualizations","text":"Next, need extract results multiverse. results unique analysis combination (universe multiverse), stored environment .results column. can extract data frames column using function. creates new column data frame, summary consists data frames. can see , row summary column consists 4×44 \\times 4, data frame need unpack. use function expand different columns data frame columns. Finally, use function unnest rows data frame row. Note .universe column indexes universe multiverse .e. unique analysis combination. can see result transformation. can see created four new columns (modality, estimate, conf.low, conf.high). addition, four rows universe corresponding results four conditions experiment.","code":"df.mtbl <- expand(M) df.mtbl$summary = map(df.mtbl$.results, \"df\")  head(df.mtbl) ## # A tibble: 6 × 9 ##   .universe ci_method data_transform  conf_level .parameter_assignment ##       <int> <chr>     <chr>           <chr>      <list>                ## 1         1 t based   log-transformed 50%        <named list [3]>      ## 2         2 t based   log-transformed 67         <named list [3]>      ## 3         3 t based   log-transformed 95%        <named list [3]>      ## 4         4 t based   log-transformed 99%        <named list [3]>      ## 5         5 t based   untransformed   50%        <named list [3]>      ## 6         6 t based   untransformed   67         <named list [3]>      ## # ℹ 4 more variables: .code <list>, .results <list>, .errors <list>, ## #   summary <list> df.mtbl <- unnest_wider(df.mtbl, c(summary)) df.mtbl <- unnest(df.mtbl, cols = c(modality, estimate, conf.low, conf.high)) head(df.mtbl) ## # A tibble: 6 × 12 ##   .universe ci_method data_transform  conf_level .parameter_assignment ##       <int> <chr>     <chr>           <chr>      <list>                ## 1         1 t based   log-transformed 50%        <named list [3]>      ## 2         1 t based   log-transformed 50%        <named list [3]>      ## 3         1 t based   log-transformed 50%        <named list [3]>      ## 4         1 t based   log-transformed 50%        <named list [3]>      ## 5         2 t based   log-transformed 67         <named list [3]>      ## 6         2 t based   log-transformed 67         <named list [3]>      ## # ℹ 7 more variables: .code <list>, .results <list>, .errors <list>, ## #   modality <chr>, estimate <dbl>, conf.low <dbl>, conf.high <dbl>"},{"path":"http://mucollective.github.io/multiverse/articles/example-frequentist.html","id":"visualising-the-results","dir":"Articles","previous_headings":"Results #1","what":"Visualising the results","title":"Example multiverse implementation: Re-evaluating the efficiency of physical visualizations","text":"sort results, transform log transformed variables back natural scale. ready visualise result animating universe.  figure shows (geometric) mean completion time condition. first sight, physical touch appears consistently faster conditions, across possible analysis combinations specified multiverse. However, since condition within-subject factor, preferable examine within-subject differences, show next section.","code":"df.mtbl <- arrange(df.mtbl, conf_level, desc(data_transform), desc(ci_method))  df.results <- df.mtbl df.results$estimate[df.mtbl$data_transform == \"log-transformed\"] = exp(df.mtbl$estimate[df.mtbl$data_transform == \"log-transformed\"]) df.results$conf.low[df.mtbl$data_transform == \"log-transformed\"] = exp(df.mtbl$conf.low[df.mtbl$data_transform == \"log-transformed\"]) df.results$conf.high[df.mtbl$data_transform == \"log-transformed\"] = exp(df.mtbl$conf.high[df.mtbl$data_transform == \"log-transformed\"])  df.results %>% head() ## # A tibble: 6 × 12 ##   .universe ci_method data_transform conf_level .parameter_assignment ##       <int> <chr>     <chr>          <chr>      <list>                ## 1         5 t based   untransformed  50%        <named list [3]>      ## 2         5 t based   untransformed  50%        <named list [3]>      ## 3         5 t based   untransformed  50%        <named list [3]>      ## 4         5 t based   untransformed  50%        <named list [3]>      ## 5        13 bootstrap untransformed  50%        <named list [3]>      ## 6        13 bootstrap untransformed  50%        <named list [3]>      ## # ℹ 7 more variables: .code <list>, .results <list>, .errors <list>, ## #   modality <chr>, estimate <dbl>, conf.low <dbl>, conf.high <dbl> p <- df.results %>%   ggplot() +    geom_vline( xintercept = 0,  colour = '#979797' ) +   geom_point( aes(x = estimate, y = modality)) +   geom_errorbarh( aes(xmin = conf.low, xmax = conf.high, y = modality), height = 0) +   transition_manual( .universe ) +   theme_minimal()  animate(p, nframes = 28,  fps = 2) ## `nframes` and `fps` adjusted to match transition"},{"path":"http://mucollective.github.io/multiverse/articles/example-frequentist.html","id":"sidebar-using-the-tidyverse-to-extract-and-visualize-the-results","dir":"Articles","previous_headings":"Results #1","what":"Sidebar: Using the tidyverse to extract and visualize the results","title":"Example multiverse implementation: Re-evaluating the efficiency of physical visualizations","text":"far tried keep analysis base R. However, steps involved extracting visualising results multiverse maybe convenient using tidyverse API. can implement steps taken previous three code block following way using tidyverse. result data frame created previous step, used input data ggplot, df.results. multiverse package flexible, restrict towards particular style R programming.","code":"expand(M) %>%   mutate( summary = map(.results, \"df\") ) %>%   unnest_wider( c(summary)) %>%   unnest(cols = c(modality, estimate, conf.low, conf.high)) %>%   mutate(     estimate = ifelse(data_transform == \"log-transformed\", exp(estimate), estimate),     conf.low = ifelse(data_transform == \"log-transformed\", exp(conf.low), conf.low),     conf.high = ifelse(data_transform == \"log-transformed\", exp(conf.high), conf.high)   ) %>%   arrange(conf_level, desc(data_transform), desc(ci_method)) ## # A tibble: 64 × 12 ##    .universe ci_method data_transform  conf_level .parameter_assignment ##        <int> <chr>     <chr>           <chr>      <list>                ##  1         5 t based   untransformed   50%        <named list [3]>      ##  2         5 t based   untransformed   50%        <named list [3]>      ##  3         5 t based   untransformed   50%        <named list [3]>      ##  4         5 t based   untransformed   50%        <named list [3]>      ##  5        13 bootstrap untransformed   50%        <named list [3]>      ##  6        13 bootstrap untransformed   50%        <named list [3]>      ##  7        13 bootstrap untransformed   50%        <named list [3]>      ##  8        13 bootstrap untransformed   50%        <named list [3]>      ##  9         1 t based   log-transformed 50%        <named list [3]>      ## 10         1 t based   log-transformed 50%        <named list [3]>      ## # ℹ 54 more rows ## # ℹ 7 more variables: .code <list>, .results <list>, .errors <list>, ## #   modality <chr>, estimate <dbl>, conf.low <dbl>, conf.high <dbl>"},{"path":"http://mucollective.github.io/multiverse/articles/example-frequentist.html","id":"analysis-2-differences-between-mean-completion-times-between-conditions","dir":"Articles","previous_headings":"","what":"Analysis #2: Differences between mean completion times between conditions","title":"Example multiverse implementation: Re-evaluating the efficiency of physical visualizations","text":"Next, compute pairwise ratios mean completion times examine within-subject differences. execute analysis combinations (universes) multiverse. can output data frame created inside multiverse code block, data frame R. output result default universe () multiverse. can see data frame, intended, computed mean differences 95% confidence intervals conditions care .","code":"diff.touch_notouch <- duration[modality == \"physical-notouch\"] - duration[modality == \"physical-touch\"] `physical_touch - physical_notouch` <- do.call(ci_method, list(diff.touch_notouch, conf_level)) `physical_touch - physical_notouch` <- setNames(as.list(c(\"physical_touch - physical_notouch\", `physical_touch - physical_notouch`)), c(\"modality\", \"estimate\", \"conf.low\", \"conf.high\"))  diff.notouch_prop <- duration[modality == \"physical-notouch\"] - duration[modality == \"virtual-prop\"] `physical_notouch - virtual_prop` <- do.call(ci_method, list(diff.notouch_prop, conf_level)) `physical_notouch - virtual_prop` <- setNames(as.list(c(\"physical_notouch - virtual_prop\", `physical_notouch - virtual_prop`)), c(\"modality\", \"estimate\", \"conf.low\", \"conf.high\"))  diff.propr_mouse <- duration[modality == \"virtual-prop\"] - duration[modality == \"virtual-mouse\"] `virtual_prop - virtual_mouse` <- do.call(ci_method, list(diff.propr_mouse, conf_level)) `virtual_prop - virtual_mouse` <- setNames(as.list(c(\"virtual_prop - virtual_mouse\", `virtual_prop - virtual_mouse`)), c(\"modality\", \"estimate\", \"conf.low\", \"conf.high\"))  df.diffs <- rbind.data.frame(`physical_touch - physical_notouch`, `physical_notouch - virtual_prop`, `virtual_prop - virtual_mouse`, make.row.names = FALSE, stringsAsFactors = FALSE) df.diffs <- transform(df.diffs, estimate = as.numeric(estimate), conf.low = as.numeric(conf.low), conf.high = as.numeric(conf.high)) ```{multiverse default-m-4, inside = M} diff.touch_notouch <- duration[modality == 'physical-notouch'] - duration[modality == 'physical-touch'] `physical_touch - physical_notouch` <- do.call(ci_method, list(diff.touch_notouch, conf_level)) `physical_touch - physical_notouch` <- setNames(as.list(c(\"physical_touch - physical_notouch\", `physical_touch - physical_notouch`)), c(\"modality\", \"estimate\", \"conf.low\", \"conf.high\"))  diff.notouch_prop <- duration[modality == 'physical-notouch'] - duration[modality == 'virtual-prop'] `physical_notouch - virtual_prop` <- do.call(ci_method, list(diff.notouch_prop, conf_level)) `physical_notouch - virtual_prop` <- setNames(as.list(c(\"physical_notouch - virtual_prop\", `physical_notouch - virtual_prop`)), c(\"modality\", \"estimate\", \"conf.low\", \"conf.high\"))  diff.propr_mouse <- duration[modality == 'virtual-prop'] - duration[modality == 'virtual-mouse'] `virtual_prop - virtual_mouse` <- do.call(ci_method, list(diff.propr_mouse, conf_level)) `virtual_prop - virtual_mouse` <- setNames(as.list(c(\"virtual_prop - virtual_mouse\", `virtual_prop - virtual_mouse`)), c(\"modality\", \"estimate\", \"conf.low\", \"conf.high\"))  df.diffs <- rbind.data.frame(`physical_touch - physical_notouch`, `physical_notouch - virtual_prop`, `virtual_prop - virtual_mouse`, make.row.names = FALSE, stringsAsFactors = FALSE) df.diffs <- transform(df.diffs, estimate = as.numeric(estimate), conf.low = as.numeric(conf.low), conf.high = as.numeric(conf.high)) ``` execute_multiverse(M) ```{multiverse default-m-5, inside = M} df.diffs ``` ##                            modality    estimate    conf.low  conf.high ## 1 physical_touch - physical_notouch  0.15764964  0.13052972  0.1847696 ## 2   physical_notouch - virtual_prop -0.13555912 -0.16176768 -0.1093506 ## 3      virtual_prop - virtual_mouse -0.03398807 -0.05599883 -0.0119773"},{"path":"http://mucollective.github.io/multiverse/articles/example-frequentist.html","id":"extracting-and-visualizing-the-results-from-the-multiverse","dir":"Articles","previous_headings":"Analysis #2: Differences between mean completion times between conditions","what":"Extracting and visualizing the results from the multiverse","title":"Example multiverse implementation: Re-evaluating the efficiency of physical visualizations","text":"use workflow described previous section extract results universe multiverse. use gganimate plot results.","code":"df.results.diff <- expand(M) %>%   extract_variables(df.diffs) %>%   unnest(c(df.diffs)) %>%   arrange(desc(data_transform), conf_level, desc(ci_method))  df.results.diff %>%   head() ## # A tibble: 6 × 12 ##   .universe ci_method data_transform conf_level .parameter_assignment ##       <int> <chr>     <chr>          <chr>      <list>                ## 1         5 t based   untransformed  50%        <named list [3]>      ## 2         5 t based   untransformed  50%        <named list [3]>      ## 3         5 t based   untransformed  50%        <named list [3]>      ## 4        13 bootstrap untransformed  50%        <named list [3]>      ## 5        13 bootstrap untransformed  50%        <named list [3]>      ## 6        13 bootstrap untransformed  50%        <named list [3]>      ## # ℹ 7 more variables: .code <list>, .results <list>, .errors <list>, ## #   modality <chr>, estimate <dbl>, conf.low <dbl>, conf.high <dbl>"},{"path":"http://mucollective.github.io/multiverse/articles/example-frequentist.html","id":"results-2","dir":"Articles","previous_headings":"","what":"Results #2","title":"Example multiverse implementation: Re-evaluating the efficiency of physical visualizations","text":"value lower 1 (.e., left side dark line) means condition left faster condition right. confidence intervals corrected multiplicity. results study appear relatively robust consistent across possible combinations tried.  Correction multiplicity can another analysis option multiverse analysis. Since individual confidence level 95%, interval contain value 1 indicates statistically significant difference α = .05 level. probability getting least one interval 3 population means zero (.e., family-wise error rate) α=.14. Likewise, simultaneous confidence level 86%, meaning replicate experiment , expect 3 confidence intervals capture 3 population means 86% time.","code":"p <- df.results.diff %>%   ggplot() +    geom_vline( xintercept = 0,  colour = '#979797' ) +   geom_point( aes(x = estimate, y = modality)) +   geom_errorbarh( aes(xmin = conf.low, xmax = conf.high, y = modality), height = 0) +   transition_manual( .universe ) +   theme_minimal()  animate(p, nframes = 28,  fps = 4) ## `nframes` and `fps` adjusted to match transition"},{"path":"http://mucollective.github.io/multiverse/articles/example-frequentist.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"Example multiverse implementation: Re-evaluating the efficiency of physical visualizations","text":"example adapted Dragicevic et al.’s study Increasing transparency research papers explorable multiverse analyses show previously performed multiverse analysis can reproduced using package flexible, easily readable manner. also shows multiverse analysis can implemented mostly base R syntax.","code":""},{"path":"http://mucollective.github.io/multiverse/articles/example-hurricane.html","id":"multiverse-case-study-4","dir":"Articles","previous_headings":"","what":"Multiverse case study #4","title":"Example multiverse implementation: Female hurricanes are deadlier than male hurricanes","text":"document re-implement specification curve analysis Simonsohn et al. [http://dx.doi.org/10.2139/ssrn.2694998] using Multiverse library.","code":""},{"path":"http://mucollective.github.io/multiverse/articles/example-hurricane.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Example multiverse implementation: Female hurricanes are deadlier than male hurricanes","text":"specification curve analysis principle similar multiverse analysis, alternate specifications particular analysis asking research question explored. study, Simonsohn et al. explore robustness analysis Jung et al. [https://doi.org/10.1073/pnas.1402786111], investigated whether hurricanes female sounding names deadlier hurricanes male sounding names. first begin loading dataset provided library. rename variables perform data transformations standardises variables (mean = 0 standard deviation = 1).","code":"data(\"hurricane\")  # read and process data hurricane_data <- hurricane %>%     # rename some variables     rename(         year = Year,         name = Name,         dam = NDAM,         death = alldeaths,         female = Gender_MF,         masfem = MasFem,         category = Category,         pressure = Minpressure_Updated_2014,         wind = HighestWindSpeed     ) %>%     # create new variables     mutate(         post = ifelse(year>1979, 1, 0),         zcat = as.numeric(scale(category)),         zpressure = -scale(pressure),         zwind = as.numeric(scale(wind)),         z3 = as.numeric((zpressure + zcat + zwind) / 3)     )"},{"path":"http://mucollective.github.io/multiverse/articles/example-hurricane.html","id":"original-analysis","dir":"Articles","previous_headings":"","what":"Original analysis","title":"Example multiverse implementation: Female hurricanes are deadlier than male hurricanes","text":"illustrate implementation original analysis Jung et al. [https://doi.org/10.1073/pnas.1402786111]. original analysis used negative binomial model, suitable overdispersed count data. Due issues model fit MASS::glm.nb function (see Note 3: https://github.com/uwdata/boba/tree/master/example/hurricane), instead use simpler poisson regression model ensure none models fail fitting. original analysis, Jung et al. exclude two hurricanes caused highest number deaths (Katrina Audrey) outliers. transform variable used interactions 11-point femininity rating damages zpressure respectively, seen :","code":"df <- hurricane_data %>%     filter( name != \"Katrina\" & name != \"Audrey\" )  fit <- glm(death ~ masfem * dam + masfem * zpressure, data = df, family = \"poisson\")"},{"path":"http://mucollective.github.io/multiverse/articles/example-hurricane.html","id":"multiverse-analysis","dir":"Articles","previous_headings":"","what":"Multiverse Analysis","title":"Example multiverse implementation: Female hurricanes are deadlier than male hurricanes","text":"implement multiverse analysis, first need create multiverse object:","code":"M <- multiverse()"},{"path":"http://mucollective.github.io/multiverse/articles/example-hurricane.html","id":"excluding-outliers","dir":"Articles","previous_headings":"Multiverse Analysis","what":"Excluding outliers","title":"Example multiverse implementation: Female hurricanes are deadlier than male hurricanes","text":"implementation, Simonsohn et al. describe principled method excluding outliers based extreme observations death damages. consider reasonable exclude two extreme hurricanes terms death, upto three extreme hurricanes terms damages. space decisions implemented using multiverse follows:","code":""},{"path":"http://mucollective.github.io/multiverse/articles/example-hurricane.html","id":"note","dir":"Articles","previous_headings":"Multiverse Analysis > Excluding outliers","what":"Note","title":"Example multiverse implementation: Female hurricanes are deadlier than male hurricanes","text":"vignette, make use multiverse code chunks, custom engine designed work multiverse package, implement multiverse analyses. Please refer vignette (vignette(\"multiverse--rmd\")) details. Users instead make use function suited script-style implementation. Please refer vignettes (vignette(\"complete-multiverse-analysis\") vignette(\"basic-multiverse\")) details.","code":"```{multiverse default-m-1, inside = M} df <- hurricane_data %>%     filter(branch(death_outliers,          \"no_exclusion\" ~ TRUE,         \"most_extreme_deaths\" ~ name != \"Katrina\",         \"most_extreme_two_deaths\" ~ ! (name %in% c(\"Katrina\", \"Audrey\"))     )) %>%     filter(branch(damage_outliers,         \"no_exclusion\" ~ TRUE,         \"most_extreme_one_damage\" ~ ! (name %in% c(\"Sandy\")),         \"most_extreme_two_damage\" ~ ! (name %in% c(\"Sandy\", \"Andrew\")),         \"most_extreme_three_damage\" ~ ! (name %in% c(\"Sandy\", \"Andrew\", \"Donna\"))     )) ```"},{"path":"http://mucollective.github.io/multiverse/articles/example-hurricane.html","id":"identifying-independent-variables","dir":"Articles","previous_headings":"Multiverse Analysis","what":"Identifying independent variables","title":"Example multiverse implementation: Female hurricanes are deadlier than male hurricanes","text":"next decision involves identifying appropriate independent variable primary effect — operationalise femininity name hurricane. Simonsohn et al. identify two distinct ways. First, using 11 point scale used original analysis; second using binary scale. decision involved whether transform damages, another independent variable. damages follow long tailed, positive valued distribution. implement two decisions multiverse follows:","code":"```{multiverse label = default-m-2, inside = M} df <- df %>%     mutate(         femininity = branch(femininity_calculation,           \"masfem\" ~ masfem,           \"female\" ~ female         ),         damage = branch(damage_transform,           \"no_transform\" ~ identity(dam),           \"log_transform\" ~ log(dam)         )     ) ```"},{"path":"http://mucollective.github.io/multiverse/articles/example-hurricane.html","id":"declaring-alternative-specifications-of-regression-model","dir":"Articles","previous_headings":"Multiverse Analysis","what":"Declaring alternative specifications of regression model","title":"Example multiverse implementation: Female hurricanes are deadlier than male hurricanes","text":"next step fit model. can use either log-linear model poisson model step. reasonable alternatives dataset. also make choice whether want include interaction femininity damage. results following specification: implemented analysis model multiverse, corresponding step applied analysis path. interpret results, first estimate prediction interval corresponding analysis path.","code":"```{multiverse label = default-m-3, inside = M} fit <- glm(branch(model, \"linear\" ~ log(death + 1), \"poisson\" ~ death) ~            branch(main_interaction,               \"no\" ~ femininity + damage,               \"yes\" ~ femininity * damage           ) + branch(other_predictors,               \"none\" ~ NULL,               \"pressure\" %when% (main_interaction == \"yes\") ~ femininity * zpressure,               \"wind\" %when% (main_interaction == \"yes\") ~ femininity * zwind,               \"category\" %when% (main_interaction == \"yes\") ~ femininity * zcat,               \"all\" %when% (main_interaction == \"yes\") ~ femininity * z3,               \"all_no_interaction\" %when% (main_interaction == \"no\") ~ z3           ) + branch(covariates, \"1\" ~ NULL, \"2\" ~ year:damage, \"3\" ~ post:damage),            family = branch(model, \"linear\" ~ \"gaussian\", \"poisson\" ~ \"poisson\"),             data = df) ``` ```{multiverse label = default-m-4, inside = M} pred <- predict(fit, se.fit = TRUE, type = \"response\")  pred2expectation <- function(mu, sigma) {     branch(model, \"linear\" ~ exp(mu + sigma^2/2) - 1, \"poisson\" ~ mu) }  disagg_fit <- df  %>%     mutate(         fitted = pred$fit,                                # add fitted predictions and standard errors to dataframe         se.fit = pred$se.fit,         deg_f = df.residual(fit),                         # get degrees of freedom         sigma = sigma(fit),                               # get residual standard deviation         se.residual = sqrt(sum(residuals(fit)^2) / deg_f) # get residual standard errors     )  # aggregate fitted effect of female storm name expectation <- disagg_fit %>%     mutate(expected_deaths = pred2expectation(fitted, sigma)) %>%      group_by(female) %>%     summarise(mean_deaths = mean(expected_deaths), .groups = \"drop_last\") %>%      compare_levels(mean_deaths, by = female) ```"},{"path":"http://mucollective.github.io/multiverse/articles/example-hurricane.html","id":"execution-and-results","dir":"Articles","previous_headings":"Multiverse Analysis","what":"Execution and Results","title":"Example multiverse implementation: Female hurricanes are deadlier than male hurricanes","text":"’ve specified multiverse analysis, like execute entire multiverse, view results. , plot mean difference point estimate expected deaths hurricane feminine name, unique analysis path. find based arbitrary specifications multiverse, perhaps relation femininity name hurricane number deaths causes, models predict lower number deaths, predict much higher.","code":"execute_multiverse(M)  mean_deaths <- multiverse::expand(M) %>%   extract_variables(expectation) %>%   unnest(expectation)  mean_deaths %>%   arrange(mean_deaths) %>%   mutate(.id = row_number()) %>%   ggplot(aes(y = mean_deaths, x = .id)) +   geom_point() +   theme_minimal() +   labs(x = \"universe\", y = \"Mean difference in expected deaths\")"},{"path":"http://mucollective.github.io/multiverse/articles/execution-multiverse.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Execution of multiverse analysis: Sequential and Parallel","text":"user-specificed multiverses can quite large, natural make use rich parallel processing resources widely available. multiverse makes use futures using future library, “provides simple uniform way evaluating R expressions asynchronously…”. allows user us (creators library) greater flexibility supporting execution parallel execution may supported. evaluation takes place depends strategy chosen user executing multiverse. strategies include sequential execution current R session, asynchronous parallel execution current machine compute cluster. document, show can execute distinct analyses specified multiverse.","code":""},{"path":"http://mucollective.github.io/multiverse/articles/execution-multiverse.html","id":"data-and-analysis","dir":"Articles","previous_headings":"","what":"Data and analysis","title":"Execution of multiverse analysis: Sequential and Parallel","text":"use hurricane dataset discussed greater detail README well vignette hurricane. already familiar dataset analysis, please feel free skip section, continue next section implement analysis vignette(\"example-hurricane\"). briefly outline steps involved. Outlier exclusion: implement different alternative choices exclude outliers based extreme observations death damages. Identifying independent variables: femininity name hurricane operationalised? Simonsohn et al. identify two distinct ways. First, using 11 point scale used original analysis; second using binary scale. Data transformations: dollar amount damages caused hurricane follows long tailed, positive valued distribution. decision involved whether transform damages. Alternative specifications regression model: next step fit model. can use either log-linear model poisson model step. reasonable alternatives dataset. also make choice whether want include interaction femininity damage. results following specification:","code":"data(hurricane)  hurricane_data <- hurricane %>%   # rename some variables   rename(       year = Year,       name = Name,       dam = NDAM,       death = alldeaths,       female = Gender_MF,       masfem = MasFem,       category = Category,       pressure = Minpressure_Updated_2014,       wind = HighestWindSpeed   ) %>%   # create new variables   mutate(       post = ifelse(year>1979, 1, 0),       zcat = as.numeric(scale(category)),       zpressure = -scale(pressure),       zwind = as.numeric(scale(wind)),       z3 = as.numeric((zpressure + zcat + zwind) / 3)   )  M = multiverse() inside(M, {   df <- hurricane_data %>%     filter(branch(death_outliers,          \"no_exclusion\" ~ TRUE,         \"most_extreme_deaths\" ~ name != \"Katrina\",         \"most_extreme_two_deaths\" ~ ! (name %in% c(\"Katrina\", \"Audrey\"))     )) %>%     filter(branch(damage_outliers,         \"no_exclusion\" ~ TRUE,         \"most_extreme_one_damage\" ~ ! (name %in% c(\"Sandy\")),         \"most_extreme_two_damage\" ~ ! (name %in% c(\"Sandy\", \"Andrew\")),         \"most_extreme_three_damage\" ~ ! (name %in% c(\"Sandy\", \"Andrew\", \"Donna\"))     )) }) inside(M, {   df <- df %>%     mutate(         femininity = branch(femininity_calculation,           \"masfem\" ~ masfem,           \"female\" ~ female         ),         damage = branch(damage_transform,           \"no_transform\" ~ identity(dam),           \"log_transform\" ~ log(dam)         )     ) }) inside(M, {   fit <- glm(branch(model, \"linear\" ~ log(death + 1), \"poisson\" ~ death) ~              branch(main_interaction,                 \"no\" ~ femininity + damage,                 \"yes\" ~ femininity * damage             ) + branch(other_predictors,                 \"none\" ~ NULL,                 \"pressure\" %when% (main_interaction == \"yes\") ~ femininity * zpressure,                 \"wind\" %when% (main_interaction == \"yes\") ~ femininity * zwind,                 \"category\" %when% (main_interaction == \"yes\") ~ femininity * zcat,                 \"all\" %when% (main_interaction == \"yes\") ~ femininity * z3,                 \"all_no_interaction\" %when% (main_interaction == \"no\") ~ z3             ) + branch(covariates, \"1\" ~ NULL, \"2\" ~ year:damage, \"3\" ~ post:damage),              family = branch(model, \"linear\" ~ \"gaussian\", \"poisson\" ~ \"poisson\"),               data = df)      res <- broom::tidy(fit) })"},{"path":[]},{"path":"http://mucollective.github.io/multiverse/articles/execution-multiverse.html","id":"sequential","dir":"Articles","previous_headings":"Execution","what":"Sequential","title":"Execution of multiverse analysis: Sequential and Parallel","text":"simple execution strategy perform computation sequentially, one’s current machine. default strategy, can used simply calling execute_multiverse() current multiverse object. However, studies created multiverse analyses thousands even millions unique specifications (universes). cases, optimisation avoid redundant computation built solution execution insufficient, sequential execution fails make use embarrassingly abundant parallel processing resources.","code":"execute_multiverse(M)"},{"path":"http://mucollective.github.io/multiverse/articles/execution-multiverse.html","id":"parallel-separate-r-sessions","dir":"Articles","previous_headings":"Execution","what":"Parallel: separate R sessions","title":"Execution of multiverse analysis: Sequential and Parallel","text":"process multiverses parallel, make use future library. future allows user declare different strategies resolving futures asynchronously parallel using future::plan(). general approach, work unix non-unix based systems use multisession future, resolves futures asynchronously (parallel) separate R sessions running background machine: Note: vignette uses inside() syntax implement multiverse. However, futures can used multiverse code blocks well, steps involved setup asynchronous futures execution remain .","code":"plan(multisession, workers = availableCores()) execute_multiverse(M, parallel = TRUE) plan(sequential) # explicitly closes multisession workers by switching plan"},{"path":"http://mucollective.github.io/multiverse/articles/execution-multiverse.html","id":"parallel-separate-forked-processes","dir":"Articles","previous_headings":"Execution","what":"Parallel: separate forked processes","title":"Execution of multiverse analysis: Sequential and Parallel","text":"strategy similar mc*apply suite functions parallel library. resolves futures “asynchronously (parallel) separate forked R processes running background machine”. However, functionality supported Windows (non-unix based system). Thus, recommend using multisession instead.","code":""},{"path":"http://mucollective.github.io/multiverse/articles/execution-multiverse.html","id":"parallel-compute-clusters","dir":"Articles","previous_headings":"Execution","what":"Parallel: compute clusters","title":"Execution of multiverse analysis: Sequential and Parallel","text":"Future also supports resolution separate R sessions running compute cluster. “cluster future future uses cluster evaluation, means value computed resolved parallel another process.”","code":""},{"path":"http://mucollective.github.io/multiverse/articles/execution-multiverse.html","id":"what-if-i-want-to-execute-only-a-subset-of-the-specifications","dir":"Articles","previous_headings":"","what":"What if I want to execute only a subset of the specifications?","title":"Execution of multiverse analysis: Sequential and Parallel","text":"debugging purposes otherwise, one might wonder possible execute small subset N universes larger specified multiverse. Although provide specific function supports behavior, behavior can easily achieved using following workflow using lapply() functions. Alternatively, result can obtained using purrr::map() function: want perform operation parallel, use furrr::future_map() follows: detailed description asynchronous resolution futures set clusters, please refer documentation future library.","code":"N = 5 lapply(1:5, function(x) execute_universe(M, x)) purrr::map(1:N, ~ execute_universe(M, .)) plan(multisession, workers = availableCores()) furrr::future_map(1:5, function(x) execute_universe(M, x)) plan(sequential)"},{"path":"http://mucollective.github.io/multiverse/articles/export-milliways.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Exporting the output of a multiverse to JSON for Milliways, a multiverse visualisation tool","text":"correct interpretation multiverse analysis can difficult due potential size complexity correctly interpreting uncertainty. recent work developing Milliways, interactive visualisation interface principled evaluation interpretation results multiverse analysis aims address problem. details, please refer paper.","code":""},{"path":"http://mucollective.github.io/multiverse/articles/export-milliways.html","id":"milliways","dir":"Articles","previous_headings":"","what":"Milliways","title":"Exporting the output of a multiverse to JSON for Milliways, a multiverse visualisation tool","text":"visualise results multiverse analysis using Milliways, user needs provide four files: results: JSON file contains estimates universe multiverse analysis. code: JSON file contains code used generate multiverse object. data: JSON file contains dataset used multiverse analysis. analysis: HTML file contains entire analysis Explorable Multiverse Analysis Report (EMAR). document, outline generate files multiverse analysis Durante dataset (see vignette(\"visualising-multiverse\")). Compiling document , , result creation EMAR, provided: knit_as_emar() function declared, document YAML (top markdown file) set output: html_document actual EMAR document generated file (provided YAML changed) can found . Note #1: Creating EMAR document perfect process unfortunately, relies HTML tags knitr uses convert RMarkdown file HTML file. created knit_as_emar() function assuming users compile using default YAML (output: html_document) generated new RMarkdown file created using RStudio. However, knit_as_emar() function may compatible output formats, one uses html_vignette format. also marked multiverse code chunks using comment distinguish regular R code chunks. However, knitting EMAR, multiverse code chunks appear different background colour regular code chunks making easily distinguishable. Note #2: compiling document EMAR, code chunk execute automatically. need call execute_multiverse() obtain results unless want extract results access R code chunk. Note #3: compiling document EMAR, code chunks execute automatically. way obtain results first execute universes multiverse using execute_multiverse() accessing results using R code chunk. Note #4: use magrittr pipes (%>%) instead native R pipe (|>). multiverse rewrites R expressions, parse code declared individual R scripts, native R pipe “evaluated” (.e. df |> mutate(...) |> filter(...) becomes filter(mutate(df, ...), ...)); makes code readable. Instead use magrittr pipes “evaluate” R expressions.","code":"knit_as_emar()"},{"path":"http://mucollective.github.io/multiverse/articles/export-milliways.html","id":"analysis","dir":"Articles","previous_headings":"","what":"Analysis","title":"Exporting the output of a multiverse to JSON for Milliways, a multiverse visualisation tool","text":"analysis follows steps outlined vignette(\"example-durante\"). first step read raw data file store tibble.","code":"data(\"durante\")  data.raw.study2 <- durante %>%   mutate(     Abortion = abs(7 - Abortion) + 1,     StemCell = abs(7 - StemCell) + 1,     Marijuana = abs(7 - Marijuana) + 1,     RichTax = abs(7 - RichTax) + 1,     StLiving = abs(7 - StLiving) + 1,     Profit = abs(7 - Profit) + 1,     FiscConsComp = FreeMarket + PrivSocialSec + RichTax + StLiving + Profit,     SocConsComp = Marriage + RestrictAbortion + Abortion + StemCell + Marijuana   )  M = multiverse()"},{"path":"http://mucollective.github.io/multiverse/articles/export-milliways.html","id":"cycle-length","dir":"Articles","previous_headings":"Analysis","what":"Cycle Length","title":"Exporting the output of a multiverse to JSON for Milliways, a multiverse visualisation tool","text":"Durante et al. exclude participants based length menstrual cycle, include whose cycle lengths 25 35 days. However, according Steegen et al., due flexibility data collection, “exclusion criterion can instantiated two reasonable ways, using either woman’s computed cycle length woman’s self-reported typical cycle length.” Note #5: can define tangle widget allow user switch operationalisation outlier exclusion criteria used using syntax <mv param=\"cycle_length\"/>. , cycle_length can replaced name parameter. EMAR document, can see interact tangle widget. removed document get rendered properly compiling vignette.","code":"# multiverse code block df <- data.raw.study2 %>%   mutate(ComputedCycleLength = StartDateofLastPeriod - StartDateofPeriodBeforeLast) %>%   filter(branch(     cycle_length,     \"cl_option1\" ~ TRUE,     \"cl_option2\" ~ ComputedCycleLength > 25 & ComputedCycleLength < 35,     \"cl_option3\" ~ ReportedCycleLength > 25 & ReportedCycleLength < 35   ))"},{"path":"http://mucollective.github.io/multiverse/articles/export-milliways.html","id":"certainty","dir":"Articles","previous_headings":"Analysis","what":"Certainty","title":"Exporting the output of a multiverse to JSON for Milliways, a multiverse visualisation tool","text":"Steegen et al. describe certain participants reported dates can another justifiable exclusion criteria:","code":"# multiverse code block df <- df %>%   filter(branch(     certainty,     \"cer_option1\" ~ TRUE,     \"cer_option2\" ~ Sure1 > 6 | Sure2 > 6   ))"},{"path":"http://mucollective.github.io/multiverse/articles/export-milliways.html","id":"menstrual-calculation","dir":"Articles","previous_headings":"Analysis","what":"Menstrual Calculation","title":"Exporting the output of a multiverse to JSON for Milliways, a multiverse visualisation tool","text":"flexibility data collected also allows three reasonable alternatives estimating woman’s next menstrual onset, intermediate step determining cycle day.","code":"# multiverse code block df <- df %>%   mutate(NextMenstrualOnset = branch(     menstrual_calculation,     \"mc_option1\" ~ StartDateofLastPeriod + ComputedCycleLength,     \"mc_option2\" %when% (cycle_length != \"cl_option2\") ~ StartDateofLastPeriod + ReportedCycleLength,     \"mc_option3\" ~ StartDateNext   )) %>%   mutate(     CycleDay = 28 - (NextMenstrualOnset - DateTesting),     CycleDay = ifelse(WorkerID == 15, 11, ifelse(WorkerID == 16, 18, CycleDay)),     CycleDay = ifelse(CycleDay > 1 & CycleDay < 28, CycleDay, ifelse(CycleDay < 1, 1, 28))   )"},{"path":"http://mucollective.github.io/multiverse/articles/export-milliways.html","id":"fertility","dir":"Articles","previous_headings":"Analysis","what":"Fertility","title":"Exporting the output of a multiverse to JSON for Milliways, a multiverse visualisation tool","text":"Durante et al. classify women high low fertility group based cycle day, classification can done various different reasonable ways:","code":"# multiverse code block df <- df %>%   mutate(Fertility = branch(     fertile,     \"fer_option1\" ~ factor(ifelse(CycleDay >= 7 & CycleDay <= 14, \"high\", ifelse(CycleDay >= 17 & CycleDay <= 25, \"low\", NA))),     \"fer_option2\" ~ factor(ifelse(CycleDay >= 6 & CycleDay <= 14, \"high\", ifelse(CycleDay >= 17 & CycleDay <= 27, \"low\", NA))),     \"fer_option3\" ~ factor(ifelse(CycleDay >= 9 & CycleDay <= 17, \"high\", ifelse(CycleDay >= 18 & CycleDay <= 25, \"low\", NA))),     \"fer_option4\" ~ factor(ifelse(CycleDay >= 8 & CycleDay <= 14, \"high\", \"low\")),     \"fer_option5\" ~ factor(ifelse(CycleDay >= 8 & CycleDay <= 17, \"high\", \"low\"))   ))"},{"path":"http://mucollective.github.io/multiverse/articles/export-milliways.html","id":"relationship-status","dir":"Articles","previous_headings":"Analysis","what":"Relationship Status","title":"Exporting the output of a multiverse to JSON for Milliways, a multiverse visualisation tool","text":"participants study described relationship status one following options: (1) dating/romantically involved anyone, (2) dating involved one partner, (3) engaged living partner, (4) married. allows various different ways classifying whether participants relationship :","code":"# multiverse code block df <- df %>%   mutate(RelationshipStatus = branch(     relationship_status,     \"rs_option1\" ~ factor(ifelse(Relationship == 1 | Relationship == 2, \"Single\", \"Relationship\")),     \"rs_option2\" ~ factor(ifelse(Relationship == 1, \"Single\", \"Relationship\")),     \"rs_option3\" ~ factor(ifelse(Relationship == 1, \"Single\", ifelse(Relationship == 3 | Relationship == 4, \"Relationship\", NA)))   )) %>%   mutate(RelComp = round((Rel1 + Rel2 + Rel3) / 3, 2))"},{"path":"http://mucollective.github.io/multiverse/articles/export-milliways.html","id":"regression-model","dir":"Articles","previous_headings":"","what":"Regression Model","title":"Exporting the output of a multiverse to JSON for Milliways, a multiverse visualisation tool","text":"authors perform ANOVA study effect Fertility, Relationship interaction term, composite Religiosity score. fit linear model using call: lm( RelComp ~ Fertility * RelationshipStatus, data = df ) inside multiverse save result variable called fit_RelComp. use broom::tidy extract results linear model tidy data frame.","code":"fit_RelComp <- lm(RelComp ~ Fertility * RelationshipStatus, data = df) summary_RelComp <- fit_RelComp %>%   broom::tidy(conf.int = TRUE)  summary_RelComp ## # A tibble: 4 × 7 ##   term                  estimate std.error statistic  p.value conf.low conf.high ##   <chr>                    <dbl>     <dbl>     <dbl>    <dbl>    <dbl>     <dbl> ## 1 (Intercept)               6.37     0.405     15.8  4.02e-41    5.58      7.17  ## 2 Fertilitylow             -1.16     0.534     -2.18 3.02e- 2   -2.21     -0.112 ## 3 RelationshipStatusSi…    -1.51     0.538     -2.80 5.38e- 3   -2.57     -0.450 ## 4 Fertilitylow:Relatio…     2.05     0.714      2.87 4.46e- 3    0.640     3.45"},{"path":"http://mucollective.github.io/multiverse/articles/export-milliways.html","id":"visualising-the-results","dir":"Articles","previous_headings":"","what":"Visualising the Results","title":"Exporting the output of a multiverse to JSON for Milliways, a multiverse visualisation tool","text":"visualise results showing predicted values model. plot shows predicted Religiosity Score level Fertility (high low) RelationshipStatus (Single Relationship):  Note #6: due issues compiling RMarkdown vignette output format, present results default universe.","code":"p_val <- round(summary(fit_RelComp)$coefficients[4, 4], 3) if (p_val < 0.05) p_val <- paste0(p_val, \"*\")  broom::augment(fit_RelComp, interval = \"confidence\") %>%   group_by(Fertility, RelationshipStatus) %>%   mutate(RelationshipStatus = ifelse(RelationshipStatus == \"Relationship\", \"InRelationship\", \"Single\")) %>%   summarise(.fitted = mean(.fitted), .upper = mean(.upper), .lower = mean(.lower), .groups = \"drop\") %>%   ggplot(aes(x = RelationshipStatus, y = .fitted, fill = Fertility)) +   geom_bar(stat = \"identity\", position = position_dodge2(preserve = \"single\"), width = 0.5) +   geom_linerange(aes(ymin = .lower, ymax = .upper), position = position_dodge(width = 0.5)) +   geom_text(label = paste0(\"Interaction:\", p_val), x = 1.5, y = 7.5, colour = \"#666666\") +   labs(x = \"RelationshipStatus\", y = \"ReligiosityCompositeScore\") +   ylim(c(0, 8.1)) +   theme_minimal()"},{"path":"http://mucollective.github.io/multiverse/articles/export-milliways.html","id":"exporting-the-json-files","dir":"Articles","previous_headings":"","what":"Exporting the JSON files","title":"Exporting the output of a multiverse to JSON for Milliways, a multiverse visualisation tool","text":"current section describes remaining three JSON files can created. haven’t already, first step execute analyses declared multiverse using execute_multiverse(): can use dedicated functions JSON files: - export_results_json export_results_dist_json. - export_code_json","code":"execute_multiverse(M)"},{"path":"http://mucollective.github.io/multiverse/articles/export-milliways.html","id":"exporting-the-results","dir":"Articles","previous_headings":"Exporting the JSON files","what":"Exporting the results","title":"Exporting the output of a multiverse to JSON for Milliways, a multiverse visualisation tool","text":"provide two functions export results: export_results_json export_results_dist_json. export_results_json requires user specify following arguments: term: column name contains names outcome variables. example, case regression, use output broom::tidy() thus argument column contains coefficient names. estimate: column name containing mean / median point estimates outcome. standard error: column name containing standard errors outcome. dist: column name containing distributional objects outcome variable. Optional estimate standard error arguments provided. See details. (optional) filename: specified, function create file specified path; specified, return dataframe shown : resultant JSON file consists list objects (object corresponds one analysis multiverse). Within object, results attribute contains (nother) list objects corresponding outcome variable. e.g., four coefficients (see results regression model), thus results attribute contain four objects. object following attributes: term: name outcome variable estimate: mean / median point estimate .e., 𝔼(μ)\\mathbb{E}(\\mu) parameter μ\\mu. std.error: standard error point estimate .e., var(μ)\\sqrt{\\text{var}(\\mu)} cdf.x: list quantiles cdf.y: list cumulative probability density estimates corresponding quantiles addition, also contains following attributes, currently used Milliways: statistic p.value conf.low conf.high","code":"expand(M) %>%   extract_variables(summary_RelComp) %>%   unnest( cols = c(summary_RelComp) ) %>%   mutate( term = recode( term,                   \"RelationshipStatusSingle\" = \"Single\",                  \"Fertilitylow:RelationshipStatusSingle\" = \"Single:Fertility_low\"   )) %>%   export_results_json(term, estimate, std.error) |>    unnest(results) |>    select(.universe, term, estimate, std.error, cdf.x, cdf.y) ## # A tibble: 960 × 6 ##    .universe term                 estimate std.error cdf.x       cdf.y       ##        <int> <chr>                   <dbl>     <dbl> <list>      <list>      ##  1         1 (Intercept)             6.37      0.405 <dbl [101]> <dbl [101]> ##  2         1 Fertilitylow           -1.16      0.534 <dbl [101]> <dbl [101]> ##  3         1 Single                 -1.51      0.538 <dbl [101]> <dbl [101]> ##  4         1 Single:Fertility_low    2.05      0.714 <dbl [101]> <dbl [101]> ##  5         2 (Intercept)             5.78      0.322 <dbl [101]> <dbl [101]> ##  6         2 Fertilitylow           -0.583     0.428 <dbl [101]> <dbl [101]> ##  7         2 Single                 -0.859     0.583 <dbl [101]> <dbl [101]> ##  8         2 Single:Fertility_low    1.85      0.772 <dbl [101]> <dbl [101]> ##  9         3 (Intercept)             6.37      0.402 <dbl [101]> <dbl [101]> ## 10         3 Fertilitylow           -1.16      0.531 <dbl [101]> <dbl [101]> ## # ℹ 950 more rows"},{"path":"http://mucollective.github.io/multiverse/articles/export-milliways.html","id":"a-note-on-distributional-assumptions","dir":"Articles","previous_headings":"Exporting the JSON files","what":"A Note on Distributional Assumptions","title":"Exporting the output of a multiverse to JSON for Milliways, a multiverse visualisation tool","text":"simplicity, assume outcome variables follow normal distribution. However, may always case. case, recommend specify dist argument export_results_json use export_results_dist_json allows specify distributional objects outcome. demonstrate user can following example multiverse analysis results consists two parameters: μ∼N(0,1)\\mu \\sim \\text{N}(0, 1), normally distributed random variable σ∼exp(1)\\sigma \\sim \\text{exp}(1), random variable follows exponential distribution.","code":"expand_grid(   .universe = seq(1:5),   nesting(     term = c(\"mu\", \"sigma\"),     dist = c(dist_normal(0, 1), dist_exponential(1))   ) ) |>    export_results_dist_json(term, dist) |>    unnest(results) ## # A tibble: 10 × 5 ##    .universe term  ##        <int> <chr> ##  1         1 mu    ##  2         1 sigma ##  3         2 mu    ##  4         2 sigma ##  5         3 mu    ##  6         3 sigma ##  7         4 mu    ##  8         4 sigma ##  9         5 mu    ## 10         5 sigma ## # ℹ 3 more variables: dist <dist>, cdf.x <list>, cdf.y <list>"},{"path":"http://mucollective.github.io/multiverse/articles/export-milliways.html","id":"exporting-the-code","dir":"Articles","previous_headings":"Exporting the JSON files","what":"Exporting the Code","title":"Exporting the output of a multiverse to JSON for Milliways, a multiverse visualisation tool","text":"Exporting code file relatively simple arguments need provided multiverse object file path: JSON file consists two attributes: code parameters. code list strings consisting R multiverse syntax used implement analysis. readability, use styler break declared code. parameters object listing parameter names corresponding options parameters declared analysis.","code":"export_code_json(M, \"code.json\")"},{"path":"http://mucollective.github.io/multiverse/articles/export-milliways.html","id":"exporting-the-dataset","dir":"Articles","previous_headings":"Exporting the JSON files","what":"Exporting the Dataset","title":"Exporting the output of a multiverse to JSON for Milliways, a multiverse visualisation tool","text":"function used export (unmodified) dataset used analysis, simple wrapper around write_json function. JSON file consists list objects, two attributes: field values. field name column corresponding variable dataset. values list values variable dataset.","code":"export_data_json(durante, \"data.json\")"},{"path":"http://mucollective.github.io/multiverse/articles/multiverse-in-rmd.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Using the multiverse in RMarkdown: Introduction to multiverse code chunks","text":"document describe usage multiverse code block. multiverse code block alternative R code block parse code run directly multiverse, reduces need auxiliary functions (inside). addition, default analysis multiverse executed environment multiverse declared, usually global environment. case results default analysis can inspected directly R code block, similar user running single universe analysis. demonstrate two methods equivalent, result multiverse. example, use data compares different modalities physical visualizations. See (frequentist-multiverse-analysis) details. multiverse analysis, first need define multiverse object. step methods. define two separate objects illustrating two different ways adding code multiverse analysis. multiverse analysis vignette, perform log transformation duration variable dataset using inside function well multiverse code block","code":"data(\"userlogs\") M_inside = multiverse() M_block = multiverse()"},{"path":"http://mucollective.github.io/multiverse/articles/multiverse-in-rmd.html","id":"inside-and-multiverse-analysis-in-r-scripts","dir":"Articles","previous_headings":"","what":"Inside() and Multiverse analysis in R scripts","title":"Using the multiverse in RMarkdown: Introduction to multiverse code chunks","text":"idea inside function allow us write code executed within multiverse directly R, thus allowing us make use flexible syntax declaring different possible analysis combinations within multiverse. inside function takes two arguments: name multiverse object expression (code) passed multiverse enclosed within pair curly braces, { expression passed multiverse executed directly, allowing us parse expand expression provided user declared using branch parameters, corresponding analysis combinations.","code":"inside(M_inside, {     data_transform <- branch(data_transform,         \"log-transformed\" ~ log,         \"untransformed\" ~ identity       )          duration <- do.call(data_transform, list(userlogs$duration)) })"},{"path":"http://mucollective.github.io/multiverse/articles/multiverse-in-rmd.html","id":"multiverse-in-rmarkdown","dir":"Articles","previous_headings":"","what":"Multiverse in RMarkdown","title":"Using the multiverse in RMarkdown: Introduction to multiverse code chunks","text":"Although inside function way add code multiverse RScript, RMarkdown notebooks allow us opportunity use different language engines (just limited R). flexibility also provides opportunity write multiverse code directly code block, instead using auxillary functions. language associated code block provided first argument: ```{r} first argument r hence code associated block executed R. convert code block execute multiverse, change first argument multiverse. Thus code block : ```{multiverse} execute code block multiverse, user needs provide two additional arguments: label inside. label unique identifier code block, code block document must different label. However, label argument need explicitly specified (case R code block). Therefore, ```{multiverse, label=default-m-1 ...}, ```{multiverse, default-m-1 ...} ```{multiverse default-m-1 ...} equivalent. inside argument takes multiverse objects, used indicate multiverse object code inside code block associated . Thus declaring multiverse code block : ```{multiverse, default-m-1, inside = M} provide ability declare multiverse code block AddIn RStudio. Users can click AddIns toolbar menu RStudio (see image ). create multiverse code block location cursor document.  Alternately, users can insert multiverse also allow users create keyboard shortcut declare multiverse code block inside RMarkdown document. can done following steps: Tools > AddIns > Browse AddIns… > Keyboard Shortcuts Next, filter input field, type multiverse. see one result “Insert multiverse code chunk” name. Click Shortcut field press Cmd+Ctrl+M (Mac OS) Ctrl+Shift+Alt+M (Windows). Note recommended shortcuts, feel free use whatever prefer. Click “Apply” exit dialog box experiencing issues creating keyboard shortcut code blocks, experiencing situation shortcut needs re-created everytime open new RStudio session, please refer Debugging Keyboard Shortcuts section end document.","code":""},{"path":"http://mucollective.github.io/multiverse/articles/multiverse-in-rmd.html","id":"multiverse-code-block","dir":"Articles","previous_headings":"Multiverse in RMarkdown","what":"Multiverse code block","title":"Using the multiverse in RMarkdown: Introduction to multiverse code chunks","text":"declaration chunk (gets hidden knit document): ```{multiverse default-m-1, inside = M_block} result code block identical result using inside(). first compare whether multiverse table generated properly multiverse objects. can see , methods yield multiverse table. Next, inspect .code column multiverse object. column contains code used generate analysis combination multiverse. differences arise expressions stored. multiverse code block creates named list, whereas inside function creates unnamed list row column. output first multiverse object (M_inside), uses inside function: output second multiverse object (M_block), uses multiverse code block:","code":"data_transform <- branch(   data_transform,   \"log-transformed\" ~ log,   \"untransformed\" ~ identity )  duration <- do.call(data_transform, list(userlogs$duration)) ```{multiverse default-m-1, inside = M_block} data_transform <- branch(data_transform,     \"log-transformed\" ~ log,     \"untransformed\" ~ identity   )  duration <- do.call(data_transform, list(userlogs$duration)) ``` expand(M_inside) ## # A tibble: 2 × 6 ##   .universe data_transform  .parameter_assignment .code        .results .errors ##       <int> <chr>           <list>                <list>       <list>   <list>  ## 1         1 log-transformed <named list [1]>      <named list> <env>    <lgl>   ## 2         2 untransformed   <named list [1]>      <named list> <env>    <lgl> expand(M_block) ## # A tibble: 2 × 6 ##   .universe data_transform  .parameter_assignment .code        .results .errors ##       <int> <chr>           <list>                <list>       <list>   <list>  ## 1         1 log-transformed <named list [1]>      <named list> <env>    <lgl>   ## 2         2 untransformed   <named list [1]>      <named list> <env>    <lgl> ## [[1]] ## [[1]]$`1` ## { ##     data_transform <- log ##     duration <- do.call(data_transform, list(userlogs$duration)) ## } ##  ##  ## [[2]] ## [[2]]$`1` ## { ##     data_transform <- identity ##     duration <- do.call(data_transform, list(userlogs$duration)) ## } ## [[1]] ## [[1]]$`default-m-1` ## { ##     data_transform <- log ##     duration <- do.call(data_transform, list(userlogs$duration)) ## } ##  ##  ## [[2]] ## [[2]]$`default-m-1` ## { ##     data_transform <- identity ##     duration <- do.call(data_transform, list(userlogs$duration)) ## }"},{"path":[]},{"path":"http://mucollective.github.io/multiverse/articles/multiverse-in-rmd.html","id":"in-rstudio-using-rmarkdown","dir":"Articles","previous_headings":"Notes on using multiverse code blocks","what":"In RStudio using RMarkdown","title":"Using the multiverse in RMarkdown: Introduction to multiverse code chunks","text":"interactive use RStudio, multiverse code blocks work similarly R code block. execute default analysis (.e. analysis path obtained combining first option parameter) global environment. output generated formatting output R code blocks .","code":""},{"path":"http://mucollective.github.io/multiverse/articles/multiverse-in-rmd.html","id":"knitting-to-html-using-knitr","dir":"Articles","previous_headings":"Notes on using multiverse code blocks","what":"Knitting to HTML using knitr","title":"Using the multiverse in RMarkdown: Introduction to multiverse code chunks","text":"document knit, currently analysis paths executed document shows analysis path corresponding default analysis. currently developing interactive features allow author implement interactivity rendered HTML document; also allow readers interact analysis investigate robustness implemented analysis .","code":""},{"path":"http://mucollective.github.io/multiverse/articles/multiverse-in-rmd.html","id":"knitting-to-html-using-knitr-1","dir":"Articles","previous_headings":"Notes on using multiverse code blocks","what":"Knitting to HTML using knitr","title":"Using the multiverse in RMarkdown: Introduction to multiverse code chunks","text":"Currently support knitting RMarkdown documents multiverse code blocks PDF documents.","code":""},{"path":[]},{"path":"http://mucollective.github.io/multiverse/articles/multiverse-in-rmd.html","id":"on-os-x-systems","dir":"Articles","previous_headings":"Debugging Keyboard Shortcuts","what":"On OS X Systems","title":"Using the multiverse in RMarkdown: Introduction to multiverse code chunks","text":"One issue encountered past, create keyboard shortcut everytime opened new RStudio session. discussed , RStudio keybindings saves JSON files directory ~/.R/rstudio/keybindings/, directory missing . Check directory exists : 1. Open Terminal 2. Enter: cd ~/.config/rstudio/keybindings returns error cd: file directory, means directory. fix create directory can done following steps: Open Terminal Enter mkdir ~/.config/rstudio/keybindings/ returns “Permission denied” might run command superuser Terminal: sudo mkdir ~/.config/rstudio/keybindings/ request enter login password.","code":""},{"path":"http://mucollective.github.io/multiverse/articles/visualising-multiverse.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Extracting and Visualising the results of a multiverse analysis","text":"document, show can extract results multiverse performing multiverse analysis. also show ways visualise results multiverse analysis. , multiverse analysis consists results hundreds thousands analysis, visualising can difficult. show package can used create visualisations Steegen et al. Increasing Transparency Multiverse Analysis Simonsohn et al. Specification curve: Descriptive inferential statistics reasonable specifications, well using uncertainty visualisation approaches.","code":"library(dplyr) library(tidyr) library(ggplot2) library(purrr) library(broom) library(gganimate) library(cowplot) library(stringr) library(multiverse)"},{"path":"http://mucollective.github.io/multiverse/articles/visualising-multiverse.html","id":"data-and-analysis","dir":"Articles","previous_headings":"","what":"Data and Analysis","title":"Extracting and Visualising the results of a multiverse analysis","text":"using durante dataset. detailed description analysis can found vignette(example-durante). use results analysis create visualisations. Note inside function suited script-style implementation. Keeping consistency interactive programming interface RStudio, also offer user multiverse code block can used instead r code block write code inside multiverse object (see details using multiverse RMarkdown).","code":"data(\"durante\")  data.raw.study2 <- durante %>%   mutate(     Abortion = abs(7 - Abortion) + 1,     StemCell = abs(7 - StemCell) + 1,     Marijuana = abs(7 - Marijuana) + 1,     RichTax = abs(7 - RichTax) + 1,     StLiving = abs(7 - StLiving) + 1,     Profit = abs(7 - Profit) + 1,     FiscConsComp = FreeMarket + PrivSocialSec + RichTax + StLiving + Profit,     SocConsComp = Marriage + RestrictAbortion + Abortion + StemCell + Marijuana   ) M = multiverse()  inside(M, {   df <- data.raw.study2  %>%     mutate( ComputedCycleLength = StartDateofLastPeriod - StartDateofPeriodBeforeLast )  %>%     dplyr::filter( branch(cycle_length,       \"cl_option1\" ~ TRUE,       \"cl_option2\" ~ ComputedCycleLength > 25 & ComputedCycleLength < 35,       \"cl_option3\" ~ ReportedCycleLength > 25 & ReportedCycleLength < 35     )) %>%     dplyr::filter( branch(certainty,       \"cer_option1\" ~ TRUE,       \"cer_option2\" ~ Sure1 > 6 | Sure2 > 6     )) %>%     mutate(NextMenstrualOnset = branch(menstrual_calculation,       \"mc_option1\" %when% (cycle_length != \"cl_option3\") ~ StartDateofLastPeriod + ComputedCycleLength,       \"mc_option2\" %when% (cycle_length != \"cl_option2\") ~ StartDateofLastPeriod + ReportedCycleLength,       \"mc_option3\" ~ StartDateNext)     )  %>%     mutate(       CycleDay = 28 - (NextMenstrualOnset - DateTesting),       CycleDay = ifelse(CycleDay > 1 & CycleDay < 28, CycleDay, ifelse(CycleDay < 1, 1, 28))     ) %>%     mutate( Fertility = branch( fertile,       \"fer_option1\" ~ factor( ifelse(CycleDay >= 7 & CycleDay <= 14, \"high\", ifelse(CycleDay >= 17 & CycleDay <= 25, \"low\", NA)) ),       \"fer_option2\" ~ factor( ifelse(CycleDay >= 6 & CycleDay <= 14, \"high\", ifelse(CycleDay >= 17 & CycleDay <= 27, \"low\", NA)) ),       \"fer_option3\" ~ factor( ifelse(CycleDay >= 9 & CycleDay <= 17, \"high\", ifelse(CycleDay >= 18 & CycleDay <= 25, \"low\", NA)) ),       \"fer_option4\" ~ factor( ifelse(CycleDay >= 8 & CycleDay <= 14, \"high\", \"low\") ),       \"fer_option45\" ~ factor( ifelse(CycleDay >= 8 & CycleDay <= 17, \"high\", \"low\") )     )) %>%     mutate(RelationshipStatus = branch(relationship_status,       \"rs_option1\" ~ factor(ifelse(Relationship==1 | Relationship==2, 'Single', 'Relationship')),       \"rs_option2\" ~ factor(ifelse(Relationship==1, 'Single', 'Relationship')),       \"rs_option3\" ~ factor(ifelse(Relationship==1, 'Single', ifelse(Relationship==3 | Relationship==4, 'Relationship', NA))) )     )      df <- df %>%     mutate( RelComp = round((Rel1 + Rel2 + Rel3)/3, 2)) })"},{"path":"http://mucollective.github.io/multiverse/articles/visualising-multiverse.html","id":"model-2-effect-of-fertility-and-relationship-status-on-religiosity","dir":"Articles","previous_headings":"Data and Analysis","what":"Model #2: Effect of Fertility and Relationship status on Religiosity","title":"Extracting and Visualising the results of a multiverse analysis","text":"Steegen et al. analyse data using 6 models. models except first use dataset. visualisations, focus effect Fertility Relationship status Religiosity. authors perform ANOVA study effect Fertility, Relationship interaction term, composite Religiosity score (RelComp). perform analysis extract results multiverse tidy data frame. analysis, look results using summary function. However, performing multiverse analysis, summary executed universe multiverse, accessible outside universe. However, ways easily extract results universe, long results within universe tidy data.","code":"inside(M, {   fit_RelComp <- lm( RelComp ~ Fertility * RelationshipStatus, data = df )      fit_FiscConsComp <- lm( FiscConsComp ~ Fertility * RelationshipStatus, data = df)      fit_SocConsComp <- lm( SocConsComp ~ Fertility * RelationshipStatus, data = df)    fit_Donate <- glm( Donate ~ Fertility * Relationship, data = df, family = binomial(link = \"logit\") )      fit_Vote <- glm( Vote ~ Fertility * Relationship, data = df, family = binomial(link = \"logit\") ) })"},{"path":[]},{"path":"http://mucollective.github.io/multiverse/articles/visualising-multiverse.html","id":"computing-the-results-in-each-multiverse","dir":"Articles","previous_headings":"The results","what":"Computing the results in each multiverse","title":"Extracting and Visualising the results of a multiverse analysis","text":"broom package allows extracting summary linear models using tidy() function. tidy method summarises information components model including estimates, std. error, t-statistic, p-value coefficient returns tibble (tidy data frame). Additional arguments can passed obtain upper lower 95% confidence limits, change confidence level. Finally, execute generated analysis combinations multiverse, since far defined .","code":"inside(M, {   summary_RelComp <- fit_RelComp %>%      broom::tidy( conf.int = TRUE )      summary_FiscConsComp <- fit_FiscConsComp %>%      broom::tidy( conf.int = TRUE )      summary_SocConsComp <- fit_SocConsComp %>%      broom::tidy( conf.int = TRUE )      summary_Donate <- fit_Donate %>%      broom::tidy( conf.int = TRUE )      summary_Vote <- fit_Vote %>%      broom::tidy( conf.int = TRUE ) }) execute_multiverse(M)"},{"path":"http://mucollective.github.io/multiverse/articles/visualising-multiverse.html","id":"extracting-the-results","dir":"Articles","previous_headings":"The results","what":"Extracting the results","title":"Extracting and Visualising the results of a multiverse analysis","text":"computed summaries (summary_RelComp, summary_FiscConsComp, summary_SocConsComp, summary_Donate summary_Vote) stored within .results column (separate environment) multiverse table. can extract summaries tibble using store separate column, unnest new column: can use various R packages visualise results. , show standard visualisations.","code":"expand(M) %>%   mutate( summary = map(.results, \"summary_RelComp\") ) %>%   unnest( summary ) ## # A tibble: 840 × 17 ##    .universe cycle_length certainty   menstrual_calculation fertile     ##        <int> <chr>        <chr>       <chr>                 <chr>       ##  1         1 cl_option1   cer_option1 mc_option1            fer_option1 ##  2         1 cl_option1   cer_option1 mc_option1            fer_option1 ##  3         1 cl_option1   cer_option1 mc_option1            fer_option1 ##  4         1 cl_option1   cer_option1 mc_option1            fer_option1 ##  5         2 cl_option1   cer_option1 mc_option1            fer_option1 ##  6         2 cl_option1   cer_option1 mc_option1            fer_option1 ##  7         2 cl_option1   cer_option1 mc_option1            fer_option1 ##  8         2 cl_option1   cer_option1 mc_option1            fer_option1 ##  9         3 cl_option1   cer_option1 mc_option1            fer_option1 ## 10         3 cl_option1   cer_option1 mc_option1            fer_option1 ## # ℹ 830 more rows ## # ℹ 12 more variables: relationship_status <chr>, .parameter_assignment <list>, ## #   .code <list>, .results <list>, .errors <list>, term <chr>, estimate <dbl>, ## #   std.error <dbl>, statistic <dbl>, p.value <dbl>, conf.low <dbl>, ## #   conf.high <dbl>"},{"path":[]},{"path":"http://mucollective.github.io/multiverse/articles/visualising-multiverse.html","id":"animating-the-coefficients-of-the-model-from-each-multiverse","dir":"Articles","previous_headings":"Visualisations","what":"Animating the coefficients of the model from each multiverse","title":"Extracting and Visualising the results of a multiverse analysis","text":"One way visualise multiverse animate results universe multiverse. approach, inspired concept Hypothetical Outcome plots described Dragicevic et al. Increasing Transparency Research Papers Explorable Multiverse Analyses. approach allows us quickly see robustness result — particular result consistent across analysis paths idiosyncratic specific analysis path.","code":"p <- expand(M) %>%   mutate( summary_RelComp = map(.results, \"summary_RelComp\") ) %>%   unnest( cols = c(summary_RelComp) ) %>%   mutate( term = recode( term,                   \"RelationshipStatusSingle\" = \"Single\",                  \"Fertilitylow:RelationshipStatusSingle\" = \"Single:Fertility_low\"   ) ) %>%   filter( term != \"(Intercept)\" ) %>%   ggplot() +    geom_vline( xintercept = 0,  colour = '#979797' ) +   geom_point( aes(x = estimate, y = term)) +   geom_errorbarh( aes(xmin = conf.low, xmax = conf.high, y = term), height = 0) +   theme_minimal() +   transition_manual( .universe )  animate(p, nframes = 210, fps = 2)"},{"path":"http://mucollective.github.io/multiverse/articles/visualising-multiverse.html","id":"histogram-of-p-values-of-the-fertility-relationship-status-interaction","dir":"Articles","previous_headings":"Visualisations","what":"Histogram of p-values of the Fertility × Relationship status interaction","title":"Extracting and Visualising the results of a multiverse analysis","text":"Another approach summarise results. Steegen et al. depicts histogram p values Fertility × Relationship status interaction religiosity multiverse 210 data sets Study 2 (summary_RelComp), fiscal social political attitudes multiverse 210 data sets Study 2 (summary_FiscConsComp summary_SocConsComp), voting donation preferences multiverse 210 data sets Study 2 (summary_Donate summary_Vote). dashed line indicates p = 0.05. show re-create visualisation.","code":"expand(M) %>%   mutate(      summary_RelComp = map(.results, \"summary_RelComp\" ),     summary_FiscConsComp = map(.results, \"summary_FiscConsComp\" ),     summary_SocConsComp = map(.results, \"summary_SocConsComp\" ),     summary_Donate = map(.results, \"summary_Donate\" ),     summary_Vote = map(.results, \"summary_Vote\" )   ) %>%   select( summary_RelComp:summary_Vote ) %>%   gather( \"analysis\", \"result\" ) %>%   unnest(result) %>%   filter( term == \"Fertilitylow:RelationshipStatusSingle\" | term == \"Fertilitylow:Relationship\") %>%   ggplot() +   geom_histogram(aes(x = p.value), bins = 100, fill = \"#ffffff\", color = \"#333333\") +   geom_vline( xintercept = 0.05, color = \"red\", linetype = \"dashed\") +   facet_wrap(~ analysis, scales = \"free\", nrow = 3) +   theme_minimal()"},{"path":"http://mucollective.github.io/multiverse/articles/visualising-multiverse.html","id":"specification-curve","dir":"Articles","previous_headings":"Visualisations","what":"Specification curve","title":"Extracting and Visualising the results of a multiverse analysis","text":"Simonsohn et al. propose visualising results multiverse specification curve, consists two panels. top panel shows effect size (value coefficient) universe (specification). bottom panel shows specification parameters results result.","code":"data.spec_curve <- expand(M) %>%   mutate( summary_RelComp = map(.results, \"summary_RelComp\") ) %>%   unnest( cols = c(summary_RelComp) ) %>%   filter( term == \"Fertilitylow:RelationshipStatusSingle\" ) %>%   select( .universe, !! names(parameters(M)), estimate, p.value ) %>%   arrange( estimate ) %>%    mutate( .universe = row_number())  p1 <- data.spec_curve %>%   gather( \"parameter_name\", \"parameter_option\", !! names(parameters(M)) ) %>%   select( .universe, parameter_name, parameter_option) %>%   mutate(     parameter_name = factor(str_replace(parameter_name, \"_\", \"\\n\"))   ) %>%   ggplot() +   geom_point( aes(x = .universe, y = parameter_option, color = parameter_name), size = 0.5 ) +   labs( x = \"universe #\", y = \"option included in the analysis specification\") +    facet_grid(parameter_name ~ ., space=\"free_y\", scales=\"free_y\", switch=\"y\") +   theme(strip.placement = \"outside\",         strip.background = element_rect(fill=NA,colour=NA),         panel.spacing.x=unit(0.15,\"cm\"),          strip.text.y = element_text(angle = 180, face=\"bold\", size=10),          panel.spacing = unit(0.25, \"lines\")       ) +   theme_minimal()  p2 <- data.spec_curve %>%   ggplot() +   geom_point( aes(.universe, estimate, color = (p.value < 0.05)), size = 0.25) +   labs(x = \"\", y = \"coefficient of\\ninteraction term:\\nfertility x relationship\") +   theme_minimal()    cowplot::plot_grid(p2, p1, axis = \"bltr\",  align = \"v\", ncol = 1, rel_heights = c(1, 3))"},{"path":"http://mucollective.github.io/multiverse/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Abhraneel Sarma. Author, maintainer. Matthew Kay. Author. Michael Moon. Contributor. Mark Miller. Contributor. Kyle Hwang. Contributor. Hadley Wickham. Contributor. Alex Kale. Contributor. Nathan Taback. Contributor. Fanny Chevalier. Contributor. Jessica Hullman. Contributor. Pierre Dragicevic. Contributor. Yvonne Jansen. Contributor.","code":""},{"path":"http://mucollective.github.io/multiverse/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Sarma, ., Kale, ., Moon, M., Taback, N., Chevalier, F., Hullman, J., & Kay, M. (2021, April 11). multiverse: Multiplexing Alternative Data Analyses R Notebooks. https://doi.org/10.31219/osf.io/yfbwm Available https://github.com/MUCollective/multiverse.","code":"@Article{,   title = {multiverse: Multiplexing Alternative Data Analyses in R Notebooks (Version 0.6.2.2)},   author = {Abhraneel Sarma and Alex Kale and Michael Moon and Nathan Taback and Fanny Chevalier and Jessica Hullman and Matthew Kay},   year = {2021},   url = {https://github.com/MUCollective/multiverse},   journal = {OSF Preprints}, }"},{"path":"http://mucollective.github.io/multiverse/index.html","id":"multiverse-an-r-package-for-creating-multiverse-analysis","dir":"","previous_headings":"","what":"Multiverse: Create multiverse analysis in R","title":"Multiverse: Create multiverse analysis in R","text":"end--end analysis likely exists points analysis researchers make decision two equally defensible choices (e.g., different ways excluding outliers, different data transformations). multiverse analysis, researchers identify possible decision points analysis, determine alternative analysis steps decision point, implements , report outcomes analyses resulting possible choice combinations. However, declaring several alternative analysis paths can tricky, often requiring custom control flows nested -loops multiple -else statements. goal multiverse allow users create multitude end--end analyses concise easily interpretable manner. multiverse enables providing embedded Domain-Specific Language (DSL) well API interact extract results multiverse analysis, can neatly wrapped within larger analysis R. background multiverse analysis , please refer works Steegen et al., first put forth concept multiverse analysis, Simonsohn et al., put forth similar notion called Specification curve analysis. multiverse documentation predominantly follows tidyverse syntax.","code":""},{"path":"http://mucollective.github.io/multiverse/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Multiverse: Create multiverse analysis in R","text":"can install package CRAN: install latest development version GitHub, can use R commands:","code":"install.packages(\"multiverse\") install.packages(\"devtools\") devtools::install_github(\"mucollective/multiverse\")"},{"path":"http://mucollective.github.io/multiverse/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Multiverse: Create multiverse analysis in R","text":"document, provide details quickly get started package. Please refer following vignettes information : multiverse can used different environments RMarkdown RScripts. See vignette(\"multiverse--rmd\"). alternate analysis paths declared multiverse using branch, multiverse processes user-declared (multiverse DSL) code create multiple end--end executable R analysis code. See vignette(\"branch\"). conditions dependencies can declared multiverse; conditions can used state two steps multiverse incompatible one another. See vignette(\"conditions\"). multiverse results can extracted visualised. . See vignette(\"visualising-multiverse\"). also implement series end--end multiverse implementations using package demonstrate might used (can found package vignettes): Steegen et al.’s original multiverse analysis paper fluctuating female vote: Politics, religion, ovulatory cycle; can also found . Simonsohn et al.’s specification curve analysis paper Female hurricanes deadlier male hurricanes Dragicevic et al.’s mini-paper Adding Inferential Information plots using Resampling Animations (Increasing transparency research papers explorable multiverse analyses ) Dragicevic et al.’s mini-paper Re-evaluating efficiency Physical Visualisations (Increasing transparency research papers explorable multiverse analyses )","code":""},{"path":"http://mucollective.github.io/multiverse/index.html","id":"example-analysis","dir":"","previous_headings":"","what":"Example analysis","title":"Multiverse: Create multiverse analysis in R","text":"document, outline initial approach conducting multiverse analysis R. show package can used perform multiverse analysis outlined Simohnsohn et al. Specification Curve: Descriptive Inferential Statistics Reasonable Specifications reanalysed study titled Female hurricanes deadlier male hurricanes. dive analysis, might helpful establish terminology help describe steps go creating multiverse analysis. adopt “tree analysis” metaphor (see Figure ): “analysis proceeds top bottom, branching represents choice different analysis options”.  terminology: parameter represents node tree one child—point analysis analyst must decide reasonable alternatives option one children. singular analysis (.e. universe) complete path root leaf.","code":""},{"path":"http://mucollective.github.io/multiverse/index.html","id":"background-the-data","dir":"","previous_headings":"Example analysis","what":"Background: The Data","title":"Multiverse: Create multiverse analysis in R","text":"dataset used Jung et al., study Female hurricanes deadlier male hurricanes, contained information 94 hurricanes list published National Oceanic Atmospheric Administration (NOAA). storm, authors compiled information year (year), number deaths (deaths), minimum pressure (pressure), maximum wind speed time landfall (wind), dollar amount property damages (damage) hurricane severity category storm (category). Nine independent coders asked rate names hurricanes two-item 11-point scale (1 = masculine; 11 = feminine), femininity name computed mean two items. first load raw data store tibble. data provided package can loaded using data(\"hurricane) command. data look like :","code":"data(\"hurricane\") hurricane_data <- hurricane |>     # rename some variables     rename(         year = Year,         name = Name,         dam = NDAM,         death = alldeaths,         female = Gender_MF,         masfem = MasFem,         category = Category,         pressure = Minpressure_Updated_2014,         wind = HighestWindSpeed     ) |>     # create new variables     # which are relevant later on     mutate(         post = ifelse(year>1979, 1, 0),         zcat = as.numeric(scale(category)),         zpressure = -scale(pressure),         zwind = as.numeric(scale(wind)),         z3 = as.numeric((zpressure + zcat + zwind) / 3)     ) hurricane_data |>   head() #>   year     name  masfem MinPressure_before pressure female category death wind #> 1 1950     Easy 5.40625                958      960      0        3     2  125 #> 2 1950     King 1.59375                955      955      0        4     4  134 #> 3 1952     Able 2.96875                985      985      0        1     3  125 #> 4 1953  Barbara 8.62500                987      987      1        1     1   75 #> 5 1953 Florence 7.87500                985      985      1        1     0  115 #> 6 1954    Carol 8.53125                960      960      1        3    60  115 #>     dam Elapsed.Yrs Source post       zcat  zpressure       zwind         z3 #> 1  2380          63    MWR    0  0.8281862  0.2017975 -0.02006244  0.3366404 #> 2  7220          63    MWR    0  1.7661320  0.4513891  0.27257241  0.8300312 #> 3   210          61    MWR    0 -1.0477054 -1.0461607 -0.02006244 -0.7046428 #> 4    78          60    MWR    0 -1.0477054 -1.1459973 -1.64581157 -1.2798381 #> 5    21          60    MWR    0 -1.0477054 -1.0461607 -0.34521226 -0.8130261 #> 6 24962          59    MWR    0  0.8281862  0.2017975 -0.34521226  0.2282571"},{"path":"http://mucollective.github.io/multiverse/index.html","id":"a-single-data-set-analysis-one-possible-analysis-among-many","dir":"","previous_headings":"Example analysis","what":"A single data set analysis: one possible analysis among many","title":"Multiverse: Create multiverse analysis in R","text":"original analysis removed two hurricanes highest death toll outliers. test hypothesis hurricanes feminine names result deaths, authors fit negative binomial model using number deaths response variable (due issues implementing negative binomial model R, approximate fitting poisson model instead). predictors, use femininity, damages, standardised value pressure (zpressure), interaction femininity damages, interaction femininity zpressure. following code block contains steps involved implementing original analysis: result indicates small positive effect masfem (femininity name hurricane) deaths, controlled damages. appears support original hypothesis. results single analysis: point estimates 95% confidence intervals coefficients predictors However, original analysis involved least four analysis decisions (-D), decision point (node) alternative choices may led different result. decisions highlighted figure :  Several subsequent studies, proposing different analysis strategy, found presence effect, suggesting original finding may result idiosyncratic combination analysis choices. Data analysis can often involve several decisions involving two options. statistical analysis, decisions taken researcher based reasonable justification. However, several decisions, can one reasonable option choose . multiverse analysis makes decisions explicit conducts complete analysis combinations options (decision). , use analysis example single analysis can extended multiverse analysis.","code":"df.filtered = hurricane_data |>    filter(name != \"Katrina\" & name != \"Audrey\") |>   mutate(zpressure = -scale(pressure))  fit = glm(   death ~ masfem * dam + masfem * zpressure,   data = df.filtered,   family = \"poisson\" ) tidy(fit) |>   filter(term != \"(Intercept)\") |>   ggplot() +   geom_vline(xintercept = 0, color = \"red\") +   geom_pointinterval(aes(x = estimate, y = term, xmin = estimate + qnorm(0.025)*std.error, xmax = estimate + qnorm(0.975)*std.error)) +   theme_minimal()"},{"path":"http://mucollective.github.io/multiverse/index.html","id":"multiverse-specification","dir":"","previous_headings":"","what":"Multiverse specification","title":"Multiverse: Create multiverse analysis in R","text":"multiverse provides flexible functions can used easily multiplex alternative analysis steps, perform multiverse analysis. describe features multiverse sketch analyst might progressively create multiverse bottom , describe modify traditional, single-universe analysis previous figure multiverse analysis. first step load library define new multiverse, variable M. use multiverse object create set universes, representing different way analysing data.","code":"#load the library library(multiverse)  #create multiverse object M = multiverse()"},{"path":"http://mucollective.github.io/multiverse/index.html","id":"two-ways-to-building-a-multiverse","dir":"","previous_headings":"Multiverse specification","what":"Two ways to building a multiverse","title":"Multiverse: Create multiverse analysis in R","text":"multiverse DSL, users specifying multiple analysis paths time. DSL executed directly R environment R code chunk needs declared, processed executed special environment. precise, multiverse takes user declared code, parses rewrites code multiple versions valid R code, corresponding unique analysis path multiverse. information processing step, see vignette(\"branch\") get around limitations, need declare (multiverse DSL) code “inside multiverse object”. multiverse package facilitates boilerplate code: multiverse code chunks: allows users declare multiverse code dedicated code chunk, consistent interactive programming interface RStudio. inside() function: allows users declare multiverse code RScripts (within regular R code blocks). Note inside function suited script-style implementation. using interactive programming interface RStudio, user use multiverse code chunks.","code":""},{"path":"http://mucollective.github.io/multiverse/index.html","id":"multiverse-code-blocks","dir":"","previous_headings":"Multiverse specification > Two ways to building a multiverse","what":"Multiverse code blocks","title":"Multiverse: Create multiverse analysis in R","text":"RMarkdown supports languages R languages dedicated code blocks. extend providing multiverse code blocks can used instead regular r code block write code inside multiverse object (see  details using multiverse code blocks RMarkdown). multiverse code block custom engine designed work multiverse package, implement multiverse analyses. allows write concise code consistent interactive programming interface RStudio. show code can implemented using multiverse code block: (Note: using RScript R console, please skip next section executing code throw error) code within filter function call written multiverse DSL executed directly R. now, ignore branch function discuss detail next section. code written executed inside multiverse code block, allows multiverse library process compile three different analyses. provide ability declare multiverse code block AddIn RStudio. Users can click AddIns toolbar menu RStudio (see image ). create multiverse code block location cursor document.  Alternately, users can insert multiverse code block using keyboard shortcut. Users can create keyboard shortcut declare multiverse code block inside RMarkdown document following steps: Tools > Addins > Browse Addins… > Keyboard Shortcuts Next, filter input field, type multiverse. see one result “Insert multiverse code chunk” name. Click Shortcut field press Cmd+Ctrl+M (Mac OS) Ctrl+Shift+Alt+M (Windows). Note recommended shortcuts, feel free use whatever prefer. Click “Apply” exit dialog box Please refer  details using multiverse code blocks RMarkdown. vignette also contains information steps debugging common problems assigning keyboard shortcuts.","code":"```{multiverse default-m-1, inside = M} # here we just create the variable `df` in the multiverse df = hurricane_data  # here, we perform a `filter` operation in the multiverse df.filtered = df |>   filter(branch(death_outliers,       \"no_exclusion\" ~ TRUE,       \"most_extreme\" ~ name != \"Katrina\",       \"two_most_extreme\" ~ !(name %in% c(\"Katrina\", \"Audrey\")) )) ```"},{"path":"http://mucollective.github.io/multiverse/index.html","id":"inside","dir":"","previous_headings":"Multiverse specification > Two ways to building a multiverse","what":"inside()","title":"Multiverse: Create multiverse analysis in R","text":"Alternatively, working RScripts (regular r code block), users can make use inside() function write code inside multiverse object. inside() takes two arguments: multiverse object, M; code analysis (including branches). Note passing multiple expressions, enclosed within {}. Note inside() primarily designed script style programming. user working RScript, previous code can declared “inside multiverse object” using inside() function follows: rest vignette, use multiverse code blocks specify multiverse. Please refer vignette (vignette(\"multiverse--rmd\")) details declaring multiverse analyses RMarkdown RScripts","code":"# here we just create the variable `df` in the multiverse inside(M, { df = hurricane_data })  # here, we perform two `mutate` operations in the multiverse. # although they could have been chained, this illustrates  # how multiple variables can be declared together using the `{}` inside(M, {   df.filtered = df |>     filter(branch(death_outliers,         \"no_exclusion\" ~ TRUE,         \"most_extreme\" ~ name != \"Katrina\",         \"two_most_extreme\" ~ !(name %in% c(\"Katrina\", \"Audrey\"))   )) })"},{"path":"http://mucollective.github.io/multiverse/index.html","id":"declaring-alternative-analysis","dir":"","previous_headings":"Multiverse specification","what":"Declaring alternative analysis","title":"Multiverse: Create multiverse analysis in R","text":"’ve specified appropriate boilerplate necessary use multiverse DSL, next step define possible alternate analysis paths. multiverse package includes functions aim make easy declare multiple alternate choices analysis decision point. enabling analysts declare code using syntax close single universe analysis possible. Consider first lines transformation code single analysis : , researchers faced decision hurricanes exclude outliers. decide exclude two hurricanes caused deaths. However, decision arbitrary. include hurricanes? exclude one deaths? Thus three possible ways removing outliers based extreme number deaths: exclusion Remove one extreme hurricane Remove two extreme hurricanes create multiverse includes three possible analysis options, use branch() function. branch() function accepts three arguments. first argument defines parameter (death outliers). subsequent arguments, refer options, define different choices researcher can make decision node analysis; follow syntax <option_name> ~ <option_definition>. <option_name> part intended allow naming branches meaningful names help user keep track declared options (multiverse specification , “no_exclusion”, “most_extreme”, “two_most_extreme” used option names). However, names can omitted; omitted, entire syntax performing operation treated name particular option. Putting together, decision point multiverse analysis can thus declared : multiverse library takes user-declared syntax multiverse DSL compiles three separate, executable R expressions shown figure :  details branch() function can found corresponding vignette(\"branch\").","code":"df.filtered = hurricane_data |>    filter(name != \"Katrina\" & name != \"Audrey\") # here we just create the variable `df` in the multiverse df <- hurricane_data  # here, we perform a `filter` operation in the multiverse df.filtered <- df |>   filter(branch(     death_outliers,     \"no_exclusion\" ~ TRUE,     \"most_extreme\" ~ name != \"Katrina\",     \"two_most_extreme\" ~ !(name %in% c(\"Katrina\", \"Audrey\"))   )) ```{multiverse branch_definition, inside = M} # here we just create the variable `df` in the multiverse df = hurricane_data  # here, we perform a `filter` operation in the multiverse df.filtered = df |>   filter(branch(death_outliers,       \"no_exclusion\" ~ TRUE,       \"most_extreme\" ~ name != \"Katrina\",       \"two_most_extreme\" ~ !(name %in% c(\"Katrina\", \"Audrey\")) )) ```"},{"path":"http://mucollective.github.io/multiverse/index.html","id":"interfacing-with-the-multiverse","dir":"","previous_headings":"","what":"Interfacing with the multiverse","title":"Multiverse: Create multiverse analysis in R","text":"add code multiverse, automatically processes code identify parameters corresponding options defined parameter. code added, multiverse object following attributes: parameters, list parameters conditions, list conditions (’ll define later) expand returns table row corresponds single analysis path (.e., single universe). view provides user information choices resulted analysis path, along entire unevaluated code expression corresponding analysis. Analysts can use table explore multiverse specifications tools available R RStudio exploring data tables. code, code user passes multiverse conduct multiverse analysis. However, execute code stored unevaluated. user can interactively edit rewrite code, can execute current analysis entire multiverse using dedicated functions. extract_variables(M, <variable names>) extracts supplied variable results analysis path, returning table similar output expand(M), new columns variable extracted. allow analyst , example, extract summary statistics even entire data tables universes simultaneously. columns can easily turned long format data tables using tidyverse packages visualized using ggplot2 package","code":"parameters(M) #> $death_outliers #> $death_outliers[[1]] #> [1] \"no_exclusion\" #>  #> $death_outliers[[2]] #> [1] \"most_extreme\" #>  #> $death_outliers[[3]] #> [1] \"two_most_extreme\" expand(M) #> # A tibble: 3 × 6 #>   .universe death_outliers   .parameter_assignment .code        .results .errors #>       <int> <chr>            <list>                <list>       <list>   <list>  #> 1         1 no_exclusion     <named list [1]>      <named list> <env>    <lgl>   #> 2         2 most_extreme     <named list [1]>      <named list> <env>    <lgl>   #> 3         3 two_most_extreme <named list [1]>      <named list> <env>    <lgl> code(M) #> [[1]] #> df <- hurricane_data #>  #> [[2]] #> df.filtered <- filter( #>   df, #>   branch( #>     death_outliers, #>     \"no_exclusion\" ~ TRUE, #>     \"most_extreme\" ~ name != \"Katrina\", #>     \"two_most_extreme\" ~ !(name %in% c(\"Katrina\", \"Audrey\")) #>   ) #> ) extract_variables(M, df.filtered) #> # A tibble: 3 × 7 #>   .universe death_outliers   .parameter_assignment .code        .results .errors #>       <int> <chr>            <list>                <list>       <list>   <list>  #> 1         1 no_exclusion     <named list [1]>      <named list> <env>    <lgl>   #> 2         2 most_extreme     <named list [1]>      <named list> <env>    <lgl>   #> 3         3 two_most_extreme <named list [1]>      <named list> <env>    <lgl>   #> # ℹ 1 more variable: df.filtered <named list>"},{"path":"http://mucollective.github.io/multiverse/index.html","id":"building-up-a-complete-analysis","dir":"","previous_headings":"","what":"Building up a complete analysis","title":"Multiverse: Create multiverse analysis in R","text":"Subsequent branch calls progressively expand multiverse, enumerating possible combinations. now expand multiverse include possible decision points analysis reasonable alternatives chosen. instance, researchers : used binary indicator whether hurricane’s name female, instead 11-point rating feminine name hurricane log transformed damage variable, positive value long right-tail result 3 × 2 × 2 = 12 analysis paths. next step multiverse analysis estimate effect femininity deaths using linear regression. multiple decisions involved step. take opportunity introduce certain scenarios analyst may encounter attempting create multiverse, may difficult discover supported library.","code":"df.filtered <- df.filtered |>   mutate(     femininity = branch(       femininity_calculation,       \"masfem\" ~ masfem,       \"female\" ~ female     ),     damage = branch(       damage_transform,       \"no_transform\" ~ identity(dam),       \"log_transform\" ~ log(dam)     )   ) ```{multiverse label = variable_definitions, inside = M}     df.filtered <- df.filtered |>         mutate(             femininity = branch(femininity_calculation,               \"masfem\" ~ masfem,               \"female\" ~ female             ),             damage = branch(damage_transform,               \"no_transform\" ~ identity(dam),               \"log_transform\" ~ log(dam)             )         ) ```"},{"path":"http://mucollective.github.io/multiverse/index.html","id":"reusing-analysis-parameters-in-branch","dir":"","previous_headings":"Building up a complete analysis","what":"Reusing analysis parameters in branch()","title":"Multiverse: Create multiverse analysis in R","text":"One way implementing regression analysis may poisson model number deaths caused hurricane response variable. Recall specified : Although reasonable choice count data, one can also argue log-linear regression model instead, count data deaths tend approximately log-normally distributed. Specifying multiverse analysis may require changes two different locations code: specification deaths dependent variable value family argument. However, two separate decisions, rather consequence analysis parameter: choice model. Often, single analysis parameter require analyst change code one location. represent semantics, multiverse allows us re-use analysis parameter multiple branch() statements, long branch() uses exact set analysis options. branch previously defined parameter, option names must , code option can different. Thus, represent consequences choice model single analysis parameter: model. insert two branch() statements using parameter, one set variable transformation one set family.","code":"fit = glm(death ~ masfem * dam + masfem * zpressure, data = df.filtered, family = \"poisson\") ```{multiverse label = variable_definitions, inside = M} fit <- glm(branch(model,         \"linear\" ~ log(death+1),         \"poisson\" ~ death     ) ~ femininity * damage + femininity * zpressure,     family = branch(model,          \"linear\" ~ gaussian,          \"poisson\" ~ poisson     ), data = df.filtered) ```"},{"path":"http://mucollective.github.io/multiverse/index.html","id":"specifying-conditions-in-the-multiverse-analysis","dir":"","previous_headings":"Building up a complete analysis","what":"Specifying conditions in the multiverse analysis","title":"Multiverse: Create multiverse analysis in R","text":"Another decision made step choice predictors, includes interaction femininity damage, femininity zpressure. , predictors damage zpressure used measures storm severity, interaction femininity damage indicating whether main effect stronger “destructive” “severe” storms. Yet , reasonable approaches study primary effect may include interaction term include interactions femininity variables pressure, wind category conjunction interaction femininity damage. multiverse analysis, may arise dependencies two analysis parameters make certain analysis paths inconsistent, even impossible. words, applicability analysis options may conditional previous, upstream decision. default, multiverse assumes combinations options valid. However, provides flexible way specify analysis option incompatible previously-specified analysis options. dependencies can specified using %% operator followed boolean expression, right option name. , interaction term femininity zpressure make sense presence interaction involving damage, use %% expression definition other_predictors analysis parameter. results following multiverse specification (now, let’s ignore previous decision choice models): details can done, well details conditions, please refer vignette(\"conditions\").","code":"```{multiverse label = variable_definitions, inside = M} fit <- glm(death ~            branch(main_interaction,               \"no\" ~ femininity + damage,               \"yes\" ~ femininity * damage           ) + branch(other_predictors,               \"none\" ~ NULL,               \"pressure\" %when% (main_interaction == \"yes\") ~ femininity * zpressure,               \"wind\" %when% (main_interaction == \"yes\") ~ femininity * zwind,               \"category\" %when% (main_interaction == \"yes\") ~ femininity * zcat,               \"all\" %when% (main_interaction == \"yes\") ~ femininity * z3,               \"all_no_interaction\" %when% (main_interaction == \"no\") ~ z3           ), family = \"poisson\", data = df) ```"},{"path":"http://mucollective.github.io/multiverse/index.html","id":"executing-multiverse-code","dir":"","previous_headings":"","what":"Executing multiverse code","title":"Multiverse: Create multiverse analysis in R","text":"code chunks typical computational notebook, users can execute multiverse code chunk interactive editor RStudio. user executes single code chunk, multiverse internally transforms input code chunk one unevaluated expression (R’s internal representation abstract syntax tree) unique combination analysis options immediately executes default analysis: analysis path obtained taking first analysis option decision point. default analysis executed current active R environment (.e. environment regular R code blocks executed — R Global Environment). Thus, result default analysis always accessible user. output executed code chunk (text visualisation) displayed immediately , mimicking notebook code chunks interactive use (.e. running code chunks individually RMarkdown), following code chunk illustrates behavior. Even though variable fit defined multiverse code block, since default analysis executed active R environment, version corresponding default analysis can accessed directly R: Note: behavior permitted notebook knit—rendered HTML (format) using knitr. control code executed knitting, want avoid providing user surprising result. Instead, error. code running perfectly fine script file markdown notebook, throwing error knitting message similar ! object 'fit' found, likely trying access objects declared within multiverse code block using R code block. Please see debugging information . Instead, want output results default (particular) analysis knitting, instead use: Analysts can change analysis path executed default. Inline code output single analysis path (ability select path) meant support familiar trial error workflow data analysts aid debugging.","code":"```{multiverse label = default-m-3, inside = M} fit = glm(branch(model, \"linear\" ~ log(death + 1), \"poisson\" ~ death) ~            branch(main_interaction,               \"no\" ~ femininity + damage,               \"yes\" ~ femininity * damage           ) + branch(other_predictors,               \"none\" ~ NULL,               \"pressure\" %when% (main_interaction == \"yes\") ~ femininity * zpressure,               \"wind\" %when% (main_interaction == \"yes\") ~ femininity * zwind,               \"category\" %when% (main_interaction == \"yes\") ~ femininity * zcat,               \"all\" %when% (main_interaction == \"yes\") ~ femininity * z3,               \"all_no_interaction\" %when% (main_interaction == \"no\") ~ z3           ) + branch(covariates, \"1\" ~ NULL, \"2\" ~ year:damage, \"3\" ~ post:damage),            family = branch(model, \"linear\" ~ \"gaussian\", \"poisson\" ~ \"poisson\"),             data = df) ``` fit <- glm(   branch(model, \"linear\" ~ log(death + 1), \"poisson\" ~ death) ~     branch(       main_interaction,       \"no\" ~ femininity + damage,       \"yes\" ~ femininity * damage     ) + branch(       other_predictors,       \"none\" ~ NULL,       \"pressure\" %when% (main_interaction == \"yes\") ~ femininity * zpressure,       \"wind\" %when% (main_interaction == \"yes\") ~ femininity * zwind,       \"category\" %when% (main_interaction == \"yes\") ~ femininity * zcat,       \"all\" %when% (main_interaction == \"yes\") ~ femininity * z3,       \"all_no_interaction\" %when% (main_interaction == \"no\") ~ z3     ) + branch(covariates, \"1\" ~ NULL, \"2\" ~ year:damage, \"3\" ~ post:damage),   family = branch(model, \"linear\" ~ \"gaussian\", \"poisson\" ~ \"poisson\"),   data = df.filtered ) broom::tidy(fit) extract_variable_from_universe(M, 1, fit) |>    broom::tidy() #> # A tibble: 6 × 5 #>   term               estimate   std.error statistic   p.value #>   <chr>                 <dbl>       <dbl>     <dbl>     <dbl> #> 1 (Intercept)      2.09       0.0908          23.0  2.03e-117 #> 2 masfem           0.0454     0.0123           3.70 2.18e-  4 #> 3 dam              0.0000195  0.00000338       5.77 8.10e-  9 #> 4 zpressure        0.137      0.101            1.35 1.76e-  1 #> 5 masfem:dam       0.00000110 0.000000421      2.61 8.94e-  3 #> 6 masfem:zpressure 0.0253     0.0125           2.02 4.33e-  2"},{"path":"http://mucollective.github.io/multiverse/index.html","id":"executing-the-entire-multiverse","dir":"","previous_headings":"","what":"Executing the entire multiverse","title":"Multiverse: Create multiverse analysis in R","text":"execute unique analysis paths multiverse, analyst can call execute_multiverse(M). support local parallelisation optional cores argument indicating number cpu cores use. multiverse object can also easily adapted use existing parallel computing packages R, future, run analyses across computing clusters.","code":""},{"path":"http://mucollective.github.io/multiverse/index.html","id":"debugging-and-diagnosing-errors","dir":"","previous_headings":"","what":"Debugging and Diagnosing Errors","title":"Multiverse: Create multiverse analysis in R","text":"default analysis, executes R environment, users access set debugging utilities R provides. user executes entire multiverse, library outputs error message, traceback—object containing entire call stack caused error—index corresponding analysis path error encountered. execution remaining analysis paths multiverse halted errors encountered. traceback helpful identify location error, often R expressions return unidentifiable error messages. execute_universe(<universe ID>) (universe ID found table output expand(), see ) allows analysts execute particular analysis path reproduce errors encountered execution specific path.","code":""},{"path":"http://mucollective.github.io/multiverse/index.html","id":"conclusion","dir":"","previous_headings":"","what":"Conclusion","title":"Multiverse: Create multiverse analysis in R","text":"document, covered details help quickly get started package. Please refer following vignettes information : multiverse can used different environments RMarkdown RScripts. See vignette(\"multiverse--rmd\"). alternate analysis paths declared multiverse using branch, multiverse processes user-declared (multiverse DSL) code create multiple end--end executable R analysis code. See vignette(\"branch\"). conditions dependencies can declared multiverse; conditions can used state two steps multiverse incompatible one another. See vignette(\"conditions\"). multiverse results can extracted visualised. . See vignette(\"visualising-multiverse\"). also implement series end--end multiverse implementations using package demonstrate might used: Simonsohn et al.’s specification curve analysis paper Female hurricanes deadlier male hurricanes Dragicevic et al.’s mini-paper Adding Inferential Information plots using Resampling Animations (Increasing transparency research papers explorable multiverse analyses ) Dragicevic et al.’s mini-paper Re-evaluating efficiency Physical Visualisations (Increasing transparency research papers explorable multiverse analyses )","code":""},{"path":"http://mucollective.github.io/multiverse/reference/accessors.html","id":null,"dir":"Reference","previous_headings":"","what":"Accessing contents of the multiverse object — accessors","title":"Accessing contents of the multiverse object — accessors","text":"multiverse object contains several Object variables. can accessed using convenient functions. Variables analysis performed within multiverse can accessed using $. Object variables code, expanded parameter options table, parameters conditions can accessed using respective functions","code":""},{"path":"http://mucollective.github.io/multiverse/reference/accessors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accessing contents of the multiverse object — accessors","text":"","code":"# S3 method for class 'multiverse' multiverse$name  # S3 method for class 'multiverse' multiverse$name <- value  expand(multiverse)  # Default S3 method expand(multiverse)  # S3 method for class 'multiverse' expand(multiverse)  size(multiverse)  # Default S3 method size(multiverse)  # S3 method for class 'multiverse' size(multiverse)  code(multiverse, .pretty = TRUE)  # Default S3 method code(multiverse, .pretty = TRUE)  # S3 method for class 'multiverse' code(multiverse, .pretty = TRUE)  parameters(multiverse)  # Default S3 method parameters(multiverse)  # S3 method for class 'multiverse' parameters(multiverse)  conditions(multiverse)  # Default S3 method conditions(multiverse)  # S3 method for class 'multiverse' conditions(multiverse)  extract_variable_from_universe(multiverse, idx, name)"},{"path":"http://mucollective.github.io/multiverse/reference/accessors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accessing contents of the multiverse object — accessors","text":"multiverse Object class multiverse name variable name value new value assigned .pretty binary argument whether code() prettify output using tidyverse style guide. defaults TRUE. idx index universe multiverse (corresponds row table)","code":""},{"path":"http://mucollective.github.io/multiverse/reference/branch.html","id":null,"dir":"Reference","previous_headings":"","what":"Define multiple analysis paths for a step in the multiverse — branch","title":"Define multiple analysis paths for a step in the multiverse — branch","text":"branch function allows user define multiple analysis options particular step analysis.","code":""},{"path":"http://mucollective.github.io/multiverse/reference/branch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define multiple analysis paths for a step in the multiverse — branch","text":"parameter string identify branch. branch characterised using parameter takes different options. ... Different options completing particular step analysis. option declared <option_name> ~ <option_calculation>. See examples details. .options Declare continuous value option parameter using sequence (see examples details), expanded sequence included options parameter multiverse.","code":""},{"path":"http://mucollective.github.io/multiverse/reference/branch.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Define multiple analysis paths for a step in the multiverse — branch","text":"every step analysis, may one analysis option. use branch declare different analysis options. branch characterised parameter. first argument passed branch parameter. arguments passed branch different analysis options corresponding parameter (particular step analysis process). Naturally, least two options declared. Thus, branch function provide warning total number arguments passed less three. Please refer vignette(\"branch\") details use function create complete multiverse analysis.","code":""},{"path":"http://mucollective.github.io/multiverse/reference/branch.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Define multiple analysis paths for a step in the multiverse — branch","text":"","code":"# \\donttest{ library(dplyr) #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union  # Example 1: declaring multiple options for a data processing step  set.seed(123) x = rnorm(100, 30, 10)  # Say that you have a variable, x. You want to discretise this variable into two ordinal  # categories — high (if x >= 30) and low (if x < 30). However, another researcher might argue  # for discretising this variable into three ordinal categories — high (if x >= 40),  # medium (if 20 <= x < 40), and low (if x < 20).  M.1 = multiverse() # create a new multiverse object  inside(M.1, { y = branch(discretisation,          \"two_levels\" ~ ifelse(x < 30, \"low\", \"high\"),         \"three_levels\" ~ ifelse(x < 20, \"low\", ifelse(x > 40, \"high\", \"medium\"))     ) })   # Example 2: using branch with tidyverse and `%>%` # Let’s say that we have some data which indicates the amount of time spent by a user # in four different conditions which are indexed 1, 2, 3 and 4 # (the modality column in the following dataset).  # We will first load the data and convert the column into factor from integer.  data(\"userlogs\") data.userlogs.raw = userlogs %>%     mutate( modality = factor(modality) ) %>%     arrange( modality )      M.2 = multiverse() # create a new multiverse object  inside(M.2, {     df = data.userlogs.raw %>%         select(modality, duration) %>%         mutate( duration = branch( data_transform,                              \"none\" ~ duration,                             \"log\" ~ log(duration))) })                                # Example 3: using branch with tidyverse and `%>%` # Consider a scenario where there are more than one alternatives to # identifying and removing outliers  data(\"hurricane\")  M.3 = multiverse()  # here, we perform a `filter` operation in the multiverse inside(M.3, {     df.filtered = hurricane %>%         filter(branch(death_outliers,                    \"no_exclusion\" ~ TRUE,                    \"most_extreme\" ~ name != \"Katrina\",                    \"two_most_extreme\" ~ !(name %in% c(\"Katrina\", \"Audrey\"))     )) })   # Example 4: using branch as a function # An alternate way of implementing the `branch()` function from Example 2 may be:  M.4 = multiverse()  inside(M.4, {     duration_transform = branch(data_trans,         \"log-transformed\" ~ log,         \"un-transformed\" ~ identity     )      duration = duration_transform(data.userlogs.raw$duration) })    # Example 5: continuous option values for a parameter  M.5 = multiverse() inside(M.5, {   branch(foo, \"option1\" ~ 1, .options = 1:10) })  M.6 = multiverse() # alternatively, we could specify how we want the vector to be expanded # for continuous parameters inside(M.6, {   branch(foo, \"option1\" ~ 1, .options = seq(0, 1, by = 0.1)) }) #> Warning: Universes {1 and 12} appear to be duplicates. This may be because the tree you created is asymmetric (did you use nested branch calls?). Please verify and prune universes before proceeding with your analysis. See vignette('branch') for more details.  # }"},{"path":"http://mucollective.github.io/multiverse/reference/conditionals.html","id":null,"dir":"Reference","previous_headings":"","what":"Define constraints for combinations of analysis paths in the multiverse — %when%","title":"Define constraints for combinations of analysis paths in the multiverse — %when%","text":"Users can specify conditions particular analysis path may may valid using either %% operator branch_assert function.","code":""},{"path":"http://mucollective.github.io/multiverse/reference/conditionals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define constraints for combinations of analysis paths in the multiverse — %when%","text":"Logical predicates defined terms parameters options multiverse.","code":""},{"path":"http://mucollective.github.io/multiverse/reference/conditionals.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Define constraints for combinations of analysis paths in the multiverse — %when%","text":"user can specify multiple different analysis options step analysis process using branch(). However, possible values certain parameters might conditional values certain parameters. conditional \"implies\" relationship two statements, meaning, \"true, B also true.\" evaluate relationship using classical logic: \\(\\Longrightarrow B\\) abbreviation \\(\\neg \\lor B\\)","code":""},{"path":[]},{"path":"http://mucollective.github.io/multiverse/reference/conditionals.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Define constraints for combinations of analysis paths in the multiverse — %when%","text":"","code":"# \\donttest{ M.1 <- multiverse()  # There are different ways to specifying conditions # One way is to use the %when% operator # the %when% operator can be specified after the option name inside(M.1, {     df <- data.frame (x = 1:10 ) %>%         mutate( y = branch( values_y, TRUE, FALSE )) %>%         mutate( z = branch(values_z,             \"constant\" ~ 5,             \"linear\" ~ x + 1,             \"sum\" %when% (values_y == TRUE) ~ (x + y)         )) })  # or it can be specified after the expression for computing the option value inside(M.1, {     df <- data.frame (x = 1:10 ) %>%         mutate( y = branch( values_y, TRUE, FALSE )) %>%         mutate( z = branch(values_z,             \"constant\" ~ 5,             \"linear\" ~ x + 1,             \"sum\" ~ (x + y) %when% (values_y == TRUE)         )) })  # an advantage of the '%when' operator is that it can also be used when the # option names are not specified for branches. # when option names are not specified for branches, option names are assigned to # the branches. For character, logical or numeric expressions, option names are of the # same type (i.e. character, logical or numeric expressions respectively) # For expressions of type symbol or call, options names are characters strings # containing the expression. # see the next two examples: M.2 <- multiverse()  inside(M.2, {  df <- data.frame (x = 1:10 ) %>%    mutate( y = branch( values_y, TRUE, FALSE )) %>%    mutate( z = branch(values_z,           5,           x + 1,           (x + y) %when% (values_y == TRUE)    )) })  M.3 <- multiverse() inside(M.3, {  df <- data.frame (x = 1:10 ) %>%    filter( branch( values_x,        TRUE,        x > 2 | x < 6    )) %>%    mutate( z = branch(values_z,           5,           x + 1,           (x^2) %when% (values_x == 'x > 2 | x < 6')    )) })  # or it can be specified after the expression for computing the option value M.4 <- multiverse() inside(M.4, {     df <- data.frame (x = 1:10 ) %>%         mutate( y = branch( values_y, TRUE, FALSE )) %>%         mutate( z = branch(values_z,             \"constant\" ~ 5,             \"linear\" ~ x + 1,             \"sum\" ~ x + y         )) %>%         branch_assert( values_z != \"sum\" | values_y == TRUE ) }) # }"},{"path":"http://mucollective.github.io/multiverse/reference/durante.html","id":null,"dir":"Reference","previous_headings":"","what":"Survey to study the effect of fertility on religiosity and political attitudes — durante","title":"Survey to study the effect of fertility on religiosity and political attitudes — durante","text":"dataset containing responses survey conducted Durante, Rae, Griskevicius (2013) study, doi:10.1177/0956797612466416 fluctuating female vote: Politics, religion, ovulatory cycle. Durante et al. study effect fertility religiosity political attitudes. Steegen, Tuerlinckx, Gelman, Vanpaemel (2016) used dataset analysis illustrate multiverse analysis can highlight robustness conclusions reached original author.","code":""},{"path":"http://mucollective.github.io/multiverse/reference/durante.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Survey to study the effect of fertility on religiosity and political attitudes — durante","text":"data frame 502 rows 26 variables: Abortion \"Abortion women’s sic right.\" DateTesting Date participant filling questionnaire. Donate \"next part study donate $1 presidential campaign preferred candidate. Please indicate candidate’s campaign like us donate $1 .” Mitt Romney — Barack Obama\" FreeMarket \"nearly every instance, free market allocates resources efficiently.\" Marijuana \"Marijuana legal.\" Marriage \"Marriage man woman.\" PrivSocialSec \"Privatize Social Security.\" 1 – 7 Profit \"Business corporations make much profit.\" Rel1 \"much believe God?\" Rel2 \"see religiously oriented person.\" Rel3 \"believe God Higher Power responsible existence\" Relationship current romantic relationship status?” (1) dating/romantically involved anyone, (2) dating involved one partner, (3) engaged living partner, (4) married, (5) . participants picked response (5), prompted provide description relationship, subsequently coded one four options original authors. data already coded another response option. ReportedCycleLength many days long menstrual cycles? (women, range 25-35 days) Keep mind number days start one menstrual period start next menstrual period length menstrual bleeding. RestrictAbortion \"Laws restrict abortion cases.\" RichTax \"rich pay higher tax rate middle class.\" StLiving \"Government ensure citizens meet certain minimum standard living\" StartDateNext Indicates expected start date next menstrual period (research material contain question variable. However, data file Study 2 contained variable.) StartDateofLastPeriod Please give best estimate date started last period (please precise possible). date probably within last weeks. Sometimes thinking started last period helps. instance, weekend?, work, football game?, etc. Please write date mm/dd/yyyy format (e.g., 8/18/2012). StartDateofPeriodBeforeLast Please give best estimate date started period last period (please precise possible). Please write date mm/dd/yyyy format (e.g., 7/18/2012).” StemCell \"Stem cell research moral can useful science.\" Sure1 \"sure date (StartDateofLastPeriod)?\" Sure2 sure date (StartDateofPeriodBeforeLast)? Vote \"Imagine walking voting booth today. vote presidential election?” Mitt Romney (republican) – Barack Obama (democrat)\" WorkerID ID participant","code":""},{"path":"http://mucollective.github.io/multiverse/reference/durante.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Survey to study the effect of fertility on religiosity and political attitudes — durante","text":"questions preceded prompt — \"Please indicate much agree following statements\" following items responses  religiosity items (scale 1 - 9): Rel1, Rel2, Rel3 following items responses fiscal political attitudes items (scale 1 - 7): RichTax, TooMuchProfit, StandardLiving, FreeMarket, PrivSocialSec following items responses social political attitudes items (scale 1 - 7): Abortion, Marriage, StemCell, Marijuana, RestrictAbortion addition, values StartDateofLastPeriod, StartDateofPeriodBeforeLast StartDateNext missing WorkerID 15 16. impacts calculation CycleDay variable dataset. Steegen et al. \"reconstructed variable analysis fixing coding errors\". ensure results identical Durante et al.'s, used processed variable Cycle Day original data file (11 18 WorkerIDs 15 16, respectively).","code":""},{"path":"http://mucollective.github.io/multiverse/reference/durante.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Survey to study the effect of fertility on religiosity and political attitudes — durante","text":"Kristina M Durante, Ashley Rae Vladas Griskevicius. (2013). \"fluctuating female vote: Politics, religion, ovulatory cycle.\" Psychological Science 24(6), 1007-1016. Sara Steegen Francis Tuerlinckx Andrew Gelman Wolf Vanpaemel. (2015). \"Increasing transparency multiverse analysis.\" Perspectives Psychological Science 11(5), 702-712.","code":""},{"path":"http://mucollective.github.io/multiverse/reference/execute.html","id":null,"dir":"Reference","previous_headings":"","what":"Execute parts of, or the entire multiverse — execute","title":"Execute parts of, or the entire multiverse — execute","text":"functions allow user execute parts whole multiverse. user can choose either execute default analysis using execute_universe(), whole multiverse using execute_multiverse().","code":""},{"path":"http://mucollective.github.io/multiverse/reference/execute.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Execute parts of, or the entire multiverse — execute","text":"","code":"execute_multiverse(multiverse, parallel = FALSE, progress = FALSE)  execute_universe(multiverse, .universe = 1, parallel = FALSE, progress = FALSE)"},{"path":"http://mucollective.github.io/multiverse/reference/execute.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Execute parts of, or the entire multiverse — execute","text":"multiverse multiverse object parallel Indicates whether execute multiverse analysis parallel. TRUE, multiverse makes use future::future backend support parallel processing. Requires configuration future::plan. Defaults FALSE. progress Indicates whether include progress bar step execution. Defaults FALSE. .universe Indicate universe execute, user wants execute specific combination parameters using execute_universe(). Defaults NULL, execute first (default) analysis.","code":""},{"path":"http://mucollective.github.io/multiverse/reference/execute.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Execute parts of, or the entire multiverse — execute","text":"single analysis within multiverse lives separate environment. provide convenient functions access results  default analysis, well parts whole multiverse. analysis can also accessed multiverse table, results column.","code":""},{"path":"http://mucollective.github.io/multiverse/reference/execute.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Execute parts of, or the entire multiverse — execute","text":"","code":"# \\donttest{ library(dplyr)  M <- multiverse()  inside(M, {   data <- rnorm(100, 50, 20)    x.mean <- mean(data, trim = branch(     trim_values,     \"trim_none\" ~ 0,     \"trim_1pc\" ~ 0.05,     \"trim_5pc\" ~ 0.025,     \"trim_10pc\" ~ 0.05   )) }) #> Warning: Universes {2 and 4} appear to be duplicates. This may be because the tree you created is asymmetric (did you use nested branch calls?). Please verify and prune universes before proceeding with your analysis. See vignette('branch') for more details.  # Computes the analysis for all # universes in the multiverse` M %>%   execute_multiverse() # }"},{"path":"http://mucollective.github.io/multiverse/reference/export_json.html","id":null,"dir":"Reference","previous_headings":"","what":"Exporting results from a multiverse analysis to JSON — export_json","title":"Exporting results from a multiverse analysis to JSON — export_json","text":"Exports results multiverse analysis JSON format compatible multiverse visualisation tool","code":""},{"path":"http://mucollective.github.io/multiverse/reference/export_json.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Exporting results from a multiverse analysis to JSON — export_json","text":"","code":"export_results_json(x, term, mean, sd, dist, filename)  export_results_dist_json(x, term, dist, filename)  export_code_json(x, filename)  export_data_json(x, filename)"},{"path":"http://mucollective.github.io/multiverse/reference/export_json.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Exporting results from a multiverse analysis to JSON — export_json","text":"x tidy tibble data frame contains summary statistics distributional information regression coefficient parameter term column data frame, x, contains name coefficients mean column data frame, x, contains mean estimate coefficient sd column data frame, x, contains standard error estimate coefficient dist column data frame, x, contains vectorised distributions—object class distribution coefficient filename filename disk (character string)","code":""},{"path":"http://mucollective.github.io/multiverse/reference/export_json.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Exporting results from a multiverse analysis to JSON — export_json","text":"JSON file (filepath specified) dataframe results file list code file","code":""},{"path":[]},{"path":"http://mucollective.github.io/multiverse/reference/export_json.html","id":"results-json-file-schema","dir":"Reference","previous_headings":"","what":"results JSON file schema","title":"Exporting results from a multiverse analysis to JSON — export_json","text":"consists list objects (object corresponds one analysis multiverse). Within object, results attribute contains (nother) list objects corresponding outcome variable. e.g., four coefficients (see results regression model), thus results attribute contain four objects. object following attributes: term: name outcome variable estimate: mean / median point estimate .e., \\(\\mathbb{E}(\\mu)\\) parameter \\(\\mu\\). std.error: standard error point estimate .e., \\(\\sqrt{\\text{var}(\\mu)}\\) cdf.x: list quantiles cdf.y: list cumulative probability density estimates corresponding quantiles addition, also contains following attributes, currently used Milliways: statistic p.value conf.low conf.high","code":""},{"path":"http://mucollective.github.io/multiverse/reference/export_json.html","id":"code-json-file-schema","dir":"Reference","previous_headings":"","what":"code JSON file schema","title":"Exporting results from a multiverse analysis to JSON — export_json","text":"consists two attributes: code parameters. code list strings consisting R multiverse syntax used implement analysis. readability, use styler break declared code. parameters object listing parameter names corresponding options parameters declared analysis.","code":""},{"path":"http://mucollective.github.io/multiverse/reference/export_json.html","id":"data-json-file-schema","dir":"Reference","previous_headings":"","what":"data JSON file schema","title":"Exporting results from a multiverse analysis to JSON — export_json","text":"consists list objects, two attributes: field values. field name column corresponding variable dataset. values list values variable dataset.","code":""},{"path":"http://mucollective.github.io/multiverse/reference/export_json.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Exporting results from a multiverse analysis to JSON — export_json","text":"","code":"# \\donttest{ library(dplyr) library(tidyr) #>  #> Attaching package: ‘tidyr’ #> The following object is masked from ‘package:multiverse’: #>  #>     expand  M = multiverse()  inside(M, {   df = tibble(     x = rnorm(100),     y = x * 0.5 + rnorm(100, 0, 2)  )    # alternatives to remove outlier  df.filtered = df %>%    filter(      branch(outlier_exclusion,         \"2SD\" ~ abs(y - mean(y)) > 2*sd(y),         \"3SD\" ~ abs(y - mean(y)) > 3*sd(y)      )  )      fit = lm(y ~ x, data = df)   res = broom::tidy(fit) })  execute_multiverse(M)  multiverse::expand(M) %>%   extract_variables(res) %>%   unnest(res) %>%   export_results_json(term, estimate, std.error)  #> # A tibble: 2 × 3 #>   .universe outlier_exclusion results            #>       <int> <chr>             <list>             #> 1         1 2SD               <gropd_df [2 × 8]> #> 2         2 3SD               <gropd_df [2 × 8]> # }"},{"path":"http://mucollective.github.io/multiverse/reference/extract_variables.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract variables and objects from the multiverse — extract_variables","title":"Extract variables and objects from the multiverse — extract_variables","text":"wrapper function extracting one variables objects declared within multiverse tidy format.","code":""},{"path":"http://mucollective.github.io/multiverse/reference/extract_variables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract variables and objects from the multiverse — extract_variables","text":"","code":"extract_variables(x, ..., .results = .results)  # S3 method for class 'multiverse' extract_variables(x, ..., .results = .results)  # S3 method for class 'data.frame' extract_variables(x, ..., .results = .results)"},{"path":"http://mucollective.github.io/multiverse/reference/extract_variables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract variables and objects from the multiverse — extract_variables","text":"x either multiverse object dataframe (created using expand()) multiverse object. See usage. ... one variable (object) names extracted multiverse object. names can quoted unquoted. .results (Optional) .results column stores environments unique analysis changed, specify new name column. Defaults .results","code":""},{"path":"http://mucollective.github.io/multiverse/reference/extract_variables.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract variables and objects from the multiverse — extract_variables","text":"typical analysis, user declare variables objects inside multiverse object. However, might difficult access variables objects, hence provide convenient wrappers form extract_variables(). user wants extract one literals (strings, integers, doubles logicals length 1) variables separated column. user wants extract one vectors (lists) variable extracted list column. user wants extract one dataframe column type data frame (tibble) created (special instance list column).","code":""},{"path":"http://mucollective.github.io/multiverse/reference/extract_variables.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract variables and objects from the multiverse — extract_variables","text":"","code":"# \\donttest{ library(dplyr)  M <- multiverse()  inside(M, {   data <- rnorm(100, 50, 20)    x.mean <- mean(data, trim = branch(     trim_values,     \"trim_none\" ~ 0,     \"trim_1pc\" ~ 0.05,     \"trim_5pc\" ~ 0.025,     \"trim_10pc\" ~ 0.05   ))    y <- sd(data) }) #> Warning: Universes {2 and 4} appear to be duplicates. This may be because the tree you created is asymmetric (did you use nested branch calls?). Please verify and prune universes before proceeding with your analysis. See vignette('branch') for more details.  # Extracts the relevant variable from the multiverse M %>%   extract_variables(x.mean) #> Warning: Universes {2 and 4} appear to be duplicates. This may be because the tree you created is asymmetric (did you use nested branch calls?). Please verify and prune universes before proceeding with your analysis. See vignette('branch') for more details. #> # A tibble: 4 × 7 #>   .universe trim_values .parameter_assignment .code            .results .errors #>       <int> <chr>       <list>                <list>           <list>   <list>  #> 1         1 trim_none   <named list [1]>      <named list [1]> <env>    <lgl>   #> 2         2 trim_1pc    <named list [1]>      <named list [1]> <env>    <lgl>   #> 3         3 trim_5pc    <named list [1]>      <named list [1]> <env>    <lgl>   #> 4         4 trim_10pc   <named list [1]>      <named list [1]> <env>    <lgl>   #> # ℹ 1 more variable: x.mean <dbl>  # if you want to filter the multiverse before extracting variables from it # you can first create the table and manipulate it before extracting variables expand(M) %>%   extract_variables(x.mean) #> Error in UseMethod(\"expand\"): no applicable method for 'expand' applied to an object of class \"multiverse\"  # you can extract more than one variable from the multiverse simultaneously # these variables will be new columns in the dataset expand(M) %>%   extract_variables(x.mean, y) #> Error in UseMethod(\"expand\"): no applicable method for 'expand' applied to an object of class \"multiverse\" # }"},{"path":"http://mucollective.github.io/multiverse/reference/get_code.html","id":null,"dir":"Reference","previous_headings":"","what":"Code corresponding to a single analysis — get_code","title":"Code corresponding to a single analysis — get_code","text":"Given particular set options parameter, extracts code performing single analysis code used declare multiverse. function called automatically exported.","code":""},{"path":"http://mucollective.github.io/multiverse/reference/get_code.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Code corresponding to a single analysis — get_code","text":"","code":"get_code(.code, .assgn = NULL)"},{"path":"http://mucollective.github.io/multiverse/reference/get_code.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Code corresponding to a single analysis — get_code","text":".code Code passed multiverse. stripped calls branch_assert(). .assgn list containing assignments defined parameter multiverse","code":""},{"path":"http://mucollective.github.io/multiverse/reference/get_code.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Code corresponding to a single analysis — get_code","text":"particular parameter assignment (.e. one set options defined parameter multiverse takes), function rewrites code passed multiverse output corresponding code set parameter values — analysis single universe. primarily going called functions, perhaps going useful user anything inspecting rewritten code.","code":""},{"path":"http://mucollective.github.io/multiverse/reference/hurricane.html","id":null,"dir":"Reference","previous_headings":"","what":"Survey to study the effect of fertility on religiosity and political attitudes — hurricane","title":"Survey to study the effect of fertility on religiosity and political attitudes — hurricane","text":"dataset study conducted Jung et al. (2014) study, doi:10.1073/pnas.1402786111 Female hurricanes deadlier male hurricanes.","code":""},{"path":"http://mucollective.github.io/multiverse/reference/hurricane.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Survey to study the effect of fertility on religiosity and political attitudes — hurricane","text":"data frame 502 rows 26 variables: Year Year hurricane occurred Name Name given hurricane MasFem score Masculine Feminine hurricane , scale 1 - 11  1 masculine 11 feminine. hurricane rated 9 independent coders MinPressure_before minimum pressure hurricanes time landfall United States obtained NOAA (www.aoml.noaa.gov/hrd/hurdat/All_U.S._Hurricanes.html) Minpressure_Updated_2014 minimum pressure hurricanes time landfall United States obtained NOAA (www.aoml.noaa.gov/hrd/hurdat/All_U.S._Hurricanes.html) Gender_MF \"Marriage man woman.\" Category Category labels scale 1 - 5, 5 severe extreme alldeaths Total number deaths caused hurricane. Information death tolls hurricanes obtained primarily monthly weather reports digital archive National Oceanic Atmospheric Administration (www.aoml.noaa.gov/hrd/hurdat/mwr_pdf/) HighestWindSpeed maximum wind speed hurricanes time landfall United States obtained NOAA (www.aoml.noaa.gov/hrd/hurdat/All_U.S._Hurricanes.html). data available storms 1979 NDAM normalized damage (million $) Source Source data gathered Elapsed.Yrs Time since hurricane","code":""},{"path":"http://mucollective.github.io/multiverse/reference/hurricane.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Survey to study the effect of fertility on religiosity and political attitudes — hurricane","text":"dataset collated Jung et. al study Female hurricanes deadlier male hurricanes hypothesised hurricanes feminine names might perceived less dangerous hence lead people taking fewer precautionary measures, resulting death damages.","code":""},{"path":"http://mucollective.github.io/multiverse/reference/hurricane.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Survey to study the effect of fertility on religiosity and political attitudes — hurricane","text":"Kiju Jung Sharon Shavitta Madhu Viswanathana Joseph M. Hilbed. (2014). \"Female hurricanes deadlier male hurricanes.\" Proceedings National Academy Sciences, 111(24), 8782-8787. Yang Liu Alex Kale Tim Althoff Jeff Heer. (2020). Boba: Authoring Visualizing Multiverse Analyzes. arXiv preprint arXiv: 2007.05551 .","code":""},{"path":"http://mucollective.github.io/multiverse/reference/inside.html","id":null,"dir":"Reference","previous_headings":"","what":"Pass code into the multiverse — inside","title":"Pass code into the multiverse — inside","text":"Add code multiverse using function using function call, assignment operator, wrapper around function","code":""},{"path":"http://mucollective.github.io/multiverse/reference/inside.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pass code into the multiverse — inside","text":"","code":"inside(multiverse, .expr, .label = NULL, .execute_default = TRUE)"},{"path":"http://mucollective.github.io/multiverse/reference/inside.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pass code into the multiverse — inside","text":"multiverse multiverse object. multiverse object S3 object can defined using multiverse() .expr R syntax. operations user wants perform within multiverse can passed. Since accepts single argument, chunks code can passed using \\{\\}. See example details. .label extracted automatically code block type multiverse run RMarkdown document. used within RMarkdown document. Defaults NULL. .execute_default default multiverse executed part call?","code":""},{"path":"http://mucollective.github.io/multiverse/reference/inside.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pass code into the multiverse — inside","text":"multiverse object","code":""},{"path":"http://mucollective.github.io/multiverse/reference/inside.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Pass code into the multiverse — inside","text":"inside function can access variables can accessed environment multiverse object declared . perform multiverse analysis, need write code executed within multiverse. inside() functions allows us . Use inside() pass code specified multiverse, captured expression. define multiple analysis options code passed multiverse, use branch() function.","code":""},{"path":[]},{"path":"http://mucollective.github.io/multiverse/reference/inside.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pass code into the multiverse — inside","text":"","code":"# \\donttest{ M.1 <- multiverse()  # using `inside` to declare multiverse code inside(M.1, {   data <- rnorm(100, 50, 20)    x.mean <- mean(data, trim = branch(     trim_values,     \"trim_none\" ~ 0,     \"trim_1pc\" ~ 0.05,     \"trim_5pc\" ~ 0.025,     \"trim_10pc\" ~ 0.05   )) }) #> Warning: Universes {2 and 4} appear to be duplicates. This may be because the tree you created is asymmetric (did you use nested branch calls?). Please verify and prune universes before proceeding with your analysis. See vignette('branch') for more details.  # declaring multiple options for a data processing step (calculating a new variable) data(durante) df <- durante  inside(M.1, {   df <- df  %>%     mutate( ComputedCycleLength = StartDateofLastPeriod - StartDateofPeriodBeforeLast ) %>%     mutate( NextMenstrualOnset = branch(menstrual_calculation,                                    \"mc_option1\" ~ StartDateofLastPeriod + ComputedCycleLength,                                    \"mc_option2\" ~ StartDateofLastPeriod + ReportedCycleLength,                                    \"mc_option3\" ~ StartDateNext   )) }) #> Warning: Universes {2 and 7 and 8 and 9 and 11 and 14 and 19 and 20 and 21 and 23}, {4 and 7 and 9 and 10 and 11 and 16 and 19 and 21 and 22 and 23}, {6 and 7 and 9 and 11 and 12 and 18 and 19 and 21 and 23 and 24} appear to be duplicates. This may be because the tree you created is asymmetric (did you use nested branch calls?). Please verify and prune universes before proceeding with your analysis. See vignette('branch') for more details.  # }"},{"path":"http://mucollective.github.io/multiverse/reference/knit_as_emar.html","id":null,"dir":"Reference","previous_headings":"","what":"Compile a RMarkdown into an Explorable Multiverse Analysis Report — knit_as_emar","title":"Compile a RMarkdown into an Explorable Multiverse Analysis Report — knit_as_emar","text":"Include function setup code chunk compile RMarkdown Explorable Multiverse Analysis Report","code":""},{"path":"http://mucollective.github.io/multiverse/reference/knit_as_emar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compile a RMarkdown into an Explorable Multiverse Analysis Report — knit_as_emar","text":"","code":"knit_as_emar()"},{"path":"http://mucollective.github.io/multiverse/reference/knit_as_emar.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compile a RMarkdown into an Explorable Multiverse Analysis Report — knit_as_emar","text":"Explorable Multiverse Analysis Reports interactive documents allow user interactively explor look distinct end--end analysis path within multiverse analysis. idea put forth Dragicevic et al. (2019) doi:10.1145/3290605.3300295 Increasing Transparency  Research Papers Explorable Multiverse Analyses. Tangle.js used provide interactivity allow toggle different specifications.","code":""},{"path":"http://mucollective.github.io/multiverse/reference/mulitiverse_code_block.html","id":null,"dir":"Reference","previous_headings":"","what":"Create custom code blocks for multiverse analysis — mulitiverse_code_block","title":"Create custom code blocks for multiverse analysis — mulitiverse_code_block","text":"easier way interact multiverse object using custom code block","code":""},{"path":"http://mucollective.github.io/multiverse/reference/mulitiverse_code_block.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create custom code blocks for multiverse analysis — mulitiverse_code_block","text":"custom code block allows users interface directly created multiverse object. allows users implement analysis RMarkdown without using auxiliary functions inside(). However, inside() still required define execute multiverse analyses RScript using package. See vignette(\"multiverse--rmd\") details. RStudio, can create shortcut using RStudio AddIns (recommend Cmd + Opt + M Mac Ctrl + Alt + M Windows). add shortcut, go Tools > AddIns > Browse AddIns... > Keyboard shortcuts. Search insert multiverse code chunk add keyboard shortcut function. set , keyboard shortcut create code block RMarkdown document.","code":""},{"path":"http://mucollective.github.io/multiverse/reference/mulitiverse_code_block.html","id":"code-block-options","dir":"Reference","previous_headings":"","what":"Code Block Options","title":"Create custom code blocks for multiverse analysis — mulitiverse_code_block","text":"multiverse code blocks require two named arguments: label: unique identifier code block. label used two different code blocks, code associated previous block multiverse overwritten subsequent one. code block created using keyboard shortcut, auto-generate (unique) label inside: multiverse object code block associated . Defaults \"M\"","code":""},{"path":"http://mucollective.github.io/multiverse/reference/multiverse-package.html","id":null,"dir":"Reference","previous_headings":"","what":"'Explorable Multiverse' Data Analysis and Reports in R — multiverse-package","title":"'Explorable Multiverse' Data Analysis and Reports in R — multiverse-package","text":"Implement 'multiverse' style analyses (Steegen S., Tuerlinckx F, Gelman ., Vanpaemal, W., 2016) doi:10.1177/1745691616658637  show robustness statistical inference. 'Multiverse analysis' philosophy statistical reporting paper authors report outcomes many different statistical analyses order show fragile robust findings . 'multiverse' package (Sarma ., Kale ., Moon M., Taback N., Chevalier F., Hullman J., Kay M., 2021) doi:10.31219/osf.io/yfbwm  allows users concisely flexibly implement 'multiverse-style' analysis, involve declaring alternate ways performing analysis step, R R Notebooks. Users can also create 'Explorable Multiverse Analysis Reports' (EMARs) (Dragicevic P., Jansen Y., Sarma ., Kay M., Chevalier F., 2019) doi:10.1145/3290605.3300295 , new approach statistical reporting readers research papers can explore alternative analysis options interacting paper . multiverse R package aims make easy declare 'multiverse-style' analysis R R notebooks. 'multiverse' package allows users concisely flexibly declare alternate ways performing analysis step order show fragile robust findings .","code":""},{"path":"http://mucollective.github.io/multiverse/reference/multiverse-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"'Explorable Multiverse' Data Analysis and Reports in R — multiverse-package","text":"'Multiverse style' analyses (Steegen 2016) intended highlight robustness analysis arbitrary decisions present data analysis. Considering possible combinations reasonable decisions can made step analysis, 'multiverse style' analysis can surface whether outcome artifact particular idiosyncratic combination analysis choices, robust arbitrary choices. However, current tools support declaring 'multiverse' analysis easily, requiring users declare custom control flows multiple nested '-else' blocks. multiverse package aims simplify process composing 'multiverse' analysis using flexible concise syntax. get started multiverse package please refer vignette(\"branch\")`, vignette(\"conditions\") vignette(\"multiverse--rmd\"). example implementations analysis using multiverse package, see case studies vignette(\"durante-multiverse-analysis\") vignette(\"hurricane\").","code":""},{"path":"http://mucollective.github.io/multiverse/reference/multiverse-package.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"'Explorable Multiverse' Data Analysis and Reports in R — multiverse-package","text":"Steegen, Sara, Francis Tuerlinckx, Andrew Gelman, Wolf Vanpaemel. (2016). Increasing transparency multiverse analysis. Perspectives Psychological Science, 11(5), 702-712. doi:10.1177/1745691616658637 .","code":""},{"path":[]},{"path":"http://mucollective.github.io/multiverse/reference/multiverse-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"'Explorable Multiverse' Data Analysis and Reports in R — multiverse-package","text":"Maintainer: Abhraneel Sarma abhraneel@u.northwestern.edu Authors: Matthew Kay mjskay@northwestern.edu contributors: Michael Moon moon@utstat.toronto.edu [contributor] Mark Miller 725mrm@gmail.com [contributor] Kyle Hwang kyle.sg.hwang@gmail.com [contributor] Hadley Wickham hadley@posit.co [contributor] Alex Kale kalea@uw.edu [contributor] Nathan Taback nathan.taback@utoronto.ca [contributor] Fanny Chevalier fanny@dgp.toronto.edu [contributor] Jessica Hullman jessica.hullman@gmail.com [contributor] Pierre Dragicevic pierre.dragicevic@inria.fr [contributor] Yvonne Jansen yvonne.jansen@sorbonne-universite.fr [contributor]","code":""},{"path":"http://mucollective.github.io/multiverse/reference/multiverse.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a new multiverse object — multiverse","title":"Create a new multiverse object — multiverse","text":"Constructs new multiverse object enables conducting multiverse analysis","code":""},{"path":"http://mucollective.github.io/multiverse/reference/multiverse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a new multiverse object — multiverse","text":"","code":"multiverse()  is_multiverse(x)  is.multiverse(x)"},{"path":"http://mucollective.github.io/multiverse/reference/multiverse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a new multiverse object — multiverse","text":"x object","code":""},{"path":"http://mucollective.github.io/multiverse/reference/multiverse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a new multiverse object — multiverse","text":"empty multiverse object TRUE object inherits multiverse class. TRUE object inherits multiverse class.","code":""},{"path":"http://mucollective.github.io/multiverse/reference/multiverse.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a new multiverse object — multiverse","text":"perform multiverse analysis, user needs first constructs new multiverse object. user can declare multiple analysis pathways within multiverse object, execute analyses. multiverse object contains following slots: code: slot stores user's code conducting multiverse analysis. user can define multiple analysis pathways step analysis using branch call. supports tidyverse syntax. parameters: slot contains named list lists. contains parameter defined code using branch() function, options defined parameter (list). conditions: slot contain list conditions: parameter values conditional specific value another parameter, can defined code using branch_assert() branch_exclude(). current_parameter_assignment: slot list contains single option assigned parameter defined code. multiverse_table: slot contains table (implementation, tibble rectangular data structure) column table unique parameter. table contains every possible combination options parameter — number rows corresponds number different analysis paths. table also contains, row, list option assignments parameter (parameter_assignment column), code executing particular analysis (type expression), environments code executed.","code":""},{"path":"http://mucollective.github.io/multiverse/reference/multiverse.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a new multiverse object — multiverse","text":"","code":"M <- multiverse()"},{"path":"http://mucollective.github.io/multiverse/reference/parse_multiverse.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse the multiverse syntax to identify branches — parse_multiverse","title":"Parse the multiverse syntax to identify branches — parse_multiverse","text":"multiverse, user can define different values parameter can take using branch() call. parse_multiverse() identifies branch() calls defined analysis syntax parses list parameters corresponding values parameter can take. function called automatically exported.","code":""},{"path":"http://mucollective.github.io/multiverse/reference/parse_multiverse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse the multiverse syntax to identify branches — parse_multiverse","text":"","code":"parse_multiverse(.multiverse, .expr, .code, .label)"},{"path":"http://mucollective.github.io/multiverse/reference/parse_multiverse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse the multiverse syntax to identify branches — parse_multiverse","text":".multiverse multiverse object contain analysis .expr expression parsed .code code passed multiverse .label label code block inside call used pass code parsed multiverse","code":""},{"path":"http://mucollective.github.io/multiverse/reference/parse_multiverse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse the multiverse syntax to identify branches — parse_multiverse","text":"parse_multiverse() returns list lists. list parameters list conditions. list parameters named list defines values defined parameter can take. list conditions defines, parameter values conditional specific value another parameter, condition.","code":""},{"path":"http://mucollective.github.io/multiverse/reference/print.html","id":null,"dir":"Reference","previous_headings":"","what":"Accessing contents of the multiverse object — print","title":"Accessing contents of the multiverse object — print","text":"prints objects class multiverse. Provides quick overview multiverse listing parameters conditions declared, get overview number combinations. function outputs upto 20 parameters declared along option names (upto 5), upto 10 conditions declared.","code":""},{"path":"http://mucollective.github.io/multiverse/reference/print.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accessing contents of the multiverse object — print","text":"","code":"# S3 method for class 'multiverse' print(x, ...)"},{"path":"http://mucollective.github.io/multiverse/reference/print.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accessing contents of the multiverse object — print","text":"x object class multiverse ... arguments passed methods. Currently ignored.","code":""},{"path":"http://mucollective.github.io/multiverse/reference/stylise_code.html","id":null,"dir":"Reference","previous_headings":"","what":"Stylises the code of multiverse for printing — style_multiverse_code","title":"Stylises the code of multiverse for printing — style_multiverse_code","text":"Stylises code declared multiverse object according tidyverse style guide.","code":""},{"path":"http://mucollective.github.io/multiverse/reference/stylise_code.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stylises the code of multiverse for printing — style_multiverse_code","text":"","code":"style_multiverse_code(.code)"},{"path":"http://mucollective.github.io/multiverse/reference/stylise_code.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stylises the code of multiverse for printing — style_multiverse_code","text":".code quoted (unevaluated) expression surrounded; usually expression within single multiverse code block inside function.","code":""},{"path":"http://mucollective.github.io/multiverse/reference/stylise_code.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Stylises the code of multiverse for printing — style_multiverse_code","text":"object class vertical","code":""},{"path":"http://mucollective.github.io/multiverse/reference/stylise_code.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Stylises the code of multiverse for printing — style_multiverse_code","text":"Since multiverse captures unevaluated expressions, formatting preserved. However, want view code delcared particular multiverse analysis, lack formatting lead difficulty readability. style_multiverse_code primarily intended internal use stylise output based tidyverse style guide custom rules necessary multiverse.","code":""},{"path":"http://mucollective.github.io/multiverse/reference/userlogs.html","id":null,"dir":"Reference","previous_headings":"","what":"Userlogs — userlogs","title":"Userlogs — userlogs","text":"Data collected Jansen et al. study, doi:10.1145/2470654.2481359 Evaluating Efficiency Physical Visualizations investigated factors contributing efficiency physical visualizations.","code":""},{"path":"http://mucollective.github.io/multiverse/reference/userlogs.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Userlogs — userlogs","text":"data frame 512 observations 19 variables: subject Subject identifier group Group / experiment session number participant involved experiment formerSubject Yes/. Whether subject participated previous experiment conducted Jansen et al. conditionrank  modalityname Name modality interaction. One \"Virtual Mouse\", \"Virtual prop\", \"Physical touch\", \"Physical -touch\" repetition 1/2. Whether participant interacting visualization first time. Participants interacted visualizations two different datasets variable stores order. modality Index modality interaction question Index question asked participant part experiment. participant asked 4 questions. questions involved comparison task. trial participant performed 32 trials. Participants answered 4 questions 8 different datasets resulted 32 trials per participant. datasetname participant presented 8 different datasets visualizations. : \"army\", \"carmortality\", \"education\" \"externaldebt\", \"grosscapital\", \"health\", \"hiv\", \"military\" readingTime Time taken participant read visualization seconds error question answered correctly participants. duration question answered correctly participants. perceivedDifficulty Self reported perceived difficulty task participant. perceivedTime Self reported perceived time taken perform task participant.","code":""},{"path":"http://mucollective.github.io/multiverse/reference/userlogs.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Userlogs — userlogs","text":"Yvonne Jansen Pierre Dragicevic Jean-Daniel Fekete. (2013) \"Evaluating Efficiency Physical Visualizations.\" Proceedings SIGCHI Conference Human Factors Computing Systems pp. 2593-2602.","code":""},{"path":"http://mucollective.github.io/multiverse/reference/vis_correlation.html","id":null,"dir":"Reference","previous_headings":"","what":"Participants responses in the study by Harrison et al., ","title":"Participants responses in the study by Harrison et al., ","text":"dataset containing aggregated responses participants. study, participants asked make multiple judgements correlation.","code":""},{"path":"http://mucollective.github.io/multiverse/reference/vis_correlation.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Participants responses in the study by Harrison et al., ","text":"data frame 502 rows 26 variables: participant Participant identifier vis Type visualization used rdirection direction slope line (positive negative) sign direction slope line (1 -1) visandsign combination variable visualization type rdirection rbase coefficient correlation using stimuli generated approach NA jnd Estimated JND value participant condition Condition participant placed (combination vis, rbase approach)","code":""},{"path":"http://mucollective.github.io/multiverse/reference/vis_correlation.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Participants responses in the study by Harrison et al., ","text":"Pierre Dragicevic, Yvonne Jansen, Abhraneel Sarma, Matthew Kay Fanny Chevalier. (2019). \"Increasing transparency research papers explorable multiverse analyses.\" Proceedings 2019 CHI Conference Human Factors Computing Systems pp. 1-15. Kay, Matthew, Jeffrey Heer. (2016). \"Beyond Weber's law: second look ranking visualizations correlation.\" IEEE transactions visualization computer graphics 22.1: 469-478. Lane Harrison, Fumeng Yang, Steven Franconeri, Remco Chang. (2014). \"Ranking visualizations correlation using Weber's law.\" IEEE transactions visualization computer graphics 20.12: 1943-1952.","code":""},{"path":"http://mucollective.github.io/multiverse/news/index.html","id":"multiverse-061","dir":"Changelog","previous_headings":"","what":"multiverse 0.6.1","title":"multiverse 0.6.1","text":"CRAN release: 2022-07-04","code":""},{"path":"http://mucollective.github.io/multiverse/news/index.html","id":"bug-fixes-0-6-1","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"multiverse 0.6.1","text":"Fix #107. Parallel execution multiverse (.e. cores >= 2 argument execute_multiverse) resulted creation new environments execution new environments, different ones stored multiverse object returned expand. Fixed implementation bindings environments copied stored environments, resultant variable bindings can accessed expand (thanks, @markromanmiller, #108). Throw errors empty options declared (eg. trailing commas) inside branch statements","code":""},{"path":"http://mucollective.github.io/multiverse/news/index.html","id":"minor-changes-0-6-1","dir":"Changelog","previous_headings":"","what":"Minor Changes","title":"multiverse 0.6.1","text":"Improved support parallel processing using future backend. Users can set parallel execution workflows unix non-unix systems using future. Multiverses can executed parallel local machine concurrently cluster. Support displaying progress execution using txtProgressBar. Use argument progress = TRUE function execute_multiverse(). .errors column added output expand lists errors encountered execution multiverse. Updates documentation examples, improve walkthrough steps involved creating multiverse analysis.","code":""},{"path":"http://mucollective.github.io/multiverse/news/index.html","id":"multiverse-050","dir":"Changelog","previous_headings":"","what":"multiverse 0.5.0","title":"multiverse 0.5.0","text":"CRAN release: 2021-06-01","code":""},{"path":"http://mucollective.github.io/multiverse/news/index.html","id":"major-changes-0-5-0","dir":"Changelog","previous_headings":"","what":"Major changes:","title":"multiverse 0.5.0","text":"First CRAN release.","code":""}]
